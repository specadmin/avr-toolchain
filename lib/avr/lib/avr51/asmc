В архиве libc.a:

abs.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <abs>:
   0:	97 ff       	sbrs	r25, 7
   2:	00 c0       	rjmp	.+0      	; 0x4 <abs+0x4>
   4:	91 95       	neg	r25
   6:	81 95       	neg	r24
   8:	91 09       	sbc	r25, r1
   a:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

assert.o:     формат файла elf32-avr


Дизассемблирование раздела .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	41 73       	andi	r20, 0x31	; 49
   2:	73 65       	ori	r23, 0x53	; 83
   4:	72 74       	andi	r23, 0x42	; 66
   6:	69 6f       	ori	r22, 0xF9	; 249
   8:	6e 20       	and	r6, r14
   a:	66 61       	ori	r22, 0x16	; 22
   c:	69 6c       	ori	r22, 0xC9	; 201
   e:	65 64       	ori	r22, 0x45	; 69
  10:	3a 20       	and	r3, r10
  12:	28 25       	eor	r18, r8
  14:	73 29       	or	r23, r3
  16:	2c 20       	and	r2, r12
  18:	66 69       	ori	r22, 0x96	; 150
  1a:	6c 65       	ori	r22, 0x5C	; 92
  1c:	20 25       	eor	r18, r0
  1e:	73 2c       	mov	r7, r3
  20:	20 6c       	ori	r18, 0xC0	; 192
  22:	69 6e       	ori	r22, 0xE9	; 233
  24:	65 20       	and	r6, r5
  26:	25 64       	ori	r18, 0x45	; 69
  28:	2e 0a       	sbc	r2, r30
  2a:	00 41       	sbci	r16, 0x10	; 16
  2c:	73 73       	andi	r23, 0x33	; 51
  2e:	65 72       	andi	r22, 0x25	; 37
  30:	74 69       	ori	r23, 0x94	; 148
  32:	6f 6e       	ori	r22, 0xEF	; 239
  34:	20 66       	ori	r18, 0x60	; 96
  36:	61 69       	ori	r22, 0x91	; 145
  38:	6c 65       	ori	r22, 0x5C	; 92
  3a:	64 3a       	cpi	r22, 0xA4	; 164
  3c:	20 28       	or	r2, r0
  3e:	25 73       	andi	r18, 0x35	; 53
  40:	29 2c       	mov	r2, r9
  42:	20 66       	ori	r18, 0x60	; 96
  44:	75 6e       	ori	r23, 0xE5	; 229
  46:	63 74       	andi	r22, 0x43	; 67
  48:	69 6f       	ori	r22, 0xF9	; 249
  4a:	6e 20       	and	r6, r14
  4c:	25 73       	andi	r18, 0x35	; 53
  4e:	2c 20       	and	r2, r12
  50:	66 69       	ori	r22, 0x96	; 150
  52:	6c 65       	ori	r22, 0x5C	; 92
  54:	20 25       	eor	r18, r0
  56:	73 2c       	mov	r7, r3
  58:	20 6c       	ori	r18, 0xC0	; 192
  5a:	69 6e       	ori	r22, 0xE9	; 233
  5c:	65 20       	and	r6, r5
  5e:	25 64       	ori	r18, 0x45	; 69
  60:	2e 0a       	sbc	r2, r30
	...

Дизассемблирование раздела .text.avr-libc:

00000000 <__assert>:
   0:	f0 91 00 00 	lds	r31, 0x0000
   4:	e0 91 00 00 	lds	r30, 0x0000
   8:	00 97       	sbiw	r24, 0x00	; 0
   a:	01 f4       	brne	.+0      	; 0xc <__assert+0xc>
   c:	5f 93       	push	r21
   e:	4f 93       	push	r20
  10:	7f 93       	push	r23
  12:	6f 93       	push	r22
  14:	3f 93       	push	r19
  16:	2f 93       	push	r18
  18:	80 e0       	ldi	r24, 0x00	; 0
  1a:	90 e0       	ldi	r25, 0x00	; 0
  1c:	9f 93       	push	r25
  1e:	8f 93       	push	r24
  20:	ff 93       	push	r31
  22:	ef 93       	push	r30
  24:	0e 94 00 00 	call	0	; 0x0 <__assert>
  28:	8d b7       	in	r24, 0x3d	; 61
  2a:	9e b7       	in	r25, 0x3e	; 62
  2c:	0a 96       	adiw	r24, 0x0a	; 10
  2e:	0f b6       	in	r0, 0x3f	; 63
  30:	f8 94       	cli
  32:	9e bf       	out	0x3e, r25	; 62
  34:	0f be       	out	0x3f, r0	; 63
  36:	8d bf       	out	0x3d, r24	; 61
  38:	00 c0       	rjmp	.+0      	; 0x3a <__assert+0x3a>
  3a:	5f 93       	push	r21
  3c:	4f 93       	push	r20
  3e:	7f 93       	push	r23
  40:	6f 93       	push	r22
  42:	9f 93       	push	r25
  44:	8f 93       	push	r24
  46:	3f 93       	push	r19
  48:	2f 93       	push	r18
  4a:	80 e0       	ldi	r24, 0x00	; 0
  4c:	90 e0       	ldi	r25, 0x00	; 0
  4e:	9f 93       	push	r25
  50:	8f 93       	push	r24
  52:	ff 93       	push	r31
  54:	ef 93       	push	r30
  56:	0e 94 00 00 	call	0	; 0x0 <__assert>
  5a:	8d b7       	in	r24, 0x3d	; 61
  5c:	9e b7       	in	r25, 0x3e	; 62
  5e:	0c 96       	adiw	r24, 0x0c	; 12
  60:	0f b6       	in	r0, 0x3f	; 63
  62:	f8 94       	cli
  64:	9e bf       	out	0x3e, r25	; 62
  66:	0f be       	out	0x3f, r0	; 63
  68:	8d bf       	out	0x3d, r24	; 61
  6a:	0e 94 00 00 	call	0	; 0x0 <__assert>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

atexit.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <atexit_finido>:
   0:	a0 91 00 00 	lds	r26, 0x0000
   4:	b0 91 00 00 	lds	r27, 0x0000
   8:	10 97       	sbiw	r26, 0x00	; 0
   a:	01 f0       	breq	.+0      	; 0xc <atexit_finido+0xc>
   c:	ed 91       	ld	r30, X+
   e:	fc 91       	ld	r31, X
  10:	11 97       	sbiw	r26, 0x01	; 1
  12:	12 96       	adiw	r26, 0x02	; 2
  14:	8d 91       	ld	r24, X+
  16:	9c 91       	ld	r25, X
  18:	13 97       	sbiw	r26, 0x03	; 3
  1a:	90 93 00 00 	sts	0x0000, r25
  1e:	80 93 00 00 	sts	0x0000, r24
  22:	09 95       	icall
  24:	00 c0       	rjmp	.+0      	; 0x26 <atexit_finido+0x26>
  26:	08 95       	ret

00000028 <atexit>:
  28:	cf 93       	push	r28
  2a:	df 93       	push	r29
  2c:	ec 01       	movw	r28, r24
  2e:	84 e0       	ldi	r24, 0x04	; 4
  30:	90 e0       	ldi	r25, 0x00	; 0
  32:	0e 94 00 00 	call	0	; 0x0 <atexit_finido>
  36:	fc 01       	movw	r30, r24
  38:	00 97       	sbiw	r24, 0x00	; 0
  3a:	01 f0       	breq	.+0      	; 0x3c <atexit+0x14>
  3c:	d1 83       	std	Z+1, r29	; 0x01
  3e:	c0 83       	st	Z, r28
  40:	80 91 00 00 	lds	r24, 0x0000
  44:	90 91 00 00 	lds	r25, 0x0000
  48:	93 83       	std	Z+3, r25	; 0x03
  4a:	82 83       	std	Z+2, r24	; 0x02
  4c:	f0 93 00 00 	sts	0x0000, r31
  50:	e0 93 00 00 	sts	0x0000, r30
  54:	80 e0       	ldi	r24, 0x00	; 0
  56:	90 e0       	ldi	r25, 0x00	; 0
  58:	00 c0       	rjmp	.+0      	; 0x5a <atexit+0x32>
  5a:	81 e0       	ldi	r24, 0x01	; 1
  5c:	90 e0       	ldi	r25, 0x00	; 0
  5e:	df 91       	pop	r29
  60:	cf 91       	pop	r28
  62:	08 95       	ret

Дизассемблирование раздела .bss:

00000000 <atexit_p>:
	...

Дизассемблирование раздела .fini8:

00000000 <atexit_fini>:
   0:	0e 94 00 00 	call	0	; 0x0 <atexit_fini>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

bsearch.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <bsearch>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	4c 01       	movw	r8, r24
  1a:	6b 01       	movw	r12, r22
  1c:	ea 01       	movw	r28, r20
  1e:	59 01       	movw	r10, r18
  20:	20 97       	sbiw	r28, 0x00	; 0
  22:	01 f0       	breq	.+0      	; 0x24 <bsearch+0x24>
  24:	ce 01       	movw	r24, r28
  26:	96 95       	lsr	r25
  28:	87 95       	ror	r24
  2a:	8a 9d       	mul	r24, r10
  2c:	70 01       	movw	r14, r0
  2e:	8b 9d       	mul	r24, r11
  30:	f0 0c       	add	r15, r0
  32:	9a 9d       	mul	r25, r10
  34:	f0 0c       	add	r15, r0
  36:	11 24       	eor	r1, r1
  38:	ec 0c       	add	r14, r12
  3a:	fd 1c       	adc	r15, r13
  3c:	b7 01       	movw	r22, r14
  3e:	c4 01       	movw	r24, r8
  40:	f8 01       	movw	r30, r16
  42:	09 95       	icall
  44:	00 97       	sbiw	r24, 0x00	; 0
  46:	01 f0       	breq	.+0      	; 0x48 <bsearch+0x48>
  48:	04 f0       	brlt	.+0      	; 0x4a <bsearch+0x4a>
  4a:	67 01       	movw	r12, r14
  4c:	ca 0c       	add	r12, r10
  4e:	db 1c       	adc	r13, r11
  50:	21 97       	sbiw	r28, 0x01	; 1
  52:	d6 95       	lsr	r29
  54:	c7 95       	ror	r28
  56:	00 c0       	rjmp	.+0      	; 0x58 <bsearch+0x58>
  58:	80 e0       	ldi	r24, 0x00	; 0
  5a:	90 e0       	ldi	r25, 0x00	; 0
  5c:	00 c0       	rjmp	.+0      	; 0x5e <bsearch+0x5e>
  5e:	c7 01       	movw	r24, r14
  60:	df 91       	pop	r29
  62:	cf 91       	pop	r28
  64:	1f 91       	pop	r17
  66:	0f 91       	pop	r16
  68:	ff 90       	pop	r15
  6a:	ef 90       	pop	r14
  6c:	df 90       	pop	r13
  6e:	cf 90       	pop	r12
  70:	bf 90       	pop	r11
  72:	af 90       	pop	r10
  74:	9f 90       	pop	r9
  76:	8f 90       	pop	r8
  78:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

calloc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <calloc>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	86 9f       	mul	r24, r22
   a:	80 01       	movw	r16, r0
   c:	87 9f       	mul	r24, r23
   e:	10 0d       	add	r17, r0
  10:	96 9f       	mul	r25, r22
  12:	10 0d       	add	r17, r0
  14:	11 24       	eor	r1, r1
  16:	c8 01       	movw	r24, r16
  18:	0e 94 00 00 	call	0	; 0x0 <calloc>
  1c:	ec 01       	movw	r28, r24
  1e:	00 97       	sbiw	r24, 0x00	; 0
  20:	01 f0       	breq	.+0      	; 0x22 <calloc+0x22>
  22:	a8 01       	movw	r20, r16
  24:	60 e0       	ldi	r22, 0x00	; 0
  26:	70 e0       	ldi	r23, 0x00	; 0
  28:	0e 94 00 00 	call	0	; 0x0 <calloc>
  2c:	ce 01       	movw	r24, r28
  2e:	df 91       	pop	r29
  30:	cf 91       	pop	r28
  32:	1f 91       	pop	r17
  34:	0f 91       	pop	r16
  36:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

errno.o:     формат файла elf32-avr


Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

dtoa_prf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <dtoa_prf>:
   0:	6f 92       	push	r6
   2:	7f 92       	push	r7
   4:	9f 92       	push	r9
   6:	af 92       	push	r10
   8:	bf 92       	push	r11
   a:	cf 92       	push	r12
   c:	df 92       	push	r13
   e:	ef 92       	push	r14
  10:	ff 92       	push	r15
  12:	0f 93       	push	r16
  14:	1f 93       	push	r17
  16:	cf 93       	push	r28
  18:	df 93       	push	r29
  1a:	cd b7       	in	r28, 0x3d	; 61
  1c:	de b7       	in	r29, 0x3e	; 62
  1e:	29 97       	sbiw	r28, 0x09	; 9
  20:	0f b6       	in	r0, 0x3f	; 63
  22:	f8 94       	cli
  24:	de bf       	out	0x3e, r29	; 62
  26:	0f be       	out	0x3f, r0	; 63
  28:	cd bf       	out	0x3d, r28	; 61
  2a:	6a 01       	movw	r12, r20
  2c:	b2 2e       	mov	r11, r18
  2e:	10 2f       	mov	r17, r16
  30:	0c 33       	cpi	r16, 0x3C	; 60
  32:	00 f4       	brcc	.+0      	; 0x34 <dtoa_prf+0x34>
  34:	ff 24       	eor	r15, r15
  36:	f3 94       	inc	r15
  38:	f0 0e       	add	r15, r16
  3a:	00 c0       	rjmp	.+0      	; 0x3c <dtoa_prf+0x3c>
  3c:	4c e3       	ldi	r20, 0x3C	; 60
  3e:	f4 2e       	mov	r15, r20
  40:	0f 2d       	mov	r16, r15
  42:	27 e0       	ldi	r18, 0x07	; 7
  44:	ae 01       	movw	r20, r28
  46:	4f 5f       	subi	r20, 0xFF	; 255
  48:	5f 4f       	sbci	r21, 0xFF	; 255
  4a:	0e 94 00 00 	call	0	; 0x0 <dtoa_prf>
  4e:	79 81       	ldd	r23, Y+1	; 0x01
  50:	27 2f       	mov	r18, r23
  52:	29 70       	andi	r18, 0x09	; 9
  54:	21 30       	cpi	r18, 0x01	; 1
  56:	01 f0       	breq	.+0      	; 0x58 <dtoa_prf+0x58>
  58:	e1 fc       	sbrc	r14, 1
  5a:	00 c0       	rjmp	.+0      	; 0x5c <dtoa_prf+0x5c>
  5c:	e0 fc       	sbrc	r14, 0
  5e:	00 c0       	rjmp	.+0      	; 0x60 <dtoa_prf+0x60>
  60:	60 e0       	ldi	r22, 0x00	; 0
  62:	00 c0       	rjmp	.+0      	; 0x64 <dtoa_prf+0x64>
  64:	6d e2       	ldi	r22, 0x2D	; 45
  66:	00 c0       	rjmp	.+0      	; 0x68 <dtoa_prf+0x68>
  68:	6b e2       	ldi	r22, 0x2B	; 43
  6a:	00 c0       	rjmp	.+0      	; 0x6c <dtoa_prf+0x6c>
  6c:	60 e2       	ldi	r22, 0x20	; 32
  6e:	ae 2d       	mov	r26, r14
  70:	a0 71       	andi	r26, 0x10	; 16
  72:	73 ff       	sbrs	r23, 3
  74:	00 c0       	rjmp	.+0      	; 0x76 <dtoa_prf+0x76>
  76:	66 23       	and	r22, r22
  78:	01 f0       	breq	.+0      	; 0x7a <dtoa_prf+0x7a>
  7a:	84 e0       	ldi	r24, 0x04	; 4
  7c:	00 c0       	rjmp	.+0      	; 0x7e <dtoa_prf+0x7e>
  7e:	83 e0       	ldi	r24, 0x03	; 3
  80:	8b 15       	cp	r24, r11
  82:	00 f4       	brcc	.+0      	; 0x84 <dtoa_prf+0x84>
  84:	b8 1a       	sub	r11, r24
  86:	00 c0       	rjmp	.+0      	; 0x88 <dtoa_prf+0x88>
  88:	b1 2c       	mov	r11, r1
  8a:	a1 11       	cpse	r26, r1
  8c:	00 c0       	rjmp	.+0      	; 0x8e <dtoa_prf+0x8e>
  8e:	f6 01       	movw	r30, r12
  90:	8b 2d       	mov	r24, r11
  92:	90 e2       	ldi	r25, 0x20	; 32
  94:	88 23       	and	r24, r24
  96:	01 f0       	breq	.+0      	; 0x98 <dtoa_prf+0x98>
  98:	91 93       	st	Z+, r25
  9a:	81 50       	subi	r24, 0x01	; 1
  9c:	00 c0       	rjmp	.+0      	; 0x9e <dtoa_prf+0x9e>
  9e:	cb 0c       	add	r12, r11
  a0:	d1 1c       	adc	r13, r1
  a2:	b1 2c       	mov	r11, r1
  a4:	66 23       	and	r22, r22
  a6:	01 f0       	breq	.+0      	; 0xa8 <dtoa_prf+0xa8>
  a8:	f6 01       	movw	r30, r12
  aa:	60 83       	st	Z, r22
  ac:	96 01       	movw	r18, r12
  ae:	2f 5f       	subi	r18, 0xFF	; 255
  b0:	3f 4f       	sbci	r19, 0xFF	; 255
  b2:	69 01       	movw	r12, r18
  b4:	c6 01       	movw	r24, r12
  b6:	03 96       	adiw	r24, 0x03	; 3
  b8:	e2 fe       	sbrs	r14, 2
  ba:	00 c0       	rjmp	.+0      	; 0xbc <dtoa_prf+0xbc>
  bc:	2e e4       	ldi	r18, 0x4E	; 78
  be:	f6 01       	movw	r30, r12
  c0:	20 83       	st	Z, r18
  c2:	31 e4       	ldi	r19, 0x41	; 65
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <dtoa_prf+0xc6>
  c6:	2e e6       	ldi	r18, 0x6E	; 110
  c8:	f6 01       	movw	r30, r12
  ca:	20 83       	st	Z, r18
  cc:	31 e6       	ldi	r19, 0x61	; 97
  ce:	31 83       	std	Z+1, r19	; 0x01
  d0:	22 83       	std	Z+2, r18	; 0x02
  d2:	fc 01       	movw	r30, r24
  d4:	2b 2d       	mov	r18, r11
  d6:	30 e2       	ldi	r19, 0x20	; 32
  d8:	22 23       	and	r18, r18
  da:	01 f0       	breq	.+0      	; 0xdc <dtoa_prf+0xdc>
  dc:	31 93       	st	Z+, r19
  de:	21 50       	subi	r18, 0x01	; 1
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <dtoa_prf+0xe2>
  e2:	72 ff       	sbrs	r23, 2
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <dtoa_prf+0xe6>
  e6:	66 23       	and	r22, r22
  e8:	01 f0       	breq	.+0      	; 0xea <dtoa_prf+0xea>
  ea:	84 e0       	ldi	r24, 0x04	; 4
  ec:	00 c0       	rjmp	.+0      	; 0xee <dtoa_prf+0xee>
  ee:	83 e0       	ldi	r24, 0x03	; 3
  f0:	8b 15       	cp	r24, r11
  f2:	00 f4       	brcc	.+0      	; 0xf4 <dtoa_prf+0xf4>
  f4:	b8 1a       	sub	r11, r24
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <dtoa_prf+0xf8>
  f8:	b1 2c       	mov	r11, r1
  fa:	a1 11       	cpse	r26, r1
  fc:	00 c0       	rjmp	.+0      	; 0xfe <dtoa_prf+0xfe>
  fe:	f6 01       	movw	r30, r12
 100:	8b 2d       	mov	r24, r11
 102:	90 e2       	ldi	r25, 0x20	; 32
 104:	88 23       	and	r24, r24
 106:	01 f0       	breq	.+0      	; 0x108 <dtoa_prf+0x108>
 108:	91 93       	st	Z+, r25
 10a:	81 50       	subi	r24, 0x01	; 1
 10c:	00 c0       	rjmp	.+0      	; 0x10e <dtoa_prf+0x10e>
 10e:	cb 0c       	add	r12, r11
 110:	d1 1c       	adc	r13, r1
 112:	b1 2c       	mov	r11, r1
 114:	66 23       	and	r22, r22
 116:	01 f0       	breq	.+0      	; 0x118 <dtoa_prf+0x118>
 118:	f6 01       	movw	r30, r12
 11a:	60 83       	st	Z, r22
 11c:	96 01       	movw	r18, r12
 11e:	2f 5f       	subi	r18, 0xFF	; 255
 120:	3f 4f       	sbci	r19, 0xFF	; 255
 122:	69 01       	movw	r12, r18
 124:	c6 01       	movw	r24, r12
 126:	03 96       	adiw	r24, 0x03	; 3
 128:	e2 fe       	sbrs	r14, 2
 12a:	00 c0       	rjmp	.+0      	; 0x12c <dtoa_prf+0x12c>
 12c:	29 e4       	ldi	r18, 0x49	; 73
 12e:	f6 01       	movw	r30, r12
 130:	20 83       	st	Z, r18
 132:	2e e4       	ldi	r18, 0x4E	; 78
 134:	21 83       	std	Z+1, r18	; 0x01
 136:	26 e4       	ldi	r18, 0x46	; 70
 138:	00 c0       	rjmp	.+0      	; 0x13a <dtoa_prf+0x13a>
 13a:	29 e6       	ldi	r18, 0x69	; 105
 13c:	f6 01       	movw	r30, r12
 13e:	20 83       	st	Z, r18
 140:	2e e6       	ldi	r18, 0x6E	; 110
 142:	21 83       	std	Z+1, r18	; 0x01
 144:	26 e6       	ldi	r18, 0x66	; 102
 146:	22 83       	std	Z+2, r18	; 0x02
 148:	fc 01       	movw	r30, r24
 14a:	2b 2d       	mov	r18, r11
 14c:	30 e2       	ldi	r19, 0x20	; 32
 14e:	22 23       	and	r18, r18
 150:	01 f0       	breq	.+0      	; 0x152 <dtoa_prf+0x152>
 152:	31 93       	st	Z+, r19
 154:	21 50       	subi	r18, 0x01	; 1
 156:	00 c0       	rjmp	.+0      	; 0x158 <dtoa_prf+0x158>
 158:	fc 01       	movw	r30, r24
 15a:	eb 0d       	add	r30, r11
 15c:	f1 1d       	adc	r31, r1
 15e:	10 82       	st	Z, r1
 160:	8e ef       	ldi	r24, 0xFE	; 254
 162:	9f ef       	ldi	r25, 0xFF	; 255
 164:	00 c0       	rjmp	.+0      	; 0x166 <dtoa_prf+0x166>
 166:	b1 e0       	ldi	r27, 0x01	; 1
 168:	61 11       	cpse	r22, r1
 16a:	00 c0       	rjmp	.+0      	; 0x16c <dtoa_prf+0x16c>
 16c:	b0 e0       	ldi	r27, 0x00	; 0
 16e:	4b 2f       	mov	r20, r27
 170:	50 e0       	ldi	r21, 0x00	; 0
 172:	18 16       	cp	r1, r24
 174:	19 06       	cpc	r1, r25
 176:	04 f4       	brge	.+0      	; 0x178 <dtoa_prf+0x178>
 178:	9c 01       	movw	r18, r24
 17a:	2f 5f       	subi	r18, 0xFF	; 255
 17c:	3f 4f       	sbci	r19, 0xFF	; 255
 17e:	00 c0       	rjmp	.+0      	; 0x180 <dtoa_prf+0x180>
 180:	21 e0       	ldi	r18, 0x01	; 1
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	24 0f       	add	r18, r20
 186:	35 1f       	adc	r19, r21
 188:	11 23       	and	r17, r17
 18a:	01 f0       	breq	.+0      	; 0x18c <dtoa_prf+0x18c>
 18c:	41 2f       	mov	r20, r17
 18e:	50 e0       	ldi	r21, 0x00	; 0
 190:	4f 5f       	subi	r20, 0xFF	; 255
 192:	5f 4f       	sbci	r21, 0xFF	; 255
 194:	00 c0       	rjmp	.+0      	; 0x196 <dtoa_prf+0x196>
 196:	40 e0       	ldi	r20, 0x00	; 0
 198:	50 e0       	ldi	r21, 0x00	; 0
 19a:	42 0f       	add	r20, r18
 19c:	53 1f       	adc	r21, r19
 19e:	2b 2d       	mov	r18, r11
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	42 17       	cp	r20, r18
 1a4:	53 07       	cpc	r21, r19
 1a6:	04 f4       	brge	.+0      	; 0x1a8 <dtoa_prf+0x1a8>
 1a8:	b4 1a       	sub	r11, r20
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <dtoa_prf+0x1ac>
 1ac:	b1 2c       	mov	r11, r1
 1ae:	2e 2d       	mov	r18, r14
 1b0:	28 71       	andi	r18, 0x18	; 24
 1b2:	01 f4       	brne	.+0      	; 0x1b4 <dtoa_prf+0x1b4>
 1b4:	f6 01       	movw	r30, r12
 1b6:	2b 2d       	mov	r18, r11
 1b8:	30 e2       	ldi	r19, 0x20	; 32
 1ba:	22 23       	and	r18, r18
 1bc:	01 f0       	breq	.+0      	; 0x1be <dtoa_prf+0x1be>
 1be:	31 93       	st	Z+, r19
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <dtoa_prf+0x1c4>
 1c4:	cb 0c       	add	r12, r11
 1c6:	d1 1c       	adc	r13, r1
 1c8:	b1 2c       	mov	r11, r1
 1ca:	bb 23       	and	r27, r27
 1cc:	01 f0       	breq	.+0      	; 0x1ce <dtoa_prf+0x1ce>
 1ce:	f6 01       	movw	r30, r12
 1d0:	60 83       	st	Z, r22
 1d2:	96 01       	movw	r18, r12
 1d4:	2f 5f       	subi	r18, 0xFF	; 255
 1d6:	3f 4f       	sbci	r19, 0xFF	; 255
 1d8:	69 01       	movw	r12, r18
 1da:	a1 11       	cpse	r26, r1
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <dtoa_prf+0x1de>
 1de:	f6 01       	movw	r30, r12
 1e0:	2b 2d       	mov	r18, r11
 1e2:	30 e3       	ldi	r19, 0x30	; 48
 1e4:	22 23       	and	r18, r18
 1e6:	01 f0       	breq	.+0      	; 0x1e8 <dtoa_prf+0x1e8>
 1e8:	31 93       	st	Z+, r19
 1ea:	21 50       	subi	r18, 0x01	; 1
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <dtoa_prf+0x1ee>
 1ee:	cb 0c       	add	r12, r11
 1f0:	d1 1c       	adc	r13, r1
 1f2:	b1 2c       	mov	r11, r1
 1f4:	f8 0e       	add	r15, r24
 1f6:	0a 81       	ldd	r16, Y+2	; 0x02
 1f8:	37 2f       	mov	r19, r23
 1fa:	30 71       	andi	r19, 0x10	; 16
 1fc:	a3 2e       	mov	r10, r19
 1fe:	74 ff       	sbrs	r23, 4
 200:	00 c0       	rjmp	.+0      	; 0x202 <dtoa_prf+0x202>
 202:	01 33       	cpi	r16, 0x31	; 49
 204:	01 f4       	brne	.+0      	; 0x206 <dtoa_prf+0x206>
 206:	fa 94       	dec	r15
 208:	1f 14       	cp	r1, r15
 20a:	04 f4       	brge	.+0      	; 0x20c <dtoa_prf+0x20c>
 20c:	2f 2d       	mov	r18, r15
 20e:	29 30       	cpi	r18, 0x09	; 9
 210:	00 f0       	brcs	.+0      	; 0x212 <dtoa_prf+0x212>
 212:	28 e0       	ldi	r18, 0x08	; 8
 214:	00 c0       	rjmp	.+0      	; 0x216 <dtoa_prf+0x216>
 216:	21 e0       	ldi	r18, 0x01	; 1
 218:	68 2f       	mov	r22, r24
 21a:	39 2f       	mov	r19, r25
 21c:	97 ff       	sbrs	r25, 7
 21e:	00 c0       	rjmp	.+0      	; 0x220 <dtoa_prf+0x220>
 220:	60 e0       	ldi	r22, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	46 2f       	mov	r20, r22
 226:	53 2f       	mov	r21, r19
 228:	61 2c       	mov	r6, r1
 22a:	71 2c       	mov	r7, r1
 22c:	3e e2       	ldi	r19, 0x2E	; 46
 22e:	93 2e       	mov	r9, r19
 230:	bc 01       	movw	r22, r24
 232:	62 1b       	sub	r22, r18
 234:	71 09       	sbc	r23, r1
 236:	9b 01       	movw	r18, r22
 238:	dc 01       	movw	r26, r24
 23a:	a4 1b       	sub	r26, r20
 23c:	b5 0b       	sbc	r27, r21
 23e:	e1 e0       	ldi	r30, 0x01	; 1
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	ec 0f       	add	r30, r28
 244:	fd 1f       	adc	r31, r29
 246:	ae 0f       	add	r26, r30
 248:	bf 1f       	adc	r27, r31
 24a:	e1 2e       	mov	r14, r17
 24c:	f1 2c       	mov	r15, r1
 24e:	f1 94       	neg	r15
 250:	e1 94       	neg	r14
 252:	f1 08       	sbc	r15, r1
 254:	4f 3f       	cpi	r20, 0xFF	; 255
 256:	ff ef       	ldi	r31, 0xFF	; 255
 258:	5f 07       	cpc	r21, r31
 25a:	01 f4       	brne	.+0      	; 0x25c <dtoa_prf+0x25c>
 25c:	f6 01       	movw	r30, r12
 25e:	90 82       	st	Z, r9
 260:	b6 01       	movw	r22, r12
 262:	6f 5f       	subi	r22, 0xFF	; 255
 264:	7f 4f       	sbci	r23, 0xFF	; 255
 266:	6b 01       	movw	r12, r22
 268:	84 17       	cp	r24, r20
 26a:	95 07       	cpc	r25, r21
 26c:	04 f0       	brlt	.+0      	; 0x26e <dtoa_prf+0x26e>
 26e:	24 17       	cp	r18, r20
 270:	35 07       	cpc	r19, r21
 272:	04 f4       	brge	.+0      	; 0x274 <dtoa_prf+0x274>
 274:	bd 01       	movw	r22, r26
 276:	66 0d       	add	r22, r6
 278:	77 1d       	adc	r23, r7
 27a:	fb 01       	movw	r30, r22
 27c:	11 81       	ldd	r17, Z+1	; 0x01
 27e:	00 c0       	rjmp	.+0      	; 0x280 <dtoa_prf+0x280>
 280:	10 e3       	ldi	r17, 0x30	; 48
 282:	41 50       	subi	r20, 0x01	; 1
 284:	51 09       	sbc	r21, r1
 286:	ff ef       	ldi	r31, 0xFF	; 255
 288:	6f 1a       	sub	r6, r31
 28a:	7f 0a       	sbc	r7, r31
 28c:	b6 01       	movw	r22, r12
 28e:	6f 5f       	subi	r22, 0xFF	; 255
 290:	7f 4f       	sbci	r23, 0xFF	; 255
 292:	4e 15       	cp	r20, r14
 294:	5f 05       	cpc	r21, r15
 296:	04 f0       	brlt	.+0      	; 0x298 <dtoa_prf+0x298>
 298:	f6 01       	movw	r30, r12
 29a:	10 83       	st	Z, r17
 29c:	6b 01       	movw	r12, r22
 29e:	00 c0       	rjmp	.+0      	; 0x2a0 <dtoa_prf+0x2a0>
 2a0:	48 17       	cp	r20, r24
 2a2:	59 07       	cpc	r21, r25
 2a4:	01 f4       	brne	.+0      	; 0x2a6 <dtoa_prf+0x2a6>
 2a6:	06 33       	cpi	r16, 0x36	; 54
 2a8:	00 f4       	brcc	.+0      	; 0x2aa <dtoa_prf+0x2aa>
 2aa:	05 33       	cpi	r16, 0x35	; 53
 2ac:	01 f4       	brne	.+0      	; 0x2ae <dtoa_prf+0x2ae>
 2ae:	a1 10       	cpse	r10, r1
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <dtoa_prf+0x2b2>
 2b2:	11 e3       	ldi	r17, 0x31	; 49
 2b4:	f6 01       	movw	r30, r12
 2b6:	10 83       	st	Z, r17
 2b8:	fb 01       	movw	r30, r22
 2ba:	8b 2d       	mov	r24, r11
 2bc:	90 e2       	ldi	r25, 0x20	; 32
 2be:	88 23       	and	r24, r24
 2c0:	01 f0       	breq	.+0      	; 0x2c2 <dtoa_prf+0x2c2>
 2c2:	91 93       	st	Z+, r25
 2c4:	81 50       	subi	r24, 0x01	; 1
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <dtoa_prf+0x2c8>
 2c8:	fb 01       	movw	r30, r22
 2ca:	eb 0d       	add	r30, r11
 2cc:	f1 1d       	adc	r31, r1
 2ce:	10 82       	st	Z, r1
 2d0:	80 e0       	ldi	r24, 0x00	; 0
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	29 96       	adiw	r28, 0x09	; 9
 2d6:	0f b6       	in	r0, 0x3f	; 63
 2d8:	f8 94       	cli
 2da:	de bf       	out	0x3e, r29	; 62
 2dc:	0f be       	out	0x3f, r0	; 63
 2de:	cd bf       	out	0x3d, r28	; 61
 2e0:	df 91       	pop	r29
 2e2:	cf 91       	pop	r28
 2e4:	1f 91       	pop	r17
 2e6:	0f 91       	pop	r16
 2e8:	ff 90       	pop	r15
 2ea:	ef 90       	pop	r14
 2ec:	df 90       	pop	r13
 2ee:	cf 90       	pop	r12
 2f0:	bf 90       	pop	r11
 2f2:	af 90       	pop	r10
 2f4:	9f 90       	pop	r9
 2f6:	7f 90       	pop	r7
 2f8:	6f 90       	pop	r6
 2fa:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

dtostre.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <dtostre>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	1f 92       	push	r1
  12:	cd b7       	in	r28, 0x3d	; 61
  14:	de b7       	in	r29, 0x3e	; 62
  16:	6a 01       	movw	r12, r20
  18:	10 2f       	mov	r17, r16
  1a:	32 2f       	mov	r19, r18
  1c:	28 30       	cpi	r18, 0x08	; 8
  1e:	00 f0       	brcs	.+0      	; 0x20 <dtostre+0x20>
  20:	37 e0       	ldi	r19, 0x07	; 7
  22:	00 e0       	ldi	r16, 0x00	; 0
  24:	23 2f       	mov	r18, r19
  26:	a6 01       	movw	r20, r12
  28:	39 83       	std	Y+1, r19	; 0x01
  2a:	0e 94 00 00 	call	0	; 0x0 <dtostre>
  2e:	d6 01       	movw	r26, r12
  30:	9c 91       	ld	r25, X
  32:	29 2f       	mov	r18, r25
  34:	28 70       	andi	r18, 0x08	; 8
  36:	39 81       	ldd	r19, Y+1	; 0x01
  38:	76 01       	movw	r14, r12
  3a:	90 ff       	sbrs	r25, 0
  3c:	00 c0       	rjmp	.+0      	; 0x3e <dtostre+0x3e>
  3e:	21 11       	cpse	r18, r1
  40:	00 c0       	rjmp	.+0      	; 0x42 <dtostre+0x42>
  42:	bf ef       	ldi	r27, 0xFF	; 255
  44:	eb 1a       	sub	r14, r27
  46:	fb 0a       	sbc	r15, r27
  48:	2d e2       	ldi	r18, 0x2D	; 45
  4a:	f6 01       	movw	r30, r12
  4c:	20 83       	st	Z, r18
  4e:	00 c0       	rjmp	.+0      	; 0x50 <dtostre+0x50>
  50:	11 ff       	sbrs	r17, 1
  52:	00 c0       	rjmp	.+0      	; 0x54 <dtostre+0x54>
  54:	ff ef       	ldi	r31, 0xFF	; 255
  56:	ef 1a       	sub	r14, r31
  58:	ff 0a       	sbc	r15, r31
  5a:	4b e2       	ldi	r20, 0x2B	; 43
  5c:	d6 01       	movw	r26, r12
  5e:	4c 93       	st	X, r20
  60:	00 c0       	rjmp	.+0      	; 0x62 <dtostre+0x62>
  62:	10 ff       	sbrs	r17, 0
  64:	00 c0       	rjmp	.+0      	; 0x66 <dtostre+0x66>
  66:	bf ef       	ldi	r27, 0xFF	; 255
  68:	eb 1a       	sub	r14, r27
  6a:	fb 0a       	sbc	r15, r27
  6c:	40 e2       	ldi	r20, 0x20	; 32
  6e:	f6 01       	movw	r30, r12
  70:	40 83       	st	Z, r20
  72:	21 11       	cpse	r18, r1
  74:	00 c0       	rjmp	.+0      	; 0x76 <dtostre+0x76>
  76:	92 ff       	sbrs	r25, 2
  78:	00 c0       	rjmp	.+0      	; 0x7a <dtostre+0x7a>
  7a:	60 e0       	ldi	r22, 0x00	; 0
  7c:	70 e0       	ldi	r23, 0x00	; 0
  7e:	00 c0       	rjmp	.+0      	; 0x80 <dtostre+0x80>
  80:	60 e0       	ldi	r22, 0x00	; 0
  82:	70 e0       	ldi	r23, 0x00	; 0
  84:	12 ff       	sbrs	r17, 2
  86:	00 c0       	rjmp	.+0      	; 0x88 <dtostre+0x88>
  88:	6c 5f       	subi	r22, 0xFC	; 252
  8a:	7f 4f       	sbci	r23, 0xFF	; 255
  8c:	c7 01       	movw	r24, r14
  8e:	0e 94 00 00 	call	0	; 0x0 <dtostre>
  92:	00 c0       	rjmp	.+0      	; 0x94 <dtostre+0x94>
  94:	f7 01       	movw	r30, r14
  96:	31 96       	adiw	r30, 0x01	; 1
  98:	d6 01       	movw	r26, r12
  9a:	11 96       	adiw	r26, 0x01	; 1
  9c:	2c 91       	ld	r18, X
  9e:	d7 01       	movw	r26, r14
  a0:	2c 93       	st	X, r18
  a2:	21 33       	cpi	r18, 0x31	; 49
  a4:	01 f0       	breq	.+0      	; 0xa6 <dtostre+0xa6>
  a6:	9f 7e       	andi	r25, 0xEF	; 239
  a8:	33 23       	and	r19, r19
  aa:	01 f0       	breq	.+0      	; 0xac <dtostre+0xac>
  ac:	af 01       	movw	r20, r30
  ae:	b6 01       	movw	r22, r12
  b0:	6e 5f       	subi	r22, 0xFE	; 254
  b2:	7f 4f       	sbci	r23, 0xFF	; 255
  b4:	7b 01       	movw	r14, r22
  b6:	6e e2       	ldi	r22, 0x2E	; 46
  b8:	73 2f       	mov	r23, r19
  ba:	7e 0d       	add	r23, r14
  bc:	d7 01       	movw	r26, r14
  be:	2d 91       	ld	r18, X+
  c0:	7d 01       	movw	r14, r26
  c2:	da 01       	movw	r26, r20
  c4:	6d 93       	st	X+, r22
  c6:	ad 01       	movw	r20, r26
  c8:	7e 15       	cp	r23, r14
  ca:	01 f0       	breq	.+0      	; 0xcc <dtostre+0xcc>
  cc:	62 2f       	mov	r22, r18
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <dtostre+0xd0>
  d0:	31 50       	subi	r19, 0x01	; 1
  d2:	df 01       	movw	r26, r30
  d4:	a3 0f       	add	r26, r19
  d6:	b1 1d       	adc	r27, r1
  d8:	fd 01       	movw	r30, r26
  da:	32 96       	adiw	r30, 0x02	; 2
  dc:	11 96       	adiw	r26, 0x01	; 1
  de:	2c 93       	st	X, r18
  e0:	12 ff       	sbrs	r17, 2
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <dtostre+0xe4>
  e4:	25 e4       	ldi	r18, 0x45	; 69
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <dtostre+0xe8>
  e8:	25 e6       	ldi	r18, 0x65	; 101
  ea:	20 83       	st	Z, r18
  ec:	df 01       	movw	r26, r30
  ee:	12 96       	adiw	r26, 0x02	; 2
  f0:	87 ff       	sbrs	r24, 7
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <dtostre+0xf4>
  f4:	9d e2       	ldi	r25, 0x2D	; 45
  f6:	91 83       	std	Z+1, r25	; 0x01
  f8:	81 95       	neg	r24
  fa:	00 c0       	rjmp	.+0      	; 0xfc <dtostre+0xfc>
  fc:	81 11       	cpse	r24, r1
  fe:	00 c0       	rjmp	.+0      	; 0x100 <dtostre+0x100>
 100:	94 ff       	sbrs	r25, 4
 102:	00 c0       	rjmp	.+0      	; 0x104 <dtostre+0x104>
 104:	9d e2       	ldi	r25, 0x2D	; 45
 106:	00 c0       	rjmp	.+0      	; 0x108 <dtostre+0x108>
 108:	9b e2       	ldi	r25, 0x2B	; 43
 10a:	91 83       	std	Z+1, r25	; 0x01
 10c:	90 e3       	ldi	r25, 0x30	; 48
 10e:	8a 30       	cpi	r24, 0x0A	; 10
 110:	04 f0       	brlt	.+0      	; 0x112 <dtostre+0x112>
 112:	9f 5f       	subi	r25, 0xFF	; 255
 114:	8a 50       	subi	r24, 0x0A	; 10
 116:	00 c0       	rjmp	.+0      	; 0x118 <dtostre+0x118>
 118:	9c 93       	st	X, r25
 11a:	80 5d       	subi	r24, 0xD0	; 208
 11c:	11 96       	adiw	r26, 0x01	; 1
 11e:	8c 93       	st	X, r24
 120:	11 97       	sbiw	r26, 0x01	; 1
 122:	12 96       	adiw	r26, 0x02	; 2
 124:	1c 92       	st	X, r1
 126:	c6 01       	movw	r24, r12
 128:	0f 90       	pop	r0
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	1f 91       	pop	r17
 130:	0f 91       	pop	r16
 132:	ff 90       	pop	r15
 134:	ef 90       	pop	r14
 136:	df 90       	pop	r13
 138:	cf 90       	pop	r12
 13a:	08 95       	ret

Дизассемблирование раздела .progmem.data:

00000000 <str_inf.1819>:
   0:	69 6e       	ori	r22, 0xE9	; 233
   2:	66 00       	.word	0x0066	; ????
   4:	49 4e       	sbci	r20, 0xE9	; 233
   6:	46 00       	.word	0x0046	; ????

00000008 <str_nan.1818>:
   8:	6e 61       	ori	r22, 0x1E	; 30
   a:	6e 00       	.word	0x006e	; ????
   c:	4e 41       	sbci	r20, 0x1E	; 30
   e:	4e 00       	.word	0x004e	; ????

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

dtostrf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <dtostrf>:
   0:	ef 92       	push	r14
   2:	0f 93       	push	r16
   4:	1f 93       	push	r17
   6:	cf 93       	push	r28
   8:	df 93       	push	r29
   a:	e8 01       	movw	r28, r16
   c:	47 ff       	sbrs	r20, 7
   e:	00 c0       	rjmp	.+0      	; 0x10 <dtostrf+0x10>
  10:	34 e1       	ldi	r19, 0x14	; 20
  12:	00 c0       	rjmp	.+0      	; 0x14 <dtostrf+0x14>
  14:	34 e0       	ldi	r19, 0x04	; 4
  16:	e4 2f       	mov	r30, r20
  18:	ff 27       	eor	r31, r31
  1a:	e7 fd       	sbrc	r30, 7
  1c:	f0 95       	com	r31
  1e:	f7 ff       	sbrs	r31, 7
  20:	00 c0       	rjmp	.+0      	; 0x22 <dtostrf+0x22>
  22:	f1 95       	neg	r31
  24:	e1 95       	neg	r30
  26:	f1 09       	sbc	r31, r1
  28:	e3 2e       	mov	r14, r19
  2a:	02 2f       	mov	r16, r18
  2c:	2e 2f       	mov	r18, r30
  2e:	ae 01       	movw	r20, r28
  30:	0e 94 00 00 	call	0	; 0x0 <dtostrf>
  34:	ce 01       	movw	r24, r28
  36:	df 91       	pop	r29
  38:	cf 91       	pop	r28
  3a:	1f 91       	pop	r17
  3c:	0f 91       	pop	r16
  3e:	ef 90       	pop	r14
  40:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

getenv.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <getenv>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

labs.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <labs>:
   0:	97 ff       	sbrs	r25, 7
   2:	00 c0       	rjmp	.+0      	; 0x4 <labs+0x4>
   4:	90 95       	com	r25
   6:	80 95       	com	r24
   8:	70 95       	com	r23
   a:	61 95       	neg	r22
   c:	7f 4f       	sbci	r23, 0xFF	; 255
   e:	8f 4f       	sbci	r24, 0xFF	; 255
  10:	9f 4f       	sbci	r25, 0xFF	; 255
  12:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

malloc.o:     формат файла elf32-avr


Дизассемблирование раздела .data:

00000000 <__malloc_heap_end>:
	...

00000002 <__malloc_heap_start>:
	...

00000004 <__malloc_margin>:
   4:	20 00       	.word	0x0020	; ????

Дизассемблирование раздела .text.avr-libc:

00000000 <malloc>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	82 30       	cpi	r24, 0x02	; 2
   6:	91 05       	cpc	r25, r1
   8:	00 f4       	brcc	.+0      	; 0xa <malloc+0xa>
   a:	82 e0       	ldi	r24, 0x02	; 2
   c:	90 e0       	ldi	r25, 0x00	; 0
   e:	e0 91 00 00 	lds	r30, 0x0000
  12:	f0 91 00 00 	lds	r31, 0x0000
  16:	20 e0       	ldi	r18, 0x00	; 0
  18:	30 e0       	ldi	r19, 0x00	; 0
  1a:	a0 e0       	ldi	r26, 0x00	; 0
  1c:	b0 e0       	ldi	r27, 0x00	; 0
  1e:	30 97       	sbiw	r30, 0x00	; 0
  20:	01 f0       	breq	.+0      	; 0x22 <malloc+0x22>
  22:	40 81       	ld	r20, Z
  24:	51 81       	ldd	r21, Z+1	; 0x01
  26:	48 17       	cp	r20, r24
  28:	59 07       	cpc	r21, r25
  2a:	00 f0       	brcs	.+0      	; 0x2c <malloc+0x2c>
  2c:	48 17       	cp	r20, r24
  2e:	59 07       	cpc	r21, r25
  30:	01 f4       	brne	.+0      	; 0x32 <malloc+0x32>
  32:	82 81       	ldd	r24, Z+2	; 0x02
  34:	93 81       	ldd	r25, Z+3	; 0x03
  36:	10 97       	sbiw	r26, 0x00	; 0
  38:	01 f0       	breq	.+0      	; 0x3a <malloc+0x3a>
  3a:	13 96       	adiw	r26, 0x03	; 3
  3c:	9c 93       	st	X, r25
  3e:	8e 93       	st	-X, r24
  40:	12 97       	sbiw	r26, 0x02	; 2
  42:	00 c0       	rjmp	.+0      	; 0x44 <malloc+0x44>
  44:	90 93 00 00 	sts	0x0000, r25
  48:	80 93 00 00 	sts	0x0000, r24
  4c:	00 c0       	rjmp	.+0      	; 0x4e <malloc+0x4e>
  4e:	21 15       	cp	r18, r1
  50:	31 05       	cpc	r19, r1
  52:	01 f0       	breq	.+0      	; 0x54 <malloc+0x54>
  54:	42 17       	cp	r20, r18
  56:	53 07       	cpc	r21, r19
  58:	00 f0       	brcs	.+0      	; 0x5a <malloc+0x5a>
  5a:	a9 01       	movw	r20, r18
  5c:	db 01       	movw	r26, r22
  5e:	00 c0       	rjmp	.+0      	; 0x60 <malloc+0x60>
  60:	ef 01       	movw	r28, r30
  62:	9a 01       	movw	r18, r20
  64:	bd 01       	movw	r22, r26
  66:	df 01       	movw	r26, r30
  68:	02 80       	ldd	r0, Z+2	; 0x02
  6a:	f3 81       	ldd	r31, Z+3	; 0x03
  6c:	e0 2d       	mov	r30, r0
  6e:	00 c0       	rjmp	.+0      	; 0x70 <malloc+0x70>
  70:	21 15       	cp	r18, r1
  72:	31 05       	cpc	r19, r1
  74:	01 f0       	breq	.+0      	; 0x76 <malloc+0x76>
  76:	28 1b       	sub	r18, r24
  78:	39 0b       	sbc	r19, r25
  7a:	24 30       	cpi	r18, 0x04	; 4
  7c:	31 05       	cpc	r19, r1
  7e:	00 f4       	brcc	.+0      	; 0x80 <malloc+0x80>
  80:	8a 81       	ldd	r24, Y+2	; 0x02
  82:	9b 81       	ldd	r25, Y+3	; 0x03
  84:	61 15       	cp	r22, r1
  86:	71 05       	cpc	r23, r1
  88:	01 f0       	breq	.+0      	; 0x8a <malloc+0x8a>
  8a:	fb 01       	movw	r30, r22
  8c:	93 83       	std	Z+3, r25	; 0x03
  8e:	82 83       	std	Z+2, r24	; 0x02
  90:	00 c0       	rjmp	.+0      	; 0x92 <malloc+0x92>
  92:	90 93 00 00 	sts	0x0000, r25
  96:	80 93 00 00 	sts	0x0000, r24
  9a:	fe 01       	movw	r30, r28
  9c:	32 96       	adiw	r30, 0x02	; 2
  9e:	00 c0       	rjmp	.+0      	; 0xa0 <malloc+0xa0>
  a0:	fe 01       	movw	r30, r28
  a2:	e2 0f       	add	r30, r18
  a4:	f3 1f       	adc	r31, r19
  a6:	81 93       	st	Z+, r24
  a8:	91 93       	st	Z+, r25
  aa:	22 50       	subi	r18, 0x02	; 2
  ac:	31 09       	sbc	r19, r1
  ae:	39 83       	std	Y+1, r19	; 0x01
  b0:	28 83       	st	Y, r18
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <malloc+0xb4>
  b4:	20 91 00 00 	lds	r18, 0x0000
  b8:	30 91 00 00 	lds	r19, 0x0000
  bc:	23 2b       	or	r18, r19
  be:	01 f4       	brne	.+0      	; 0xc0 <malloc+0xc0>
  c0:	20 91 00 00 	lds	r18, 0x0000
  c4:	30 91 00 00 	lds	r19, 0x0000
  c8:	30 93 00 00 	sts	0x0000, r19
  cc:	20 93 00 00 	sts	0x0000, r18
  d0:	20 91 00 00 	lds	r18, 0x0000
  d4:	30 91 00 00 	lds	r19, 0x0000
  d8:	21 15       	cp	r18, r1
  da:	31 05       	cpc	r19, r1
  dc:	01 f4       	brne	.+0      	; 0xde <malloc+0xde>
  de:	2d b7       	in	r18, 0x3d	; 61
  e0:	3e b7       	in	r19, 0x3e	; 62
  e2:	40 91 00 00 	lds	r20, 0x0000
  e6:	50 91 00 00 	lds	r21, 0x0000
  ea:	24 1b       	sub	r18, r20
  ec:	35 0b       	sbc	r19, r21
  ee:	e0 91 00 00 	lds	r30, 0x0000
  f2:	f0 91 00 00 	lds	r31, 0x0000
  f6:	e2 17       	cp	r30, r18
  f8:	f3 07       	cpc	r31, r19
  fa:	00 f4       	brcc	.+0      	; 0xfc <malloc+0xfc>
  fc:	2e 1b       	sub	r18, r30
  fe:	3f 0b       	sbc	r19, r31
 100:	28 17       	cp	r18, r24
 102:	39 07       	cpc	r19, r25
 104:	00 f0       	brcs	.+0      	; 0x106 <malloc+0x106>
 106:	ac 01       	movw	r20, r24
 108:	4e 5f       	subi	r20, 0xFE	; 254
 10a:	5f 4f       	sbci	r21, 0xFF	; 255
 10c:	24 17       	cp	r18, r20
 10e:	35 07       	cpc	r19, r21
 110:	00 f0       	brcs	.+0      	; 0x112 <malloc+0x112>
 112:	4e 0f       	add	r20, r30
 114:	5f 1f       	adc	r21, r31
 116:	50 93 00 00 	sts	0x0000, r21
 11a:	40 93 00 00 	sts	0x0000, r20
 11e:	81 93       	st	Z+, r24
 120:	91 93       	st	Z+, r25
 122:	00 c0       	rjmp	.+0      	; 0x124 <malloc+0x124>
 124:	e0 e0       	ldi	r30, 0x00	; 0
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	cf 01       	movw	r24, r30
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	08 95       	ret

00000130 <free>:
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	00 97       	sbiw	r24, 0x00	; 0
 136:	01 f4       	brne	.+0      	; 0x138 <free+0x8>
 138:	00 c0       	rjmp	.+0      	; 0x13a <free+0xa>
 13a:	fc 01       	movw	r30, r24
 13c:	32 97       	sbiw	r30, 0x02	; 2
 13e:	13 82       	std	Z+3, r1	; 0x03
 140:	12 82       	std	Z+2, r1	; 0x02
 142:	c0 91 00 00 	lds	r28, 0x0000
 146:	d0 91 00 00 	lds	r29, 0x0000
 14a:	20 97       	sbiw	r28, 0x00	; 0
 14c:	01 f4       	brne	.+0      	; 0x14e <free+0x1e>
 14e:	20 81       	ld	r18, Z
 150:	31 81       	ldd	r19, Z+1	; 0x01
 152:	28 0f       	add	r18, r24
 154:	39 1f       	adc	r19, r25
 156:	80 91 00 00 	lds	r24, 0x0000
 15a:	90 91 00 00 	lds	r25, 0x0000
 15e:	82 17       	cp	r24, r18
 160:	93 07       	cpc	r25, r19
 162:	01 f4       	brne	.+0      	; 0x164 <free+0x34>
 164:	f0 93 00 00 	sts	0x0000, r31
 168:	e0 93 00 00 	sts	0x0000, r30
 16c:	00 c0       	rjmp	.+0      	; 0x16e <free+0x3e>
 16e:	de 01       	movw	r26, r28
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	ae 17       	cp	r26, r30
 176:	bf 07       	cpc	r27, r31
 178:	00 f4       	brcc	.+0      	; 0x17a <free+0x4a>
 17a:	12 96       	adiw	r26, 0x02	; 2
 17c:	4d 91       	ld	r20, X+
 17e:	5c 91       	ld	r21, X
 180:	13 97       	sbiw	r26, 0x03	; 3
 182:	9d 01       	movw	r18, r26
 184:	41 15       	cp	r20, r1
 186:	51 05       	cpc	r21, r1
 188:	01 f0       	breq	.+0      	; 0x18a <free+0x5a>
 18a:	da 01       	movw	r26, r20
 18c:	00 c0       	rjmp	.+0      	; 0x18e <free+0x5e>
 18e:	b3 83       	std	Z+3, r27	; 0x03
 190:	a2 83       	std	Z+2, r26	; 0x02
 192:	40 81       	ld	r20, Z
 194:	51 81       	ldd	r21, Z+1	; 0x01
 196:	84 0f       	add	r24, r20
 198:	95 1f       	adc	r25, r21
 19a:	8a 17       	cp	r24, r26
 19c:	9b 07       	cpc	r25, r27
 19e:	01 f4       	brne	.+0      	; 0x1a0 <free+0x70>
 1a0:	8d 91       	ld	r24, X+
 1a2:	9c 91       	ld	r25, X
 1a4:	11 97       	sbiw	r26, 0x01	; 1
 1a6:	84 0f       	add	r24, r20
 1a8:	95 1f       	adc	r25, r21
 1aa:	02 96       	adiw	r24, 0x02	; 2
 1ac:	91 83       	std	Z+1, r25	; 0x01
 1ae:	80 83       	st	Z, r24
 1b0:	12 96       	adiw	r26, 0x02	; 2
 1b2:	8d 91       	ld	r24, X+
 1b4:	9c 91       	ld	r25, X
 1b6:	13 97       	sbiw	r26, 0x03	; 3
 1b8:	93 83       	std	Z+3, r25	; 0x03
 1ba:	82 83       	std	Z+2, r24	; 0x02
 1bc:	21 15       	cp	r18, r1
 1be:	31 05       	cpc	r19, r1
 1c0:	01 f4       	brne	.+0      	; 0x1c2 <free+0x92>
 1c2:	f0 93 00 00 	sts	0x0000, r31
 1c6:	e0 93 00 00 	sts	0x0000, r30
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <free+0x9c>
 1cc:	d9 01       	movw	r26, r18
 1ce:	13 96       	adiw	r26, 0x03	; 3
 1d0:	fc 93       	st	X, r31
 1d2:	ee 93       	st	-X, r30
 1d4:	12 97       	sbiw	r26, 0x02	; 2
 1d6:	4d 91       	ld	r20, X+
 1d8:	5d 91       	ld	r21, X+
 1da:	a4 0f       	add	r26, r20
 1dc:	b5 1f       	adc	r27, r21
 1de:	ea 17       	cp	r30, r26
 1e0:	fb 07       	cpc	r31, r27
 1e2:	01 f4       	brne	.+0      	; 0x1e4 <free+0xb4>
 1e4:	80 81       	ld	r24, Z
 1e6:	91 81       	ldd	r25, Z+1	; 0x01
 1e8:	84 0f       	add	r24, r20
 1ea:	95 1f       	adc	r25, r21
 1ec:	02 96       	adiw	r24, 0x02	; 2
 1ee:	d9 01       	movw	r26, r18
 1f0:	11 96       	adiw	r26, 0x01	; 1
 1f2:	9c 93       	st	X, r25
 1f4:	8e 93       	st	-X, r24
 1f6:	82 81       	ldd	r24, Z+2	; 0x02
 1f8:	93 81       	ldd	r25, Z+3	; 0x03
 1fa:	13 96       	adiw	r26, 0x03	; 3
 1fc:	9c 93       	st	X, r25
 1fe:	8e 93       	st	-X, r24
 200:	12 97       	sbiw	r26, 0x02	; 2
 202:	e0 e0       	ldi	r30, 0x00	; 0
 204:	f0 e0       	ldi	r31, 0x00	; 0
 206:	8a 81       	ldd	r24, Y+2	; 0x02
 208:	9b 81       	ldd	r25, Y+3	; 0x03
 20a:	00 97       	sbiw	r24, 0x00	; 0
 20c:	01 f0       	breq	.+0      	; 0x20e <free+0xde>
 20e:	fe 01       	movw	r30, r28
 210:	ec 01       	movw	r28, r24
 212:	00 c0       	rjmp	.+0      	; 0x214 <free+0xe4>
 214:	ce 01       	movw	r24, r28
 216:	02 96       	adiw	r24, 0x02	; 2
 218:	28 81       	ld	r18, Y
 21a:	39 81       	ldd	r19, Y+1	; 0x01
 21c:	82 0f       	add	r24, r18
 21e:	93 1f       	adc	r25, r19
 220:	20 91 00 00 	lds	r18, 0x0000
 224:	30 91 00 00 	lds	r19, 0x0000
 228:	28 17       	cp	r18, r24
 22a:	39 07       	cpc	r19, r25
 22c:	01 f4       	brne	.+0      	; 0x22e <free+0xfe>
 22e:	30 97       	sbiw	r30, 0x00	; 0
 230:	01 f4       	brne	.+0      	; 0x232 <free+0x102>
 232:	10 92 00 00 	sts	0x0000, r1
 236:	10 92 00 00 	sts	0x0000, r1
 23a:	00 c0       	rjmp	.+0      	; 0x23c <free+0x10c>
 23c:	13 82       	std	Z+3, r1	; 0x03
 23e:	12 82       	std	Z+2, r1	; 0x02
 240:	d0 93 00 00 	sts	0x0000, r29
 244:	c0 93 00 00 	sts	0x0000, r28
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

qsort.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <swapfunc>:
   0:	dc 01       	movw	r26, r24
   2:	fb 01       	movw	r30, r22
   4:	8c 91       	ld	r24, X
   6:	90 81       	ld	r25, Z
   8:	9d 93       	st	X+, r25
   a:	81 93       	st	Z+, r24
   c:	41 50       	subi	r20, 0x01	; 1
   e:	51 09       	sbc	r21, r1
  10:	14 16       	cp	r1, r20
  12:	15 06       	cpc	r1, r21
  14:	04 f0       	brlt	.+0      	; 0x16 <swapfunc+0x16>
  16:	08 95       	ret

00000018 <med3>:
  18:	cf 92       	push	r12
  1a:	df 92       	push	r13
  1c:	ef 92       	push	r14
  1e:	ff 92       	push	r15
  20:	0f 93       	push	r16
  22:	1f 93       	push	r17
  24:	cf 93       	push	r28
  26:	df 93       	push	r29
  28:	6c 01       	movw	r12, r24
  2a:	7b 01       	movw	r14, r22
  2c:	8a 01       	movw	r16, r20
  2e:	e9 01       	movw	r28, r18
  30:	f9 01       	movw	r30, r18
  32:	09 95       	icall
  34:	b8 01       	movw	r22, r16
  36:	97 ff       	sbrs	r25, 7
  38:	00 c0       	rjmp	.+0      	; 0x3a <med3+0x22>
  3a:	c7 01       	movw	r24, r14
  3c:	fe 01       	movw	r30, r28
  3e:	09 95       	icall
  40:	97 fd       	sbrc	r25, 7
  42:	00 c0       	rjmp	.+0      	; 0x44 <med3+0x2c>
  44:	b8 01       	movw	r22, r16
  46:	c6 01       	movw	r24, r12
  48:	fe 01       	movw	r30, r28
  4a:	09 95       	icall
  4c:	97 fd       	sbrc	r25, 7
  4e:	00 c0       	rjmp	.+0      	; 0x50 <med3+0x38>
  50:	86 01       	movw	r16, r12
  52:	00 c0       	rjmp	.+0      	; 0x54 <med3+0x3c>
  54:	87 01       	movw	r16, r14
  56:	00 c0       	rjmp	.+0      	; 0x58 <med3+0x40>
  58:	c7 01       	movw	r24, r14
  5a:	fe 01       	movw	r30, r28
  5c:	09 95       	icall
  5e:	18 16       	cp	r1, r24
  60:	19 06       	cpc	r1, r25
  62:	04 f0       	brlt	.+0      	; 0x64 <med3+0x4c>
  64:	b8 01       	movw	r22, r16
  66:	c6 01       	movw	r24, r12
  68:	fe 01       	movw	r30, r28
  6a:	09 95       	icall
  6c:	97 ff       	sbrs	r25, 7
  6e:	00 c0       	rjmp	.+0      	; 0x70 <med3+0x58>
  70:	c6 01       	movw	r24, r12
  72:	00 c0       	rjmp	.+0      	; 0x74 <med3+0x5c>
  74:	c7 01       	movw	r24, r14
  76:	00 c0       	rjmp	.+0      	; 0x78 <med3+0x60>
  78:	c8 01       	movw	r24, r16
  7a:	df 91       	pop	r29
  7c:	cf 91       	pop	r28
  7e:	1f 91       	pop	r17
  80:	0f 91       	pop	r16
  82:	ff 90       	pop	r15
  84:	ef 90       	pop	r14
  86:	df 90       	pop	r13
  88:	cf 90       	pop	r12
  8a:	08 95       	ret

0000008c <qsort>:
  8c:	2f 92       	push	r2
  8e:	3f 92       	push	r3
  90:	4f 92       	push	r4
  92:	5f 92       	push	r5
  94:	6f 92       	push	r6
  96:	7f 92       	push	r7
  98:	8f 92       	push	r8
  9a:	9f 92       	push	r9
  9c:	af 92       	push	r10
  9e:	bf 92       	push	r11
  a0:	cf 92       	push	r12
  a2:	df 92       	push	r13
  a4:	ef 92       	push	r14
  a6:	ff 92       	push	r15
  a8:	0f 93       	push	r16
  aa:	1f 93       	push	r17
  ac:	cf 93       	push	r28
  ae:	df 93       	push	r29
  b0:	cd b7       	in	r28, 0x3d	; 61
  b2:	de b7       	in	r29, 0x3e	; 62
  b4:	2c 97       	sbiw	r28, 0x0c	; 12
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	f8 94       	cli
  ba:	de bf       	out	0x3e, r29	; 62
  bc:	0f be       	out	0x3f, r0	; 63
  be:	cd bf       	out	0x3d, r28	; 61
  c0:	8c 01       	movw	r16, r24
  c2:	6b 01       	movw	r12, r22
  c4:	5c 87       	std	Y+12, r21	; 0x0c
  c6:	4b 87       	std	Y+11, r20	; 0x0b
  c8:	79 01       	movw	r14, r18
  ca:	51 95       	neg	r21
  cc:	41 95       	neg	r20
  ce:	51 09       	sbc	r21, r1
  d0:	58 87       	std	Y+8, r21	; 0x08
  d2:	4f 83       	std	Y+7, r20	; 0x07
  d4:	2b 85       	ldd	r18, Y+11	; 0x0b
  d6:	3c 85       	ldd	r19, Y+12	; 0x0c
  d8:	20 0f       	add	r18, r16
  da:	31 1f       	adc	r19, r17
  dc:	3a 83       	std	Y+2, r19	; 0x02
  de:	29 83       	std	Y+1, r18	; 0x01
  e0:	37 e0       	ldi	r19, 0x07	; 7
  e2:	c3 16       	cp	r12, r19
  e4:	d1 04       	cpc	r13, r1
  e6:	00 f4       	brcc	.+0      	; 0xe8 <qsort+0x5c>
  e8:	89 80       	ldd	r8, Y+1	; 0x01
  ea:	9a 80       	ldd	r9, Y+2	; 0x02
  ec:	4b 85       	ldd	r20, Y+11	; 0x0b
  ee:	5c 85       	ldd	r21, Y+12	; 0x0c
  f0:	c4 9e       	mul	r12, r20
  f2:	50 01       	movw	r10, r0
  f4:	c5 9e       	mul	r12, r21
  f6:	b0 0c       	add	r11, r0
  f8:	d4 9e       	mul	r13, r20
  fa:	b0 0c       	add	r11, r0
  fc:	11 24       	eor	r1, r1
  fe:	a0 0e       	add	r10, r16
 100:	b1 1e       	adc	r11, r17
 102:	8a 14       	cp	r8, r10
 104:	9b 04       	cpc	r9, r11
 106:	00 f0       	brcs	.+0      	; 0x108 <qsort+0x7c>
 108:	00 c0       	rjmp	.+0      	; 0x10a <qsort+0x7e>
 10a:	34 01       	movw	r6, r8
 10c:	06 15       	cp	r16, r6
 10e:	17 05       	cpc	r17, r7
 110:	00 f4       	brcc	.+0      	; 0x112 <qsort+0x86>
 112:	63 01       	movw	r12, r6
 114:	8b 85       	ldd	r24, Y+11	; 0x0b
 116:	9c 85       	ldd	r25, Y+12	; 0x0c
 118:	c8 1a       	sub	r12, r24
 11a:	d9 0a       	sbc	r13, r25
 11c:	b3 01       	movw	r22, r6
 11e:	c6 01       	movw	r24, r12
 120:	f7 01       	movw	r30, r14
 122:	09 95       	icall
 124:	18 16       	cp	r1, r24
 126:	19 06       	cpc	r1, r25
 128:	04 f4       	brge	.+0      	; 0x12a <qsort+0x9e>
 12a:	4b 85       	ldd	r20, Y+11	; 0x0b
 12c:	5c 85       	ldd	r21, Y+12	; 0x0c
 12e:	b6 01       	movw	r22, r12
 130:	c3 01       	movw	r24, r6
 132:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 136:	36 01       	movw	r6, r12
 138:	00 c0       	rjmp	.+0      	; 0x13a <qsort+0xae>
 13a:	2b 85       	ldd	r18, Y+11	; 0x0b
 13c:	3c 85       	ldd	r19, Y+12	; 0x0c
 13e:	82 0e       	add	r8, r18
 140:	93 1e       	adc	r9, r19
 142:	00 c0       	rjmp	.+0      	; 0x144 <qsort+0xb8>
 144:	c6 01       	movw	r24, r12
 146:	96 95       	lsr	r25
 148:	87 95       	ror	r24
 14a:	4b 85       	ldd	r20, Y+11	; 0x0b
 14c:	5c 85       	ldd	r21, Y+12	; 0x0c
 14e:	84 9f       	mul	r24, r20
 150:	50 01       	movw	r10, r0
 152:	85 9f       	mul	r24, r21
 154:	b0 0c       	add	r11, r0
 156:	94 9f       	mul	r25, r20
 158:	b0 0c       	add	r11, r0
 15a:	11 24       	eor	r1, r1
 15c:	a0 0e       	add	r10, r16
 15e:	b1 1e       	adc	r11, r17
 160:	c6 01       	movw	r24, r12
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	9e 83       	std	Y+6, r25	; 0x06
 166:	8d 83       	std	Y+5, r24	; 0x05
 168:	97 e0       	ldi	r25, 0x07	; 7
 16a:	c9 16       	cp	r12, r25
 16c:	d1 04       	cpc	r13, r1
 16e:	01 f4       	brne	.+0      	; 0x170 <qsort+0xe4>
 170:	00 c0       	rjmp	.+0      	; 0x172 <qsort+0xe6>
 172:	ed 81       	ldd	r30, Y+5	; 0x05
 174:	fe 81       	ldd	r31, Y+6	; 0x06
 176:	e4 9f       	mul	r30, r20
 178:	30 01       	movw	r6, r0
 17a:	e5 9f       	mul	r30, r21
 17c:	70 0c       	add	r7, r0
 17e:	f4 9f       	mul	r31, r20
 180:	70 0c       	add	r7, r0
 182:	11 24       	eor	r1, r1
 184:	60 0e       	add	r6, r16
 186:	71 1e       	adc	r7, r17
 188:	f9 e2       	ldi	r31, 0x29	; 41
 18a:	cf 16       	cp	r12, r31
 18c:	d1 04       	cpc	r13, r1
 18e:	00 f0       	brcs	.+0      	; 0x190 <qsort+0x104>
 190:	c6 01       	movw	r24, r12
 192:	23 e0       	ldi	r18, 0x03	; 3
 194:	96 95       	lsr	r25
 196:	87 95       	ror	r24
 198:	2a 95       	dec	r18
 19a:	01 f4       	brne	.+0      	; 0x19c <qsort+0x110>
 19c:	84 9f       	mul	r24, r20
 19e:	40 01       	movw	r8, r0
 1a0:	85 9f       	mul	r24, r21
 1a2:	90 0c       	add	r9, r0
 1a4:	94 9f       	mul	r25, r20
 1a6:	90 0c       	add	r9, r0
 1a8:	11 24       	eor	r1, r1
 1aa:	14 01       	movw	r2, r8
 1ac:	22 0c       	add	r2, r2
 1ae:	33 1c       	adc	r3, r3
 1b0:	a8 01       	movw	r20, r16
 1b2:	42 0d       	add	r20, r2
 1b4:	53 1d       	adc	r21, r3
 1b6:	b8 01       	movw	r22, r16
 1b8:	68 0d       	add	r22, r8
 1ba:	79 1d       	adc	r23, r9
 1bc:	97 01       	movw	r18, r14
 1be:	c8 01       	movw	r24, r16
 1c0:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 1c4:	2c 01       	movw	r4, r24
 1c6:	a5 01       	movw	r20, r10
 1c8:	48 0d       	add	r20, r8
 1ca:	59 1d       	adc	r21, r9
 1cc:	91 94       	neg	r9
 1ce:	81 94       	neg	r8
 1d0:	91 08       	sbc	r9, r1
 1d2:	97 01       	movw	r18, r14
 1d4:	b5 01       	movw	r22, r10
 1d6:	c5 01       	movw	r24, r10
 1d8:	88 0d       	add	r24, r8
 1da:	99 1d       	adc	r25, r9
 1dc:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 1e0:	5c 01       	movw	r10, r24
 1e2:	b3 01       	movw	r22, r6
 1e4:	68 0d       	add	r22, r8
 1e6:	79 1d       	adc	r23, r9
 1e8:	97 01       	movw	r18, r14
 1ea:	a3 01       	movw	r20, r6
 1ec:	c3 01       	movw	r24, r6
 1ee:	82 19       	sub	r24, r2
 1f0:	93 09       	sbc	r25, r3
 1f2:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 1f6:	3c 01       	movw	r6, r24
 1f8:	00 c0       	rjmp	.+0      	; 0x1fa <qsort+0x16e>
 1fa:	28 01       	movw	r4, r16
 1fc:	97 01       	movw	r18, r14
 1fe:	a3 01       	movw	r20, r6
 200:	b5 01       	movw	r22, r10
 202:	c2 01       	movw	r24, r4
 204:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 208:	5c 01       	movw	r10, r24
 20a:	4b 85       	ldd	r20, Y+11	; 0x0b
 20c:	5c 85       	ldd	r21, Y+12	; 0x0c
 20e:	b5 01       	movw	r22, r10
 210:	c8 01       	movw	r24, r16
 212:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 216:	89 80       	ldd	r8, Y+1	; 0x01
 218:	9a 80       	ldd	r9, Y+2	; 0x02
 21a:	4d 81       	ldd	r20, Y+5	; 0x05
 21c:	5e 81       	ldd	r21, Y+6	; 0x06
 21e:	8b 85       	ldd	r24, Y+11	; 0x0b
 220:	9c 85       	ldd	r25, Y+12	; 0x0c
 222:	48 9f       	mul	r20, r24
 224:	90 01       	movw	r18, r0
 226:	49 9f       	mul	r20, r25
 228:	30 0d       	add	r19, r0
 22a:	58 9f       	mul	r21, r24
 22c:	30 0d       	add	r19, r0
 22e:	11 24       	eor	r1, r1
 230:	3c 83       	std	Y+4, r19	; 0x04
 232:	2b 83       	std	Y+3, r18	; 0x03
 234:	39 01       	movw	r6, r18
 236:	60 0e       	add	r6, r16
 238:	71 1e       	adc	r7, r17
 23a:	13 01       	movw	r2, r6
 23c:	54 01       	movw	r10, r8
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	6a 14       	cp	r6, r10
 244:	7b 04       	cpc	r7, r11
 246:	00 f4       	brcc	.+0      	; 0x248 <qsort+0x1bc>
 248:	00 c0       	rjmp	.+0      	; 0x24a <qsort+0x1be>
 24a:	b8 01       	movw	r22, r16
 24c:	c5 01       	movw	r24, r10
 24e:	29 87       	std	Y+9, r18	; 0x09
 250:	3a 87       	std	Y+10, r19	; 0x0a
 252:	f7 01       	movw	r30, r14
 254:	09 95       	icall
 256:	29 85       	ldd	r18, Y+9	; 0x09
 258:	3a 85       	ldd	r19, Y+10	; 0x0a
 25a:	18 16       	cp	r1, r24
 25c:	19 06       	cpc	r1, r25
 25e:	04 f0       	brlt	.+0      	; 0x260 <qsort+0x1d4>
 260:	89 2b       	or	r24, r25
 262:	01 f4       	brne	.+0      	; 0x264 <qsort+0x1d8>
 264:	4b 85       	ldd	r20, Y+11	; 0x0b
 266:	5c 85       	ldd	r21, Y+12	; 0x0c
 268:	b5 01       	movw	r22, r10
 26a:	89 81       	ldd	r24, Y+1	; 0x01
 26c:	9a 81       	ldd	r25, Y+2	; 0x02
 26e:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 272:	29 81       	ldd	r18, Y+1	; 0x01
 274:	3a 81       	ldd	r19, Y+2	; 0x02
 276:	4b 85       	ldd	r20, Y+11	; 0x0b
 278:	5c 85       	ldd	r21, Y+12	; 0x0c
 27a:	24 0f       	add	r18, r20
 27c:	35 1f       	adc	r19, r21
 27e:	3a 83       	std	Y+2, r19	; 0x02
 280:	29 83       	std	Y+1, r18	; 0x01
 282:	21 e0       	ldi	r18, 0x01	; 1
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	8b 85       	ldd	r24, Y+11	; 0x0b
 288:	9c 85       	ldd	r25, Y+12	; 0x0c
 28a:	a8 0e       	add	r10, r24
 28c:	b9 1e       	adc	r11, r25
 28e:	00 c0       	rjmp	.+0      	; 0x290 <qsort+0x204>
 290:	b8 01       	movw	r22, r16
 292:	c3 01       	movw	r24, r6
 294:	29 87       	std	Y+9, r18	; 0x09
 296:	3a 87       	std	Y+10, r19	; 0x0a
 298:	f7 01       	movw	r30, r14
 29a:	09 95       	icall
 29c:	23 01       	movw	r4, r6
 29e:	4b 85       	ldd	r20, Y+11	; 0x0b
 2a0:	5c 85       	ldd	r21, Y+12	; 0x0c
 2a2:	44 1a       	sub	r4, r20
 2a4:	55 0a       	sbc	r5, r21
 2a6:	29 85       	ldd	r18, Y+9	; 0x09
 2a8:	3a 85       	ldd	r19, Y+10	; 0x0a
 2aa:	97 fd       	sbrc	r25, 7
 2ac:	00 c0       	rjmp	.+0      	; 0x2ae <qsort+0x222>
 2ae:	89 2b       	or	r24, r25
 2b0:	01 f4       	brne	.+0      	; 0x2b2 <qsort+0x226>
 2b2:	4b 85       	ldd	r20, Y+11	; 0x0b
 2b4:	5c 85       	ldd	r21, Y+12	; 0x0c
 2b6:	b1 01       	movw	r22, r2
 2b8:	c3 01       	movw	r24, r6
 2ba:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 2be:	2b 85       	ldd	r18, Y+11	; 0x0b
 2c0:	3c 85       	ldd	r19, Y+12	; 0x0c
 2c2:	22 1a       	sub	r2, r18
 2c4:	33 0a       	sbc	r3, r19
 2c6:	21 e0       	ldi	r18, 0x01	; 1
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	32 01       	movw	r6, r4
 2cc:	6a 14       	cp	r6, r10
 2ce:	7b 04       	cpc	r7, r11
 2d0:	00 f4       	brcc	.+0      	; 0x2d2 <qsort+0x246>
 2d2:	00 c0       	rjmp	.+0      	; 0x2d4 <qsort+0x248>
 2d4:	4b 85       	ldd	r20, Y+11	; 0x0b
 2d6:	5c 85       	ldd	r21, Y+12	; 0x0c
 2d8:	b3 01       	movw	r22, r6
 2da:	c5 01       	movw	r24, r10
 2dc:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 2e0:	4b 85       	ldd	r20, Y+11	; 0x0b
 2e2:	5c 85       	ldd	r21, Y+12	; 0x0c
 2e4:	a4 0e       	add	r10, r20
 2e6:	b5 1e       	adc	r11, r21
 2e8:	32 01       	movw	r6, r4
 2ea:	21 e0       	ldi	r18, 0x01	; 1
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <qsort+0x264>
 2f0:	23 2b       	or	r18, r19
 2f2:	01 f4       	brne	.+0      	; 0x2f4 <qsort+0x268>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <qsort+0x26a>
 2f6:	4b 80       	ldd	r4, Y+3	; 0x03
 2f8:	5c 80       	ldd	r5, Y+4	; 0x04
 2fa:	4f 81       	ldd	r20, Y+7	; 0x07
 2fc:	58 85       	ldd	r21, Y+8	; 0x08
 2fe:	44 1a       	sub	r4, r20
 300:	55 0a       	sbc	r5, r21
 302:	40 0e       	add	r4, r16
 304:	51 1e       	adc	r5, r17
 306:	65 01       	movw	r12, r10
 308:	29 81       	ldd	r18, Y+1	; 0x01
 30a:	3a 81       	ldd	r19, Y+2	; 0x02
 30c:	c2 1a       	sub	r12, r18
 30e:	d3 0a       	sbc	r13, r19
 310:	a9 01       	movw	r20, r18
 312:	40 1b       	sub	r20, r16
 314:	51 0b       	sbc	r21, r17
 316:	c4 16       	cp	r12, r20
 318:	d5 06       	cpc	r13, r21
 31a:	04 f4       	brge	.+0      	; 0x31c <qsort+0x290>
 31c:	a6 01       	movw	r20, r12
 31e:	14 16       	cp	r1, r20
 320:	15 06       	cpc	r1, r21
 322:	04 f4       	brge	.+0      	; 0x324 <qsort+0x298>
 324:	b5 01       	movw	r22, r10
 326:	64 1b       	sub	r22, r20
 328:	75 0b       	sbc	r23, r21
 32a:	c8 01       	movw	r24, r16
 32c:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 330:	41 01       	movw	r8, r2
 332:	86 18       	sub	r8, r6
 334:	97 08       	sbc	r9, r7
 336:	a2 01       	movw	r20, r4
 338:	42 19       	sub	r20, r2
 33a:	53 09       	sbc	r21, r3
 33c:	8b 85       	ldd	r24, Y+11	; 0x0b
 33e:	9c 85       	ldd	r25, Y+12	; 0x0c
 340:	48 1b       	sub	r20, r24
 342:	59 0b       	sbc	r21, r25
 344:	84 16       	cp	r8, r20
 346:	95 06       	cpc	r9, r21
 348:	00 f4       	brcc	.+0      	; 0x34a <qsort+0x2be>
 34a:	a4 01       	movw	r20, r8
 34c:	14 16       	cp	r1, r20
 34e:	15 06       	cpc	r1, r21
 350:	04 f4       	brge	.+0      	; 0x352 <qsort+0x2c6>
 352:	b2 01       	movw	r22, r4
 354:	64 1b       	sub	r22, r20
 356:	75 0b       	sbc	r23, r21
 358:	c5 01       	movw	r24, r10
 35a:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 35e:	eb 85       	ldd	r30, Y+11	; 0x0b
 360:	fc 85       	ldd	r31, Y+12	; 0x0c
 362:	ec 15       	cp	r30, r12
 364:	fd 05       	cpc	r31, r13
 366:	00 f4       	brcc	.+0      	; 0x368 <qsort+0x2dc>
 368:	c6 01       	movw	r24, r12
 36a:	bf 01       	movw	r22, r30
 36c:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 370:	97 01       	movw	r18, r14
 372:	af 01       	movw	r20, r30
 374:	c8 01       	movw	r24, r16
 376:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 37a:	2b 85       	ldd	r18, Y+11	; 0x0b
 37c:	3c 85       	ldd	r19, Y+12	; 0x0c
 37e:	28 15       	cp	r18, r8
 380:	39 05       	cpc	r19, r9
 382:	00 f4       	brcc	.+0      	; 0x384 <qsort+0x2f8>
 384:	82 01       	movw	r16, r4
 386:	08 19       	sub	r16, r8
 388:	19 09       	sbc	r17, r9
 38a:	c4 01       	movw	r24, r8
 38c:	b9 01       	movw	r22, r18
 38e:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 392:	6b 01       	movw	r12, r22
 394:	00 c0       	rjmp	.+0      	; 0x396 <qsort+0x30a>
 396:	8b 85       	ldd	r24, Y+11	; 0x0b
 398:	9c 85       	ldd	r25, Y+12	; 0x0c
 39a:	c8 9e       	mul	r12, r24
 39c:	50 01       	movw	r10, r0
 39e:	c9 9e       	mul	r12, r25
 3a0:	b0 0c       	add	r11, r0
 3a2:	d8 9e       	mul	r13, r24
 3a4:	b0 0c       	add	r11, r0
 3a6:	11 24       	eor	r1, r1
 3a8:	a0 0e       	add	r10, r16
 3aa:	b1 1e       	adc	r11, r17
 3ac:	8a 14       	cp	r8, r10
 3ae:	9b 04       	cpc	r9, r11
 3b0:	00 f4       	brcc	.+0      	; 0x3b2 <qsort+0x326>
 3b2:	34 01       	movw	r6, r8
 3b4:	06 15       	cp	r16, r6
 3b6:	17 05       	cpc	r17, r7
 3b8:	00 f4       	brcc	.+0      	; 0x3ba <qsort+0x32e>
 3ba:	63 01       	movw	r12, r6
 3bc:	8b 85       	ldd	r24, Y+11	; 0x0b
 3be:	9c 85       	ldd	r25, Y+12	; 0x0c
 3c0:	c8 1a       	sub	r12, r24
 3c2:	d9 0a       	sbc	r13, r25
 3c4:	b3 01       	movw	r22, r6
 3c6:	c6 01       	movw	r24, r12
 3c8:	f7 01       	movw	r30, r14
 3ca:	09 95       	icall
 3cc:	18 16       	cp	r1, r24
 3ce:	19 06       	cpc	r1, r25
 3d0:	04 f4       	brge	.+0      	; 0x3d2 <qsort+0x346>
 3d2:	4b 85       	ldd	r20, Y+11	; 0x0b
 3d4:	5c 85       	ldd	r21, Y+12	; 0x0c
 3d6:	b6 01       	movw	r22, r12
 3d8:	c3 01       	movw	r24, r6
 3da:	0e 94 00 00 	call	0	; 0x0 <swapfunc>
 3de:	36 01       	movw	r6, r12
 3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <qsort+0x356>
 3e2:	2b 85       	ldd	r18, Y+11	; 0x0b
 3e4:	3c 85       	ldd	r19, Y+12	; 0x0c
 3e6:	82 0e       	add	r8, r18
 3e8:	93 1e       	adc	r9, r19
 3ea:	00 c0       	rjmp	.+0      	; 0x3ec <qsort+0x360>
 3ec:	2c 96       	adiw	r28, 0x0c	; 12
 3ee:	0f b6       	in	r0, 0x3f	; 63
 3f0:	f8 94       	cli
 3f2:	de bf       	out	0x3e, r29	; 62
 3f4:	0f be       	out	0x3f, r0	; 63
 3f6:	cd bf       	out	0x3d, r28	; 61
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	1f 91       	pop	r17
 3fe:	0f 91       	pop	r16
 400:	ff 90       	pop	r15
 402:	ef 90       	pop	r14
 404:	df 90       	pop	r13
 406:	cf 90       	pop	r12
 408:	bf 90       	pop	r11
 40a:	af 90       	pop	r10
 40c:	9f 90       	pop	r9
 40e:	8f 90       	pop	r8
 410:	7f 90       	pop	r7
 412:	6f 90       	pop	r6
 414:	5f 90       	pop	r5
 416:	4f 90       	pop	r4
 418:	3f 90       	pop	r3
 41a:	2f 90       	pop	r2
 41c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

rand.o:     формат файла elf32-avr


Дизассемблирование раздела .data:

00000000 <next>:
   0:	01 00       	.word	0x0001	; ????
	...

Дизассемблирование раздела .text.avr-libc:

00000000 <do_rand>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	ec 01       	movw	r28, r24
  16:	68 81       	ld	r22, Y
  18:	79 81       	ldd	r23, Y+1	; 0x01
  1a:	8a 81       	ldd	r24, Y+2	; 0x02
  1c:	9b 81       	ldd	r25, Y+3	; 0x03
  1e:	61 15       	cp	r22, r1
  20:	71 05       	cpc	r23, r1
  22:	81 05       	cpc	r24, r1
  24:	91 05       	cpc	r25, r1
  26:	01 f4       	brne	.+0      	; 0x28 <do_rand+0x28>
  28:	64 e2       	ldi	r22, 0x24	; 36
  2a:	79 ed       	ldi	r23, 0xD9	; 217
  2c:	8b e5       	ldi	r24, 0x5B	; 91
  2e:	97 e0       	ldi	r25, 0x07	; 7
  30:	2d e1       	ldi	r18, 0x1D	; 29
  32:	33 ef       	ldi	r19, 0xF3	; 243
  34:	41 e0       	ldi	r20, 0x01	; 1
  36:	50 e0       	ldi	r21, 0x00	; 0
  38:	0e 94 00 00 	call	0	; 0x0 <do_rand>
  3c:	49 01       	movw	r8, r18
  3e:	5a 01       	movw	r10, r20
  40:	9b 01       	movw	r18, r22
  42:	ac 01       	movw	r20, r24
  44:	a7 ea       	ldi	r26, 0xA7	; 167
  46:	b1 e4       	ldi	r27, 0x41	; 65
  48:	0e 94 00 00 	call	0	; 0x0 <do_rand>
  4c:	6b 01       	movw	r12, r22
  4e:	7c 01       	movw	r14, r24
  50:	ac ee       	ldi	r26, 0xEC	; 236
  52:	b4 ef       	ldi	r27, 0xF4	; 244
  54:	a5 01       	movw	r20, r10
  56:	94 01       	movw	r18, r8
  58:	0e 94 00 00 	call	0	; 0x0 <do_rand>
  5c:	c6 0e       	add	r12, r22
  5e:	d7 1e       	adc	r13, r23
  60:	e8 1e       	adc	r14, r24
  62:	f9 1e       	adc	r15, r25
  64:	f7 fe       	sbrs	r15, 7
  66:	00 c0       	rjmp	.+0      	; 0x68 <do_rand+0x68>
  68:	81 e0       	ldi	r24, 0x01	; 1
  6a:	c8 1a       	sub	r12, r24
  6c:	d1 08       	sbc	r13, r1
  6e:	e1 08       	sbc	r14, r1
  70:	80 e8       	ldi	r24, 0x80	; 128
  72:	f8 0a       	sbc	r15, r24
  74:	c8 82       	st	Y, r12
  76:	d9 82       	std	Y+1, r13	; 0x01
  78:	ea 82       	std	Y+2, r14	; 0x02
  7a:	fb 82       	std	Y+3, r15	; 0x03
  7c:	c6 01       	movw	r24, r12
  7e:	9f 77       	andi	r25, 0x7F	; 127
  80:	df 91       	pop	r29
  82:	cf 91       	pop	r28
  84:	ff 90       	pop	r15
  86:	ef 90       	pop	r14
  88:	df 90       	pop	r13
  8a:	cf 90       	pop	r12
  8c:	bf 90       	pop	r11
  8e:	af 90       	pop	r10
  90:	9f 90       	pop	r9
  92:	8f 90       	pop	r8
  94:	08 95       	ret

00000096 <rand_r>:
  96:	0c 94 00 00 	jmp	0	; 0x0 <do_rand>

0000009a <rand>:
  9a:	80 e0       	ldi	r24, 0x00	; 0
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	0c 94 00 00 	jmp	0	; 0x0 <do_rand>

000000a2 <srand>:
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b0 e0       	ldi	r27, 0x00	; 0
  a6:	80 93 00 00 	sts	0x0000, r24
  aa:	90 93 00 00 	sts	0x0000, r25
  ae:	a0 93 00 00 	sts	0x0000, r26
  b2:	b0 93 00 00 	sts	0x0000, r27
  b6:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

random.o:     формат файла elf32-avr


Дизассемблирование раздела .data:

00000000 <next>:
   0:	01 00       	.word	0x0001	; ????
	...

Дизассемблирование раздела .text.avr-libc:

00000000 <do_random>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	ec 01       	movw	r28, r24
  16:	68 81       	ld	r22, Y
  18:	79 81       	ldd	r23, Y+1	; 0x01
  1a:	8a 81       	ldd	r24, Y+2	; 0x02
  1c:	9b 81       	ldd	r25, Y+3	; 0x03
  1e:	61 15       	cp	r22, r1
  20:	71 05       	cpc	r23, r1
  22:	81 05       	cpc	r24, r1
  24:	91 05       	cpc	r25, r1
  26:	01 f4       	brne	.+0      	; 0x28 <do_random+0x28>
  28:	64 e2       	ldi	r22, 0x24	; 36
  2a:	79 ed       	ldi	r23, 0xD9	; 217
  2c:	8b e5       	ldi	r24, 0x5B	; 91
  2e:	97 e0       	ldi	r25, 0x07	; 7
  30:	2d e1       	ldi	r18, 0x1D	; 29
  32:	33 ef       	ldi	r19, 0xF3	; 243
  34:	41 e0       	ldi	r20, 0x01	; 1
  36:	50 e0       	ldi	r21, 0x00	; 0
  38:	0e 94 00 00 	call	0	; 0x0 <do_random>
  3c:	49 01       	movw	r8, r18
  3e:	5a 01       	movw	r10, r20
  40:	9b 01       	movw	r18, r22
  42:	ac 01       	movw	r20, r24
  44:	a7 ea       	ldi	r26, 0xA7	; 167
  46:	b1 e4       	ldi	r27, 0x41	; 65
  48:	0e 94 00 00 	call	0	; 0x0 <do_random>
  4c:	6b 01       	movw	r12, r22
  4e:	7c 01       	movw	r14, r24
  50:	ac ee       	ldi	r26, 0xEC	; 236
  52:	b4 ef       	ldi	r27, 0xF4	; 244
  54:	a5 01       	movw	r20, r10
  56:	94 01       	movw	r18, r8
  58:	0e 94 00 00 	call	0	; 0x0 <do_random>
  5c:	c6 0e       	add	r12, r22
  5e:	d7 1e       	adc	r13, r23
  60:	e8 1e       	adc	r14, r24
  62:	f9 1e       	adc	r15, r25
  64:	f7 fe       	sbrs	r15, 7
  66:	00 c0       	rjmp	.+0      	; 0x68 <do_random+0x68>
  68:	81 e0       	ldi	r24, 0x01	; 1
  6a:	c8 1a       	sub	r12, r24
  6c:	d1 08       	sbc	r13, r1
  6e:	e1 08       	sbc	r14, r1
  70:	80 e8       	ldi	r24, 0x80	; 128
  72:	f8 0a       	sbc	r15, r24
  74:	c8 82       	st	Y, r12
  76:	d9 82       	std	Y+1, r13	; 0x01
  78:	ea 82       	std	Y+2, r14	; 0x02
  7a:	fb 82       	std	Y+3, r15	; 0x03
  7c:	c7 01       	movw	r24, r14
  7e:	b6 01       	movw	r22, r12
  80:	9f 77       	andi	r25, 0x7F	; 127
  82:	df 91       	pop	r29
  84:	cf 91       	pop	r28
  86:	ff 90       	pop	r15
  88:	ef 90       	pop	r14
  8a:	df 90       	pop	r13
  8c:	cf 90       	pop	r12
  8e:	bf 90       	pop	r11
  90:	af 90       	pop	r10
  92:	9f 90       	pop	r9
  94:	8f 90       	pop	r8
  96:	08 95       	ret

00000098 <random_r>:
  98:	0c 94 00 00 	jmp	0	; 0x0 <do_random>

0000009c <random>:
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	0c 94 00 00 	jmp	0	; 0x0 <do_random>

000000a4 <srandom>:
  a4:	60 93 00 00 	sts	0x0000, r22
  a8:	70 93 00 00 	sts	0x0000, r23
  ac:	80 93 00 00 	sts	0x0000, r24
  b0:	90 93 00 00 	sts	0x0000, r25
  b4:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

realloc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <realloc>:
   0:	6f 92       	push	r6
   2:	7f 92       	push	r7
   4:	8f 92       	push	r8
   6:	9f 92       	push	r9
   8:	af 92       	push	r10
   a:	bf 92       	push	r11
   c:	cf 92       	push	r12
   e:	df 92       	push	r13
  10:	ef 92       	push	r14
  12:	ff 92       	push	r15
  14:	0f 93       	push	r16
  16:	1f 93       	push	r17
  18:	cf 93       	push	r28
  1a:	df 93       	push	r29
  1c:	ec 01       	movw	r28, r24
  1e:	cb 01       	movw	r24, r22
  20:	20 97       	sbiw	r28, 0x00	; 0
  22:	01 f4       	brne	.+0      	; 0x24 <realloc+0x24>
  24:	df 91       	pop	r29
  26:	cf 91       	pop	r28
  28:	1f 91       	pop	r17
  2a:	0f 91       	pop	r16
  2c:	ff 90       	pop	r15
  2e:	ef 90       	pop	r14
  30:	df 90       	pop	r13
  32:	cf 90       	pop	r12
  34:	bf 90       	pop	r11
  36:	af 90       	pop	r10
  38:	9f 90       	pop	r9
  3a:	8f 90       	pop	r8
  3c:	7f 90       	pop	r7
  3e:	6f 90       	pop	r6
  40:	0c 94 00 00 	jmp	0	; 0x0 <realloc>
  44:	fe 01       	movw	r30, r28
  46:	e6 0f       	add	r30, r22
  48:	f7 1f       	adc	r31, r23
  4a:	9e 01       	movw	r18, r28
  4c:	22 50       	subi	r18, 0x02	; 2
  4e:	31 09       	sbc	r19, r1
  50:	e2 17       	cp	r30, r18
  52:	f3 07       	cpc	r31, r19
  54:	00 f4       	brcc	.+0      	; 0x56 <realloc+0x56>
  56:	00 c0       	rjmp	.+0      	; 0x58 <realloc+0x58>
  58:	d9 01       	movw	r26, r18
  5a:	0d 91       	ld	r16, X+
  5c:	1c 91       	ld	r17, X
  5e:	11 97       	sbiw	r26, 0x01	; 1
  60:	06 17       	cp	r16, r22
  62:	17 07       	cpc	r17, r23
  64:	00 f0       	brcs	.+0      	; 0x66 <realloc+0x66>
  66:	05 30       	cpi	r16, 0x05	; 5
  68:	11 05       	cpc	r17, r1
  6a:	00 f4       	brcc	.+0      	; 0x6c <realloc+0x6c>
  6c:	00 c0       	rjmp	.+0      	; 0x6e <realloc+0x6e>
  6e:	a8 01       	movw	r20, r16
  70:	44 50       	subi	r20, 0x04	; 4
  72:	51 09       	sbc	r21, r1
  74:	46 17       	cp	r20, r22
  76:	57 07       	cpc	r21, r23
  78:	00 f4       	brcc	.+0      	; 0x7a <realloc+0x7a>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <realloc+0x7c>
  7c:	02 50       	subi	r16, 0x02	; 2
  7e:	11 09       	sbc	r17, r1
  80:	06 1b       	sub	r16, r22
  82:	17 0b       	sbc	r17, r23
  84:	01 93       	st	Z+, r16
  86:	11 93       	st	Z+, r17
  88:	6d 93       	st	X+, r22
  8a:	7c 93       	st	X, r23
  8c:	cf 01       	movw	r24, r30
  8e:	0e 94 00 00 	call	0	; 0x0 <realloc>
  92:	00 c0       	rjmp	.+0      	; 0x94 <realloc+0x94>
  94:	5b 01       	movw	r10, r22
  96:	a0 1a       	sub	r10, r16
  98:	b1 0a       	sbc	r11, r17
  9a:	4e 01       	movw	r8, r28
  9c:	80 0e       	add	r8, r16
  9e:	91 1e       	adc	r9, r17
  a0:	a0 91 00 00 	lds	r26, 0x0000
  a4:	b0 91 00 00 	lds	r27, 0x0000
  a8:	61 2c       	mov	r6, r1
  aa:	71 2c       	mov	r7, r1
  ac:	60 e0       	ldi	r22, 0x00	; 0
  ae:	70 e0       	ldi	r23, 0x00	; 0
  b0:	10 97       	sbiw	r26, 0x00	; 0
  b2:	01 f4       	brne	.+0      	; 0xb4 <realloc+0xb4>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <realloc+0xb6>
  b6:	a8 15       	cp	r26, r8
  b8:	b9 05       	cpc	r27, r9
  ba:	01 f4       	brne	.+0      	; 0xbc <realloc+0xbc>
  bc:	ed 90       	ld	r14, X+
  be:	fc 90       	ld	r15, X
  c0:	11 97       	sbiw	r26, 0x01	; 1
  c2:	67 01       	movw	r12, r14
  c4:	42 e0       	ldi	r20, 0x02	; 2
  c6:	c4 0e       	add	r12, r20
  c8:	d1 1c       	adc	r13, r1
  ca:	ca 14       	cp	r12, r10
  cc:	db 04       	cpc	r13, r11
  ce:	00 f0       	brcs	.+0      	; 0xd0 <realloc+0xd0>
  d0:	47 01       	movw	r8, r14
  d2:	8a 18       	sub	r8, r10
  d4:	9b 08       	sbc	r9, r11
  d6:	64 01       	movw	r12, r8
  d8:	42 e0       	ldi	r20, 0x02	; 2
  da:	c4 0e       	add	r12, r20
  dc:	d1 1c       	adc	r13, r1
  de:	12 96       	adiw	r26, 0x02	; 2
  e0:	bc 90       	ld	r11, X
  e2:	12 97       	sbiw	r26, 0x02	; 2
  e4:	13 96       	adiw	r26, 0x03	; 3
  e6:	ac 91       	ld	r26, X
  e8:	b5 e0       	ldi	r27, 0x05	; 5
  ea:	cb 16       	cp	r12, r27
  ec:	d1 04       	cpc	r13, r1
  ee:	00 f0       	brcs	.+0      	; 0xf0 <realloc+0xf0>
  f0:	b2 82       	std	Z+2, r11	; 0x02
  f2:	a3 83       	std	Z+3, r26	; 0x03
  f4:	91 82       	std	Z+1, r9	; 0x01
  f6:	80 82       	st	Z, r8
  f8:	d9 01       	movw	r26, r18
  fa:	8d 93       	st	X+, r24
  fc:	9c 93       	st	X, r25
  fe:	00 c0       	rjmp	.+0      	; 0x100 <realloc+0x100>
 100:	0e 5f       	subi	r16, 0xFE	; 254
 102:	1f 4f       	sbci	r17, 0xFF	; 255
 104:	0e 0d       	add	r16, r14
 106:	1f 1d       	adc	r17, r15
 108:	f9 01       	movw	r30, r18
 10a:	11 83       	std	Z+1, r17	; 0x01
 10c:	00 83       	st	Z, r16
 10e:	eb 2d       	mov	r30, r11
 110:	fa 2f       	mov	r31, r26
 112:	61 15       	cp	r22, r1
 114:	71 05       	cpc	r23, r1
 116:	01 f0       	breq	.+0      	; 0x118 <realloc+0x118>
 118:	db 01       	movw	r26, r22
 11a:	13 96       	adiw	r26, 0x03	; 3
 11c:	fc 93       	st	X, r31
 11e:	ee 93       	st	-X, r30
 120:	12 97       	sbiw	r26, 0x02	; 2
 122:	00 c0       	rjmp	.+0      	; 0x124 <realloc+0x124>
 124:	f0 93 00 00 	sts	0x0000, r31
 128:	e0 93 00 00 	sts	0x0000, r30
 12c:	00 c0       	rjmp	.+0      	; 0x12e <realloc+0x12e>
 12e:	6d 91       	ld	r22, X+
 130:	7c 91       	ld	r23, X
 132:	11 97       	sbiw	r26, 0x01	; 1
 134:	66 16       	cp	r6, r22
 136:	77 06       	cpc	r7, r23
 138:	00 f4       	brcc	.+0      	; 0x13a <realloc+0x13a>
 13a:	3b 01       	movw	r6, r22
 13c:	bd 01       	movw	r22, r26
 13e:	12 96       	adiw	r26, 0x02	; 2
 140:	0d 90       	ld	r0, X+
 142:	bc 91       	ld	r27, X
 144:	a0 2d       	mov	r26, r0
 146:	00 c0       	rjmp	.+0      	; 0x148 <realloc+0x148>
 148:	60 91 00 00 	lds	r22, 0x0000
 14c:	70 91 00 00 	lds	r23, 0x0000
 150:	68 15       	cp	r22, r8
 152:	79 05       	cpc	r23, r9
 154:	01 f4       	brne	.+0      	; 0x156 <realloc+0x156>
 156:	68 16       	cp	r6, r24
 158:	79 06       	cpc	r7, r25
 15a:	00 f4       	brcc	.+0      	; 0x15c <realloc+0x15c>
 15c:	40 91 00 00 	lds	r20, 0x0000
 160:	50 91 00 00 	lds	r21, 0x0000
 164:	41 15       	cp	r20, r1
 166:	51 05       	cpc	r21, r1
 168:	01 f4       	brne	.+0      	; 0x16a <realloc+0x16a>
 16a:	4d b7       	in	r20, 0x3d	; 61
 16c:	5e b7       	in	r21, 0x3e	; 62
 16e:	60 91 00 00 	lds	r22, 0x0000
 172:	70 91 00 00 	lds	r23, 0x0000
 176:	46 1b       	sub	r20, r22
 178:	57 0b       	sbc	r21, r23
 17a:	e4 17       	cp	r30, r20
 17c:	f5 07       	cpc	r31, r21
 17e:	00 f4       	brcc	.+0      	; 0x180 <realloc+0x180>
 180:	f0 93 00 00 	sts	0x0000, r31
 184:	e0 93 00 00 	sts	0x0000, r30
 188:	f9 01       	movw	r30, r18
 18a:	91 83       	std	Z+1, r25	; 0x01
 18c:	80 83       	st	Z, r24
 18e:	00 c0       	rjmp	.+0      	; 0x190 <realloc+0x190>
 190:	0e 94 00 00 	call	0	; 0x0 <realloc>
 194:	7c 01       	movw	r14, r24
 196:	00 97       	sbiw	r24, 0x00	; 0
 198:	01 f0       	breq	.+0      	; 0x19a <realloc+0x19a>
 19a:	a8 01       	movw	r20, r16
 19c:	be 01       	movw	r22, r28
 19e:	0e 94 00 00 	call	0	; 0x0 <realloc>
 1a2:	ce 01       	movw	r24, r28
 1a4:	0e 94 00 00 	call	0	; 0x0 <realloc>
 1a8:	c7 01       	movw	r24, r14
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <realloc+0x1ac>
 1ac:	ce 01       	movw	r24, r28
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <realloc+0x1b0>
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	1f 91       	pop	r17
 1ba:	0f 91       	pop	r16
 1bc:	ff 90       	pop	r15
 1be:	ef 90       	pop	r14
 1c0:	df 90       	pop	r13
 1c2:	cf 90       	pop	r12
 1c4:	bf 90       	pop	r11
 1c6:	af 90       	pop	r10
 1c8:	9f 90       	pop	r9
 1ca:	8f 90       	pop	r8
 1cc:	7f 90       	pop	r7
 1ce:	6f 90       	pop	r6
 1d0:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

strtod.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strtod>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	8b 01       	movw	r16, r22
  1a:	61 15       	cp	r22, r1
  1c:	71 05       	cpc	r23, r1
  1e:	01 f0       	breq	.+0      	; 0x20 <strtod+0x20>
  20:	db 01       	movw	r26, r22
  22:	8c 93       	st	X, r24
  24:	11 96       	adiw	r26, 0x01	; 1
  26:	9c 93       	st	X, r25
  28:	ec 01       	movw	r28, r24
  2a:	5e 01       	movw	r10, r28
  2c:	bf ef       	ldi	r27, 0xFF	; 255
  2e:	ab 1a       	sub	r10, r27
  30:	bb 0a       	sbc	r11, r27
  32:	75 01       	movw	r14, r10
  34:	c8 80       	ld	r12, Y
  36:	8c 2d       	mov	r24, r12
  38:	90 e0       	ldi	r25, 0x00	; 0
  3a:	0e 94 00 00 	call	0	; 0x0 <strtod>
  3e:	89 2b       	or	r24, r25
  40:	01 f0       	breq	.+0      	; 0x42 <strtod+0x42>
  42:	e5 01       	movw	r28, r10
  44:	00 c0       	rjmp	.+0      	; 0x46 <strtod+0x46>
  46:	ed e2       	ldi	r30, 0x2D	; 45
  48:	ce 12       	cpse	r12, r30
  4a:	00 c0       	rjmp	.+0      	; 0x4c <strtod+0x4c>
  4c:	7e 01       	movw	r14, r28
  4e:	f2 e0       	ldi	r31, 0x02	; 2
  50:	ef 0e       	add	r14, r31
  52:	f1 1c       	adc	r15, r1
  54:	c9 80       	ldd	r12, Y+1	; 0x01
  56:	dd 24       	eor	r13, r13
  58:	d3 94       	inc	r13
  5a:	00 c0       	rjmp	.+0      	; 0x5c <strtod+0x5c>
  5c:	2b e2       	ldi	r18, 0x2B	; 43
  5e:	c2 12       	cpse	r12, r18
  60:	00 c0       	rjmp	.+0      	; 0x62 <strtod+0x62>
  62:	7e 01       	movw	r14, r28
  64:	42 e0       	ldi	r20, 0x02	; 2
  66:	e4 0e       	add	r14, r20
  68:	f1 1c       	adc	r15, r1
  6a:	c9 80       	ldd	r12, Y+1	; 0x01
  6c:	d1 2c       	mov	r13, r1
  6e:	e7 01       	movw	r28, r14
  70:	21 97       	sbiw	r28, 0x01	; 1
  72:	43 e0       	ldi	r20, 0x03	; 3
  74:	50 e0       	ldi	r21, 0x00	; 0
  76:	60 e0       	ldi	r22, 0x00	; 0
  78:	70 e0       	ldi	r23, 0x00	; 0
  7a:	ce 01       	movw	r24, r28
  7c:	0e 94 00 00 	call	0	; 0x0 <strtod>
  80:	89 2b       	or	r24, r25
  82:	01 f4       	brne	.+0      	; 0x84 <strtod+0x84>
  84:	e7 01       	movw	r28, r14
  86:	22 96       	adiw	r28, 0x02	; 2
  88:	45 e0       	ldi	r20, 0x05	; 5
  8a:	50 e0       	ldi	r21, 0x00	; 0
  8c:	60 e0       	ldi	r22, 0x00	; 0
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	ce 01       	movw	r24, r28
  92:	0e 94 00 00 	call	0	; 0x0 <strtod>
  96:	89 2b       	or	r24, r25
  98:	01 f4       	brne	.+0      	; 0x9a <strtod+0x9a>
  9a:	e7 01       	movw	r28, r14
  9c:	27 96       	adiw	r28, 0x07	; 7
  9e:	01 15       	cp	r16, r1
  a0:	11 05       	cpc	r17, r1
  a2:	01 f0       	breq	.+0      	; 0xa4 <strtod+0xa4>
  a4:	d8 01       	movw	r26, r16
  a6:	cd 93       	st	X+, r28
  a8:	dc 93       	st	X, r29
  aa:	d1 10       	cpse	r13, r1
  ac:	00 c0       	rjmp	.+0      	; 0xae <strtod+0xae>
  ae:	60 e0       	ldi	r22, 0x00	; 0
  b0:	70 e0       	ldi	r23, 0x00	; 0
  b2:	80 e8       	ldi	r24, 0x80	; 128
  b4:	9f e7       	ldi	r25, 0x7F	; 127
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <strtod+0xb8>
  b8:	43 e0       	ldi	r20, 0x03	; 3
  ba:	50 e0       	ldi	r21, 0x00	; 0
  bc:	60 e0       	ldi	r22, 0x00	; 0
  be:	70 e0       	ldi	r23, 0x00	; 0
  c0:	ce 01       	movw	r24, r28
  c2:	0e 94 00 00 	call	0	; 0x0 <strtod>
  c6:	89 2b       	or	r24, r25
  c8:	01 f4       	brne	.+0      	; 0xca <strtod+0xca>
  ca:	01 15       	cp	r16, r1
  cc:	11 05       	cpc	r17, r1
  ce:	01 f4       	brne	.+0      	; 0xd0 <strtod+0xd0>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <strtod+0xd2>
  d2:	b2 e0       	ldi	r27, 0x02	; 2
  d4:	eb 0e       	add	r14, r27
  d6:	f1 1c       	adc	r15, r1
  d8:	f8 01       	movw	r30, r16
  da:	f1 82       	std	Z+1, r15	; 0x01
  dc:	e0 82       	st	Z, r14
  de:	00 c0       	rjmp	.+0      	; 0xe0 <strtod+0xe0>
  e0:	f7 01       	movw	r30, r14
  e2:	60 e0       	ldi	r22, 0x00	; 0
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	cb 01       	movw	r24, r22
  e8:	c0 e0       	ldi	r28, 0x00	; 0
  ea:	d0 e0       	ldi	r29, 0x00	; 0
  ec:	7f 01       	movw	r14, r30
  ee:	a0 ed       	ldi	r26, 0xD0	; 208
  f0:	aa 2e       	mov	r10, r26
  f2:	ac 0c       	add	r10, r12
  f4:	29 e0       	ldi	r18, 0x09	; 9
  f6:	2a 15       	cp	r18, r10
  f8:	00 f0       	brcs	.+0      	; 0xfa <strtod+0xfa>
  fa:	4d 2d       	mov	r20, r13
  fc:	42 60       	ori	r20, 0x02	; 2
  fe:	b4 2e       	mov	r11, r20
 100:	2d 2d       	mov	r18, r13
 102:	28 70       	andi	r18, 0x08	; 8
 104:	d2 fe       	sbrs	r13, 2
 106:	00 c0       	rjmp	.+0      	; 0x108 <strtod+0x108>
 108:	21 11       	cpse	r18, r1
 10a:	00 c0       	rjmp	.+0      	; 0x10c <strtod+0x10c>
 10c:	21 96       	adiw	r28, 0x01	; 1
 10e:	00 c0       	rjmp	.+0      	; 0x110 <strtod+0x110>
 110:	21 11       	cpse	r18, r1
 112:	21 97       	sbiw	r28, 0x01	; 1
 114:	a5 e0       	ldi	r26, 0x05	; 5
 116:	b0 e0       	ldi	r27, 0x00	; 0
 118:	9b 01       	movw	r18, r22
 11a:	ac 01       	movw	r20, r24
 11c:	0e 94 00 00 	call	0	; 0x0 <strtod>
 120:	66 0f       	add	r22, r22
 122:	77 1f       	adc	r23, r23
 124:	88 1f       	adc	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 0d       	add	r22, r10
 12a:	71 1d       	adc	r23, r1
 12c:	81 1d       	adc	r24, r1
 12e:	91 1d       	adc	r25, r1
 130:	68 39       	cpi	r22, 0x98	; 152
 132:	a9 e9       	ldi	r26, 0x99	; 153
 134:	7a 07       	cpc	r23, r26
 136:	8a 07       	cpc	r24, r26
 138:	a9 e1       	ldi	r26, 0x19	; 25
 13a:	9a 07       	cpc	r25, r26
 13c:	00 f0       	brcs	.+0      	; 0x13e <strtod+0x13e>
 13e:	bd 2d       	mov	r27, r13
 140:	b6 60       	ori	r27, 0x06	; 6
 142:	bb 2e       	mov	r11, r27
 144:	00 c0       	rjmp	.+0      	; 0x146 <strtod+0x146>
 146:	2e ef       	ldi	r18, 0xFE	; 254
 148:	a2 12       	cpse	r10, r18
 14a:	00 c0       	rjmp	.+0      	; 0x14c <strtod+0x14c>
 14c:	d3 fc       	sbrc	r13, 3
 14e:	00 c0       	rjmp	.+0      	; 0x150 <strtod+0x150>
 150:	4d 2d       	mov	r20, r13
 152:	48 60       	ori	r20, 0x08	; 8
 154:	b4 2e       	mov	r11, r20
 156:	31 96       	adiw	r30, 0x01	; 1
 158:	d7 01       	movw	r26, r14
 15a:	cc 90       	ld	r12, X
 15c:	db 2c       	mov	r13, r11
 15e:	00 c0       	rjmp	.+0      	; 0x160 <strtod+0x160>
 160:	2c 2d       	mov	r18, r12
 162:	2f 7d       	andi	r18, 0xDF	; 223
 164:	25 34       	cpi	r18, 0x45	; 69
 166:	01 f0       	breq	.+0      	; 0x168 <strtod+0x168>
 168:	00 c0       	rjmp	.+0      	; 0x16a <strtod+0x16a>
 16a:	a0 81       	ld	r26, Z
 16c:	ad 32       	cpi	r26, 0x2D	; 45
 16e:	01 f4       	brne	.+0      	; 0x170 <strtod+0x170>
 170:	bd 2d       	mov	r27, r13
 172:	b0 61       	ori	r27, 0x10	; 16
 174:	db 2e       	mov	r13, r27
 176:	7f 01       	movw	r14, r30
 178:	22 e0       	ldi	r18, 0x02	; 2
 17a:	e2 0e       	add	r14, r18
 17c:	f1 1c       	adc	r15, r1
 17e:	00 c0       	rjmp	.+0      	; 0x180 <strtod+0x180>
 180:	7f 01       	movw	r14, r30
 182:	ab 32       	cpi	r26, 0x2B	; 43
 184:	01 f0       	breq	.+0      	; 0x186 <strtod+0x186>
 186:	4f ef       	ldi	r20, 0xFF	; 255
 188:	e4 1a       	sub	r14, r20
 18a:	f4 0a       	sbc	r15, r20
 18c:	21 e0       	ldi	r18, 0x01	; 1
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	00 c0       	rjmp	.+0      	; 0x192 <strtod+0x192>
 192:	a2 e0       	ldi	r26, 0x02	; 2
 194:	ea 0e       	add	r14, r26
 196:	f1 1c       	adc	r15, r1
 198:	a1 81       	ldd	r26, Z+1	; 0x01
 19a:	22 e0       	ldi	r18, 0x02	; 2
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	a0 53       	subi	r26, 0x30	; 48
 1a0:	aa 30       	cpi	r26, 0x0A	; 10
 1a2:	00 f0       	brcs	.+0      	; 0x1a4 <strtod+0x1a4>
 1a4:	e2 1a       	sub	r14, r18
 1a6:	f3 0a       	sbc	r15, r19
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <strtod+0x1aa>
 1aa:	f7 01       	movw	r30, r14
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	20 38       	cpi	r18, 0x80	; 128
 1b2:	bc e0       	ldi	r27, 0x0C	; 12
 1b4:	3b 07       	cpc	r19, r27
 1b6:	04 f4       	brge	.+0      	; 0x1b8 <strtod+0x1b8>
 1b8:	a9 01       	movw	r20, r18
 1ba:	44 0f       	add	r20, r20
 1bc:	55 1f       	adc	r21, r21
 1be:	44 0f       	add	r20, r20
 1c0:	55 1f       	adc	r21, r21
 1c2:	24 0f       	add	r18, r20
 1c4:	35 1f       	adc	r19, r21
 1c6:	22 0f       	add	r18, r18
 1c8:	33 1f       	adc	r19, r19
 1ca:	2a 0f       	add	r18, r26
 1cc:	31 1d       	adc	r19, r1
 1ce:	af 01       	movw	r20, r30
 1d0:	4f 5f       	subi	r20, 0xFF	; 255
 1d2:	5f 4f       	sbci	r21, 0xFF	; 255
 1d4:	7a 01       	movw	r14, r20
 1d6:	a0 81       	ld	r26, Z
 1d8:	a0 53       	subi	r26, 0x30	; 48
 1da:	aa 30       	cpi	r26, 0x0A	; 10
 1dc:	00 f4       	brcc	.+0      	; 0x1de <strtod+0x1de>
 1de:	fa 01       	movw	r30, r20
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <strtod+0x1e2>
 1e2:	d4 fe       	sbrs	r13, 4
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <strtod+0x1e6>
 1e6:	31 95       	neg	r19
 1e8:	21 95       	neg	r18
 1ea:	31 09       	sbc	r19, r1
 1ec:	c2 0f       	add	r28, r18
 1ee:	d3 1f       	adc	r29, r19
 1f0:	d1 fe       	sbrs	r13, 1
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <strtod+0x1f4>
 1f4:	01 15       	cp	r16, r1
 1f6:	11 05       	cpc	r17, r1
 1f8:	01 f0       	breq	.+0      	; 0x1fa <strtod+0x1fa>
 1fa:	e1 e0       	ldi	r30, 0x01	; 1
 1fc:	ee 1a       	sub	r14, r30
 1fe:	f1 08       	sbc	r15, r1
 200:	d8 01       	movw	r26, r16
 202:	ed 92       	st	X+, r14
 204:	fc 92       	st	X, r15
 206:	0e 94 00 00 	call	0	; 0x0 <strtod>
 20a:	2d 2d       	mov	r18, r13
 20c:	23 70       	andi	r18, 0x03	; 3
 20e:	23 30       	cpi	r18, 0x03	; 3
 210:	01 f0       	breq	.+0      	; 0x212 <strtod+0x212>
 212:	4b 01       	movw	r8, r22
 214:	5c 01       	movw	r10, r24
 216:	00 c0       	rjmp	.+0      	; 0x218 <strtod+0x218>
 218:	4b 01       	movw	r8, r22
 21a:	5c 01       	movw	r10, r24
 21c:	b7 fa       	bst	r11, 7
 21e:	b0 94       	com	r11
 220:	b7 f8       	bld	r11, 7
 222:	b0 94       	com	r11
 224:	20 e0       	ldi	r18, 0x00	; 0
 226:	30 e0       	ldi	r19, 0x00	; 0
 228:	a9 01       	movw	r20, r18
 22a:	c5 01       	movw	r24, r10
 22c:	b4 01       	movw	r22, r8
 22e:	0e 94 00 00 	call	0	; 0x0 <strtod>
 232:	88 23       	and	r24, r24
 234:	01 f4       	brne	.+0      	; 0x236 <strtod+0x236>
 236:	00 c0       	rjmp	.+0      	; 0x238 <strtod+0x238>
 238:	d7 ff       	sbrs	r29, 7
 23a:	00 c0       	rjmp	.+0      	; 0x23c <strtod+0x23c>
 23c:	d1 95       	neg	r29
 23e:	c1 95       	neg	r28
 240:	d1 09       	sbc	r29, r1
 242:	00 e0       	ldi	r16, 0x00	; 0
 244:	10 e0       	ldi	r17, 0x00	; 0
 246:	00 c0       	rjmp	.+0      	; 0x248 <strtod+0x248>
 248:	00 e0       	ldi	r16, 0x00	; 0
 24a:	10 e0       	ldi	r17, 0x00	; 0
 24c:	68 01       	movw	r12, r16
 24e:	b8 e1       	ldi	r27, 0x18	; 24
 250:	cb 1a       	sub	r12, r27
 252:	d1 08       	sbc	r13, r1
 254:	90 e2       	ldi	r25, 0x20	; 32
 256:	e9 2e       	mov	r14, r25
 258:	f1 2c       	mov	r15, r1
 25a:	ce 15       	cp	r28, r14
 25c:	df 05       	cpc	r29, r15
 25e:	04 f0       	brlt	.+0      	; 0x260 <strtod+0x260>
 260:	f8 01       	movw	r30, r16
 262:	25 91       	lpm	r18, Z+
 264:	35 91       	lpm	r19, Z+
 266:	45 91       	lpm	r20, Z+
 268:	54 91       	lpm	r21, Z
 26a:	c5 01       	movw	r24, r10
 26c:	b4 01       	movw	r22, r8
 26e:	0e 94 00 00 	call	0	; 0x0 <strtod>
 272:	4b 01       	movw	r8, r22
 274:	5c 01       	movw	r10, r24
 276:	ce 19       	sub	r28, r14
 278:	df 09       	sbc	r29, r15
 27a:	00 c0       	rjmp	.+0      	; 0x27c <strtod+0x27c>
 27c:	04 50       	subi	r16, 0x04	; 4
 27e:	11 09       	sbc	r17, r1
 280:	f5 94       	asr	r15
 282:	e7 94       	ror	r14
 284:	0c 15       	cp	r16, r12
 286:	1d 05       	cpc	r17, r13
 288:	01 f4       	brne	.+0      	; 0x28a <strtod+0x28a>
 28a:	8a 2d       	mov	r24, r10
 28c:	88 0f       	add	r24, r24
 28e:	8b 2d       	mov	r24, r11
 290:	88 1f       	adc	r24, r24
 292:	8f 3f       	cpi	r24, 0xFF	; 255
 294:	01 f0       	breq	.+0      	; 0x296 <strtod+0x296>
 296:	20 e0       	ldi	r18, 0x00	; 0
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	a9 01       	movw	r20, r18
 29c:	c5 01       	movw	r24, r10
 29e:	b4 01       	movw	r22, r8
 2a0:	0e 94 00 00 	call	0	; 0x0 <strtod>
 2a4:	81 11       	cpse	r24, r1
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <strtod+0x2a8>
 2a8:	82 e2       	ldi	r24, 0x22	; 34
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	90 93 00 00 	sts	0x0000, r25
 2b0:	80 93 00 00 	sts	0x0000, r24
 2b4:	c5 01       	movw	r24, r10
 2b6:	b4 01       	movw	r22, r8
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <strtod+0x2ba>
 2ba:	60 e0       	ldi	r22, 0x00	; 0
 2bc:	70 e0       	ldi	r23, 0x00	; 0
 2be:	80 e8       	ldi	r24, 0x80	; 128
 2c0:	9f ef       	ldi	r25, 0xFF	; 255
 2c2:	00 c0       	rjmp	.+0      	; 0x2c4 <strtod+0x2c4>
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	70 e0       	ldi	r23, 0x00	; 0
 2c8:	80 ec       	ldi	r24, 0xC0	; 192
 2ca:	9f e7       	ldi	r25, 0x7F	; 127
 2cc:	df 91       	pop	r29
 2ce:	cf 91       	pop	r28
 2d0:	1f 91       	pop	r17
 2d2:	0f 91       	pop	r16
 2d4:	ff 90       	pop	r15
 2d6:	ef 90       	pop	r14
 2d8:	df 90       	pop	r13
 2da:	cf 90       	pop	r12
 2dc:	bf 90       	pop	r11
 2de:	af 90       	pop	r10
 2e0:	9f 90       	pop	r9
 2e2:	8f 90       	pop	r8
 2e4:	08 95       	ret

Дизассемблирование раздела .progmem.data:

00000000 <pstr_nan>:
   0:	4e 41       	sbci	r20, 0x1E	; 30
   2:	4e 49       	sbci	r20, 0x9E	; 158

00000003 <pstr_inity>:
   3:	49 4e       	sbci	r20, 0xE9	; 233
   5:	49 54       	subi	r20, 0x49	; 73
   7:	59 49       	sbci	r21, 0x99	; 153

00000008 <pstr_inf>:
   8:	49 4e       	sbci	r20, 0xE9	; 233
   a:	46 cd       	rjmp	.-1396   	; 0xfffffa98 <__SREG__+0xfffffa59>

0000000b <pwr_m10>:
   b:	cd cc       	rjmp	.-1638   	; 0xfffff9a7 <__SREG__+0xfffff968>
   d:	cc 3d       	cpi	r28, 0xDC	; 220
   f:	0a d7       	rcall	.+3604   	; 0xe25 <__SREG__+0xde6>
  11:	23 3c       	cpi	r18, 0xC3	; 195
  13:	17 b7       	in	r17, 0x37	; 55
  15:	d1 38       	cpi	r29, 0x81	; 129
  17:	77 cc       	rjmp	.-1810   	; 0xfffff907 <__SREG__+0xfffff8c8>
  19:	2b 32       	cpi	r18, 0x2B	; 43
  1b:	95 95       	asr	r25
  1d:	e6 24       	eor	r14, r6
  1f:	1f b1       	in	r17, 0x0f	; 15
  21:	4f 0a       	sbc	r4, r31

00000023 <pwr_p10>:
  23:	00 00       	nop
  25:	20 41       	sbci	r18, 0x10	; 16
  27:	00 00       	nop
  29:	c8 42       	sbci	r28, 0x28	; 40
  2b:	00 40       	sbci	r16, 0x00	; 0
  2d:	1c 46       	sbci	r17, 0x6C	; 108
  2f:	20 bc       	out	0x20, r2	; 32
  31:	be 4c       	sbci	r27, 0xCE	; 206
  33:	ca 1b       	sub	r28, r26
  35:	0e 5a       	subi	r16, 0xAE	; 174
  37:	ae c5       	rjmp	.+2908   	; 0xb95 <__SREG__+0xb56>
  39:	9d 74       	andi	r25, 0x4D	; 77

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

strtol.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strtol>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	5f 92       	push	r5
   6:	6f 92       	push	r6
   8:	7f 92       	push	r7
   a:	8f 92       	push	r8
   c:	9f 92       	push	r9
   e:	af 92       	push	r10
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	df 92       	push	r13
  16:	ef 92       	push	r14
  18:	ff 92       	push	r15
  1a:	0f 93       	push	r16
  1c:	1f 93       	push	r17
  1e:	cf 93       	push	r28
  20:	df 93       	push	r29
  22:	8b 01       	movw	r16, r22
  24:	ea 01       	movw	r28, r20
  26:	61 15       	cp	r22, r1
  28:	71 05       	cpc	r23, r1
  2a:	01 f0       	breq	.+0      	; 0x2c <strtol+0x2c>
  2c:	db 01       	movw	r26, r22
  2e:	8c 93       	st	X, r24
  30:	11 96       	adiw	r26, 0x01	; 1
  32:	9c 93       	st	X, r25
  34:	20 97       	sbiw	r28, 0x00	; 0
  36:	01 f0       	breq	.+0      	; 0x38 <strtol+0x38>
  38:	9e 01       	movw	r18, r28
  3a:	22 50       	subi	r18, 0x02	; 2
  3c:	31 09       	sbc	r19, r1
  3e:	23 32       	cpi	r18, 0x23	; 35
  40:	31 05       	cpc	r19, r1
  42:	00 f0       	brcs	.+0      	; 0x44 <strtol+0x44>
  44:	00 c0       	rjmp	.+0      	; 0x46 <strtol+0x46>
  46:	7c 01       	movw	r14, r24
  48:	67 01       	movw	r12, r14
  4a:	bf ef       	ldi	r27, 0xFF	; 255
  4c:	cb 1a       	sub	r12, r27
  4e:	db 0a       	sbc	r13, r27
  50:	56 01       	movw	r10, r12
  52:	f7 01       	movw	r30, r14
  54:	60 80       	ld	r6, Z
  56:	86 2d       	mov	r24, r6
  58:	90 e0       	ldi	r25, 0x00	; 0
  5a:	0e 94 00 00 	call	0	; 0x0 <strtol>
  5e:	89 2b       	or	r24, r25
  60:	01 f0       	breq	.+0      	; 0x62 <strtol+0x62>
  62:	76 01       	movw	r14, r12
  64:	00 c0       	rjmp	.+0      	; 0x66 <strtol+0x66>
  66:	fd e2       	ldi	r31, 0x2D	; 45
  68:	6f 12       	cpse	r6, r31
  6a:	00 c0       	rjmp	.+0      	; 0x6c <strtol+0x6c>
  6c:	57 01       	movw	r10, r14
  6e:	82 e0       	ldi	r24, 0x02	; 2
  70:	a8 0e       	add	r10, r24
  72:	b1 1c       	adc	r11, r1
  74:	d7 01       	movw	r26, r14
  76:	11 96       	adiw	r26, 0x01	; 1
  78:	6c 90       	ld	r6, X
  7a:	77 24       	eor	r7, r7
  7c:	73 94       	inc	r7
  7e:	00 c0       	rjmp	.+0      	; 0x80 <strtol+0x80>
  80:	bb e2       	ldi	r27, 0x2B	; 43
  82:	6b 12       	cpse	r6, r27
  84:	00 c0       	rjmp	.+0      	; 0x86 <strtol+0x86>
  86:	57 01       	movw	r10, r14
  88:	e2 e0       	ldi	r30, 0x02	; 2
  8a:	ae 0e       	add	r10, r30
  8c:	b1 1c       	adc	r11, r1
  8e:	d7 01       	movw	r26, r14
  90:	11 96       	adiw	r26, 0x01	; 1
  92:	6c 90       	ld	r6, X
  94:	71 2c       	mov	r7, r1
  96:	ce 01       	movw	r24, r28
  98:	8f 7e       	andi	r24, 0xEF	; 239
  9a:	89 2b       	or	r24, r25
  9c:	01 f4       	brne	.+0      	; 0x9e <strtol+0x9e>
  9e:	b0 e3       	ldi	r27, 0x30	; 48
  a0:	6b 12       	cpse	r6, r27
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <strtol+0xa4>
  a4:	f5 01       	movw	r30, r10
  a6:	80 81       	ld	r24, Z
  a8:	8f 7d       	andi	r24, 0xDF	; 223
  aa:	88 35       	cpi	r24, 0x58	; 88
  ac:	01 f4       	brne	.+0      	; 0xae <strtol+0xae>
  ae:	61 80       	ldd	r6, Z+1	; 0x01
  b0:	f2 e0       	ldi	r31, 0x02	; 2
  b2:	af 0e       	add	r10, r31
  b4:	b1 1c       	adc	r11, r1
  b6:	87 2d       	mov	r24, r7
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	78 2e       	mov	r7, r24
  bc:	c0 e1       	ldi	r28, 0x10	; 16
  be:	d0 e0       	ldi	r29, 0x00	; 0
  c0:	c8 30       	cpi	r28, 0x08	; 8
  c2:	d1 05       	cpc	r29, r1
  c4:	01 f0       	breq	.+0      	; 0xc6 <strtol+0xc6>
  c6:	04 f4       	brge	.+0      	; 0xc8 <strtol+0xc8>
  c8:	c2 30       	cpi	r28, 0x02	; 2
  ca:	d1 05       	cpc	r29, r1
  cc:	01 f4       	brne	.+0      	; 0xce <strtol+0xce>
  ce:	c1 2c       	mov	r12, r1
  d0:	d1 2c       	mov	r13, r1
  d2:	e1 2c       	mov	r14, r1
  d4:	b0 e4       	ldi	r27, 0x40	; 64
  d6:	fb 2e       	mov	r15, r27
  d8:	00 c0       	rjmp	.+0      	; 0xda <strtol+0xda>
  da:	ca 30       	cpi	r28, 0x0A	; 10
  dc:	d1 05       	cpc	r29, r1
  de:	01 f0       	breq	.+0      	; 0xe0 <strtol+0xe0>
  e0:	c0 31       	cpi	r28, 0x10	; 16
  e2:	d1 05       	cpc	r29, r1
  e4:	01 f0       	breq	.+0      	; 0xe6 <strtol+0xe6>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <strtol+0xe8>
  e8:	20 97       	sbiw	r28, 0x00	; 0
  ea:	01 f4       	brne	.+0      	; 0xec <strtol+0xec>
  ec:	ca e0       	ldi	r28, 0x0A	; 10
  ee:	d0 e0       	ldi	r29, 0x00	; 0
  f0:	ac ec       	ldi	r26, 0xCC	; 204
  f2:	ca 2e       	mov	r12, r26
  f4:	dc 2c       	mov	r13, r12
  f6:	ec 2c       	mov	r14, r12
  f8:	ac e0       	ldi	r26, 0x0C	; 12
  fa:	fa 2e       	mov	r15, r26
  fc:	00 c0       	rjmp	.+0      	; 0xfe <strtol+0xfe>
  fe:	20 97       	sbiw	r28, 0x00	; 0
 100:	01 f4       	brne	.+0      	; 0x102 <strtol+0x102>
 102:	c8 e0       	ldi	r28, 0x08	; 8
 104:	d0 e0       	ldi	r29, 0x00	; 0
 106:	c1 2c       	mov	r12, r1
 108:	d1 2c       	mov	r13, r1
 10a:	e1 2c       	mov	r14, r1
 10c:	f0 e1       	ldi	r31, 0x10	; 16
 10e:	ff 2e       	mov	r15, r31
 110:	00 c0       	rjmp	.+0      	; 0x112 <strtol+0x112>
 112:	60 e0       	ldi	r22, 0x00	; 0
 114:	70 e0       	ldi	r23, 0x00	; 0
 116:	80 e0       	ldi	r24, 0x00	; 0
 118:	90 e8       	ldi	r25, 0x80	; 128
 11a:	9e 01       	movw	r18, r28
 11c:	44 27       	eor	r20, r20
 11e:	37 fd       	sbrc	r19, 7
 120:	40 95       	com	r20
 122:	54 2f       	mov	r21, r20
 124:	0e 94 00 00 	call	0	; 0x0 <strtol>
 128:	69 01       	movw	r12, r18
 12a:	7a 01       	movw	r14, r20
 12c:	00 c0       	rjmp	.+0      	; 0x12e <strtol+0x12e>
 12e:	c1 2c       	mov	r12, r1
 130:	d1 2c       	mov	r13, r1
 132:	e1 2c       	mov	r14, r1
 134:	e8 e0       	ldi	r30, 0x08	; 8
 136:	fe 2e       	mov	r15, r30
 138:	f5 01       	movw	r30, r10
 13a:	60 e0       	ldi	r22, 0x00	; 0
 13c:	20 e0       	ldi	r18, 0x00	; 0
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	a9 01       	movw	r20, r18
 142:	4e 01       	movw	r8, r28
 144:	aa 24       	eor	r10, r10
 146:	97 fc       	sbrc	r9, 7
 148:	a0 94       	com	r10
 14a:	ba 2c       	mov	r11, r10
 14c:	1f 01       	movw	r2, r30
 14e:	70 ed       	ldi	r23, 0xD0	; 208
 150:	57 2e       	mov	r5, r23
 152:	56 0c       	add	r5, r6
 154:	a9 e0       	ldi	r26, 0x09	; 9
 156:	a5 15       	cp	r26, r5
 158:	00 f4       	brcc	.+0      	; 0x15a <strtol+0x15a>
 15a:	8f eb       	ldi	r24, 0xBF	; 191
 15c:	86 0d       	add	r24, r6
 15e:	8a 31       	cpi	r24, 0x1A	; 26
 160:	00 f4       	brcc	.+0      	; 0x162 <strtol+0x162>
 162:	99 ec       	ldi	r25, 0xC9	; 201
 164:	59 2e       	mov	r5, r25
 166:	00 c0       	rjmp	.+0      	; 0x168 <strtol+0x168>
 168:	8f e9       	ldi	r24, 0x9F	; 159
 16a:	86 0d       	add	r24, r6
 16c:	8a 31       	cpi	r24, 0x1A	; 26
 16e:	00 f4       	brcc	.+0      	; 0x170 <strtol+0x170>
 170:	89 ea       	ldi	r24, 0xA9	; 169
 172:	58 2e       	mov	r5, r24
 174:	56 0c       	add	r5, r6
 176:	85 2d       	mov	r24, r5
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	8c 17       	cp	r24, r28
 17c:	9d 07       	cpc	r25, r29
 17e:	04 f4       	brge	.+0      	; 0x180 <strtol+0x180>
 180:	67 fd       	sbrc	r22, 7
 182:	00 c0       	rjmp	.+0      	; 0x184 <strtol+0x184>
 184:	c2 16       	cp	r12, r18
 186:	d3 06       	cpc	r13, r19
 188:	e4 06       	cpc	r14, r20
 18a:	f5 06       	cpc	r15, r21
 18c:	00 f0       	brcs	.+0      	; 0x18e <strtol+0x18e>
 18e:	c5 01       	movw	r24, r10
 190:	b4 01       	movw	r22, r8
 192:	0e 94 00 00 	call	0	; 0x0 <strtol>
 196:	9b 01       	movw	r18, r22
 198:	ac 01       	movw	r20, r24
 19a:	25 0d       	add	r18, r5
 19c:	31 1d       	adc	r19, r1
 19e:	41 1d       	adc	r20, r1
 1a0:	51 1d       	adc	r21, r1
 1a2:	21 30       	cpi	r18, 0x01	; 1
 1a4:	31 05       	cpc	r19, r1
 1a6:	41 05       	cpc	r20, r1
 1a8:	b0 e8       	ldi	r27, 0x80	; 128
 1aa:	5b 07       	cpc	r21, r27
 1ac:	00 f0       	brcs	.+0      	; 0x1ae <strtol+0x1ae>
 1ae:	6f ef       	ldi	r22, 0xFF	; 255
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <strtol+0x1b2>
 1b2:	61 e0       	ldi	r22, 0x01	; 1
 1b4:	31 96       	adiw	r30, 0x01	; 1
 1b6:	d1 01       	movw	r26, r2
 1b8:	6c 90       	ld	r6, X
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <strtol+0x1bc>
 1bc:	87 2d       	mov	r24, r7
 1be:	81 70       	andi	r24, 0x01	; 1
 1c0:	01 15       	cp	r16, r1
 1c2:	11 05       	cpc	r17, r1
 1c4:	01 f0       	breq	.+0      	; 0x1c6 <strtol+0x1c6>
 1c6:	66 23       	and	r22, r22
 1c8:	01 f0       	breq	.+0      	; 0x1ca <strtol+0x1ca>
 1ca:	31 97       	sbiw	r30, 0x01	; 1
 1cc:	d8 01       	movw	r26, r16
 1ce:	ed 93       	st	X+, r30
 1d0:	fc 93       	st	X, r31
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <strtol+0x1d4>
 1d4:	71 fe       	sbrs	r7, 1
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <strtol+0x1d8>
 1d8:	32 97       	sbiw	r30, 0x02	; 2
 1da:	d8 01       	movw	r26, r16
 1dc:	ed 93       	st	X+, r30
 1de:	fc 93       	st	X, r31
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <strtol+0x1e2>
 1e2:	67 ff       	sbrs	r22, 7
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <strtol+0x1e6>
 1e6:	88 23       	and	r24, r24
 1e8:	01 f0       	breq	.+0      	; 0x1ea <strtol+0x1ea>
 1ea:	20 e0       	ldi	r18, 0x00	; 0
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	50 e8       	ldi	r21, 0x80	; 128
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <strtol+0x1f4>
 1f4:	2f ef       	ldi	r18, 0xFF	; 255
 1f6:	3f ef       	ldi	r19, 0xFF	; 255
 1f8:	4f ef       	ldi	r20, 0xFF	; 255
 1fa:	5f e7       	ldi	r21, 0x7F	; 127
 1fc:	82 e2       	ldi	r24, 0x22	; 34
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	90 93 00 00 	sts	0x0000, r25
 204:	80 93 00 00 	sts	0x0000, r24
 208:	00 c0       	rjmp	.+0      	; 0x20a <strtol+0x20a>
 20a:	88 23       	and	r24, r24
 20c:	01 f0       	breq	.+0      	; 0x20e <strtol+0x20e>
 20e:	50 95       	com	r21
 210:	40 95       	com	r20
 212:	30 95       	com	r19
 214:	21 95       	neg	r18
 216:	3f 4f       	sbci	r19, 0xFF	; 255
 218:	4f 4f       	sbci	r20, 0xFF	; 255
 21a:	5f 4f       	sbci	r21, 0xFF	; 255
 21c:	00 c0       	rjmp	.+0      	; 0x21e <strtol+0x21e>
 21e:	57 ff       	sbrs	r21, 7
 220:	00 c0       	rjmp	.+0      	; 0x222 <strtol+0x222>
 222:	82 e2       	ldi	r24, 0x22	; 34
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	90 93 00 00 	sts	0x0000, r25
 22a:	80 93 00 00 	sts	0x0000, r24
 22e:	2f ef       	ldi	r18, 0xFF	; 255
 230:	3f ef       	ldi	r19, 0xFF	; 255
 232:	4f ef       	ldi	r20, 0xFF	; 255
 234:	5f e7       	ldi	r21, 0x7F	; 127
 236:	b9 01       	movw	r22, r18
 238:	ca 01       	movw	r24, r20
 23a:	00 c0       	rjmp	.+0      	; 0x23c <strtol+0x23c>
 23c:	60 e0       	ldi	r22, 0x00	; 0
 23e:	70 e0       	ldi	r23, 0x00	; 0
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	df 91       	pop	r29
 246:	cf 91       	pop	r28
 248:	1f 91       	pop	r17
 24a:	0f 91       	pop	r16
 24c:	ff 90       	pop	r15
 24e:	ef 90       	pop	r14
 250:	df 90       	pop	r13
 252:	cf 90       	pop	r12
 254:	bf 90       	pop	r11
 256:	af 90       	pop	r10
 258:	9f 90       	pop	r9
 25a:	8f 90       	pop	r8
 25c:	7f 90       	pop	r7
 25e:	6f 90       	pop	r6
 260:	5f 90       	pop	r5
 262:	3f 90       	pop	r3
 264:	2f 90       	pop	r2
 266:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

strtoul.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strtoul>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	5f 92       	push	r5
   6:	6f 92       	push	r6
   8:	7f 92       	push	r7
   a:	8f 92       	push	r8
   c:	9f 92       	push	r9
   e:	af 92       	push	r10
  10:	bf 92       	push	r11
  12:	cf 92       	push	r12
  14:	df 92       	push	r13
  16:	ef 92       	push	r14
  18:	ff 92       	push	r15
  1a:	0f 93       	push	r16
  1c:	1f 93       	push	r17
  1e:	cf 93       	push	r28
  20:	df 93       	push	r29
  22:	8b 01       	movw	r16, r22
  24:	ea 01       	movw	r28, r20
  26:	61 15       	cp	r22, r1
  28:	71 05       	cpc	r23, r1
  2a:	01 f0       	breq	.+0      	; 0x2c <strtoul+0x2c>
  2c:	db 01       	movw	r26, r22
  2e:	8c 93       	st	X, r24
  30:	11 96       	adiw	r26, 0x01	; 1
  32:	9c 93       	st	X, r25
  34:	20 97       	sbiw	r28, 0x00	; 0
  36:	01 f0       	breq	.+0      	; 0x38 <strtoul+0x38>
  38:	9e 01       	movw	r18, r28
  3a:	22 50       	subi	r18, 0x02	; 2
  3c:	31 09       	sbc	r19, r1
  3e:	23 32       	cpi	r18, 0x23	; 35
  40:	31 05       	cpc	r19, r1
  42:	00 f0       	brcs	.+0      	; 0x44 <strtoul+0x44>
  44:	00 c0       	rjmp	.+0      	; 0x46 <strtoul+0x46>
  46:	7c 01       	movw	r14, r24
  48:	67 01       	movw	r12, r14
  4a:	bf ef       	ldi	r27, 0xFF	; 255
  4c:	cb 1a       	sub	r12, r27
  4e:	db 0a       	sbc	r13, r27
  50:	56 01       	movw	r10, r12
  52:	f7 01       	movw	r30, r14
  54:	60 80       	ld	r6, Z
  56:	86 2d       	mov	r24, r6
  58:	90 e0       	ldi	r25, 0x00	; 0
  5a:	0e 94 00 00 	call	0	; 0x0 <strtoul>
  5e:	89 2b       	or	r24, r25
  60:	01 f0       	breq	.+0      	; 0x62 <strtoul+0x62>
  62:	76 01       	movw	r14, r12
  64:	00 c0       	rjmp	.+0      	; 0x66 <strtoul+0x66>
  66:	fd e2       	ldi	r31, 0x2D	; 45
  68:	6f 12       	cpse	r6, r31
  6a:	00 c0       	rjmp	.+0      	; 0x6c <strtoul+0x6c>
  6c:	57 01       	movw	r10, r14
  6e:	82 e0       	ldi	r24, 0x02	; 2
  70:	a8 0e       	add	r10, r24
  72:	b1 1c       	adc	r11, r1
  74:	d7 01       	movw	r26, r14
  76:	11 96       	adiw	r26, 0x01	; 1
  78:	6c 90       	ld	r6, X
  7a:	77 24       	eor	r7, r7
  7c:	73 94       	inc	r7
  7e:	00 c0       	rjmp	.+0      	; 0x80 <strtoul+0x80>
  80:	bb e2       	ldi	r27, 0x2B	; 43
  82:	6b 12       	cpse	r6, r27
  84:	00 c0       	rjmp	.+0      	; 0x86 <strtoul+0x86>
  86:	57 01       	movw	r10, r14
  88:	e2 e0       	ldi	r30, 0x02	; 2
  8a:	ae 0e       	add	r10, r30
  8c:	b1 1c       	adc	r11, r1
  8e:	d7 01       	movw	r26, r14
  90:	11 96       	adiw	r26, 0x01	; 1
  92:	6c 90       	ld	r6, X
  94:	71 2c       	mov	r7, r1
  96:	ce 01       	movw	r24, r28
  98:	8f 7e       	andi	r24, 0xEF	; 239
  9a:	89 2b       	or	r24, r25
  9c:	01 f4       	brne	.+0      	; 0x9e <strtoul+0x9e>
  9e:	b0 e3       	ldi	r27, 0x30	; 48
  a0:	6b 12       	cpse	r6, r27
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <strtoul+0xa4>
  a4:	f5 01       	movw	r30, r10
  a6:	80 81       	ld	r24, Z
  a8:	8f 7d       	andi	r24, 0xDF	; 223
  aa:	88 35       	cpi	r24, 0x58	; 88
  ac:	01 f4       	brne	.+0      	; 0xae <strtoul+0xae>
  ae:	61 80       	ldd	r6, Z+1	; 0x01
  b0:	f2 e0       	ldi	r31, 0x02	; 2
  b2:	af 0e       	add	r10, r31
  b4:	b1 1c       	adc	r11, r1
  b6:	87 2d       	mov	r24, r7
  b8:	82 60       	ori	r24, 0x02	; 2
  ba:	78 2e       	mov	r7, r24
  bc:	c0 e1       	ldi	r28, 0x10	; 16
  be:	d0 e0       	ldi	r29, 0x00	; 0
  c0:	ca 30       	cpi	r28, 0x0A	; 10
  c2:	d1 05       	cpc	r29, r1
  c4:	01 f0       	breq	.+0      	; 0xc6 <strtoul+0xc6>
  c6:	c0 31       	cpi	r28, 0x10	; 16
  c8:	d1 05       	cpc	r29, r1
  ca:	01 f0       	breq	.+0      	; 0xcc <strtoul+0xcc>
  cc:	c8 30       	cpi	r28, 0x08	; 8
  ce:	d1 05       	cpc	r29, r1
  d0:	01 f4       	brne	.+0      	; 0xd2 <strtoul+0xd2>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <strtoul+0xd4>
  d4:	cc 24       	eor	r12, r12
  d6:	ca 94       	dec	r12
  d8:	dc 2c       	mov	r13, r12
  da:	ec 2c       	mov	r14, r12
  dc:	af e0       	ldi	r26, 0x0F	; 15
  de:	fa 2e       	mov	r15, r26
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <strtoul+0xe2>
  e2:	20 97       	sbiw	r28, 0x00	; 0
  e4:	01 f4       	brne	.+0      	; 0xe6 <strtoul+0xe6>
  e6:	c8 e0       	ldi	r28, 0x08	; 8
  e8:	d0 e0       	ldi	r29, 0x00	; 0
  ea:	cc 24       	eor	r12, r12
  ec:	ca 94       	dec	r12
  ee:	dc 2c       	mov	r13, r12
  f0:	ec 2c       	mov	r14, r12
  f2:	ff e1       	ldi	r31, 0x1F	; 31
  f4:	ff 2e       	mov	r15, r31
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <strtoul+0xf8>
  f8:	6f ef       	ldi	r22, 0xFF	; 255
  fa:	7f ef       	ldi	r23, 0xFF	; 255
  fc:	cb 01       	movw	r24, r22
  fe:	9e 01       	movw	r18, r28
 100:	44 27       	eor	r20, r20
 102:	37 fd       	sbrc	r19, 7
 104:	40 95       	com	r20
 106:	54 2f       	mov	r21, r20
 108:	0e 94 00 00 	call	0	; 0x0 <strtoul>
 10c:	69 01       	movw	r12, r18
 10e:	7a 01       	movw	r14, r20
 110:	00 c0       	rjmp	.+0      	; 0x112 <strtoul+0x112>
 112:	20 97       	sbiw	r28, 0x00	; 0
 114:	01 f4       	brne	.+0      	; 0x116 <strtoul+0x116>
 116:	ca e0       	ldi	r28, 0x0A	; 10
 118:	d0 e0       	ldi	r29, 0x00	; 0
 11a:	e9 e9       	ldi	r30, 0x99	; 153
 11c:	ce 2e       	mov	r12, r30
 11e:	dc 2c       	mov	r13, r12
 120:	ec 2c       	mov	r14, r12
 122:	e9 e1       	ldi	r30, 0x19	; 25
 124:	fe 2e       	mov	r15, r30
 126:	f5 01       	movw	r30, r10
 128:	60 e0       	ldi	r22, 0x00	; 0
 12a:	20 e0       	ldi	r18, 0x00	; 0
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	a9 01       	movw	r20, r18
 130:	4e 01       	movw	r8, r28
 132:	aa 24       	eor	r10, r10
 134:	97 fc       	sbrc	r9, 7
 136:	a0 94       	com	r10
 138:	ba 2c       	mov	r11, r10
 13a:	1f 01       	movw	r2, r30
 13c:	70 ed       	ldi	r23, 0xD0	; 208
 13e:	57 2e       	mov	r5, r23
 140:	56 0c       	add	r5, r6
 142:	a9 e0       	ldi	r26, 0x09	; 9
 144:	a5 15       	cp	r26, r5
 146:	00 f4       	brcc	.+0      	; 0x148 <strtoul+0x148>
 148:	8f eb       	ldi	r24, 0xBF	; 191
 14a:	86 0d       	add	r24, r6
 14c:	8a 31       	cpi	r24, 0x1A	; 26
 14e:	00 f4       	brcc	.+0      	; 0x150 <strtoul+0x150>
 150:	99 ec       	ldi	r25, 0xC9	; 201
 152:	59 2e       	mov	r5, r25
 154:	00 c0       	rjmp	.+0      	; 0x156 <strtoul+0x156>
 156:	8f e9       	ldi	r24, 0x9F	; 159
 158:	86 0d       	add	r24, r6
 15a:	8a 31       	cpi	r24, 0x1A	; 26
 15c:	00 f4       	brcc	.+0      	; 0x15e <strtoul+0x15e>
 15e:	89 ea       	ldi	r24, 0xA9	; 169
 160:	58 2e       	mov	r5, r24
 162:	56 0c       	add	r5, r6
 164:	85 2d       	mov	r24, r5
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	8c 17       	cp	r24, r28
 16a:	9d 07       	cpc	r25, r29
 16c:	04 f4       	brge	.+0      	; 0x16e <strtoul+0x16e>
 16e:	6f 3f       	cpi	r22, 0xFF	; 255
 170:	01 f0       	breq	.+0      	; 0x172 <strtoul+0x172>
 172:	c2 16       	cp	r12, r18
 174:	d3 06       	cpc	r13, r19
 176:	e4 06       	cpc	r14, r20
 178:	f5 06       	cpc	r15, r21
 17a:	00 f0       	brcs	.+0      	; 0x17c <strtoul+0x17c>
 17c:	c5 01       	movw	r24, r10
 17e:	b4 01       	movw	r22, r8
 180:	0e 94 00 00 	call	0	; 0x0 <strtoul>
 184:	9b 01       	movw	r18, r22
 186:	ac 01       	movw	r20, r24
 188:	85 2d       	mov	r24, r5
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	a0 e0       	ldi	r26, 0x00	; 0
 18e:	b0 e0       	ldi	r27, 0x00	; 0
 190:	28 0f       	add	r18, r24
 192:	39 1f       	adc	r19, r25
 194:	4a 1f       	adc	r20, r26
 196:	5b 1f       	adc	r21, r27
 198:	28 17       	cp	r18, r24
 19a:	39 07       	cpc	r19, r25
 19c:	4a 07       	cpc	r20, r26
 19e:	5b 07       	cpc	r21, r27
 1a0:	00 f4       	brcc	.+0      	; 0x1a2 <strtoul+0x1a2>
 1a2:	6f ef       	ldi	r22, 0xFF	; 255
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <strtoul+0x1a6>
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	31 96       	adiw	r30, 0x01	; 1
 1aa:	d1 01       	movw	r26, r2
 1ac:	6c 90       	ld	r6, X
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <strtoul+0x1b0>
 1b0:	01 15       	cp	r16, r1
 1b2:	11 05       	cpc	r17, r1
 1b4:	01 f0       	breq	.+0      	; 0x1b6 <strtoul+0x1b6>
 1b6:	66 23       	and	r22, r22
 1b8:	01 f0       	breq	.+0      	; 0x1ba <strtoul+0x1ba>
 1ba:	31 97       	sbiw	r30, 0x01	; 1
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <strtoul+0x1be>
 1be:	71 fe       	sbrs	r7, 1
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <strtoul+0x1c2>
 1c2:	32 97       	sbiw	r30, 0x02	; 2
 1c4:	d8 01       	movw	r26, r16
 1c6:	ed 93       	st	X+, r30
 1c8:	fc 93       	st	X, r31
 1ca:	70 fe       	sbrs	r7, 0
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <strtoul+0x1ce>
 1ce:	50 95       	com	r21
 1d0:	40 95       	com	r20
 1d2:	30 95       	com	r19
 1d4:	21 95       	neg	r18
 1d6:	3f 4f       	sbci	r19, 0xFF	; 255
 1d8:	4f 4f       	sbci	r20, 0xFF	; 255
 1da:	5f 4f       	sbci	r21, 0xFF	; 255
 1dc:	67 ff       	sbrs	r22, 7
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <strtoul+0x1e0>
 1e0:	82 e2       	ldi	r24, 0x22	; 34
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	90 93 00 00 	sts	0x0000, r25
 1e8:	80 93 00 00 	sts	0x0000, r24
 1ec:	6f ef       	ldi	r22, 0xFF	; 255
 1ee:	7f ef       	ldi	r23, 0xFF	; 255
 1f0:	8f ef       	ldi	r24, 0xFF	; 255
 1f2:	9f ef       	ldi	r25, 0xFF	; 255
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <strtoul+0x1f6>
 1f6:	60 e0       	ldi	r22, 0x00	; 0
 1f8:	70 e0       	ldi	r23, 0x00	; 0
 1fa:	80 e0       	ldi	r24, 0x00	; 0
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <strtoul+0x200>
 200:	b9 01       	movw	r22, r18
 202:	ca 01       	movw	r24, r20
 204:	df 91       	pop	r29
 206:	cf 91       	pop	r28
 208:	1f 91       	pop	r17
 20a:	0f 91       	pop	r16
 20c:	ff 90       	pop	r15
 20e:	ef 90       	pop	r14
 210:	df 90       	pop	r13
 212:	cf 90       	pop	r12
 214:	bf 90       	pop	r11
 216:	af 90       	pop	r10
 218:	9f 90       	pop	r9
 21a:	8f 90       	pop	r8
 21c:	7f 90       	pop	r7
 21e:	6f 90       	pop	r6
 220:	5f 90       	pop	r5
 222:	3f 90       	pop	r3
 224:	2f 90       	pop	r2
 226:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

system.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <system>:
   0:	89 2b       	or	r24, r25
   2:	01 f0       	breq	.+0      	; 0x4 <system+0x4>
   4:	81 ea       	ldi	r24, 0xA1	; 161
   6:	93 e5       	ldi	r25, 0x53	; 83
   8:	90 93 00 00 	sts	0x0000, r25
   c:	80 93 00 00 	sts	0x0000, r24
  10:	8f ef       	ldi	r24, 0xFF	; 255
  12:	9f ef       	ldi	r25, 0xFF	; 255
  14:	08 95       	ret
  16:	80 e0       	ldi	r24, 0x00	; 0
  18:	90 e0       	ldi	r25, 0x00	; 0
  1a:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

abort.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <abort>:
   0:	81 e0       	ldi	r24, 0x01	; 1
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	f8 94       	cli
   6:	0c 94 00 00 	jmp	0	; 0x0 <abort>

atof.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <atof>:
   0:	66 27       	eor	r22, r22
   2:	77 27       	eor	r23, r23
   4:	0c 94 00 00 	jmp	0	; 0x0 <atof>

atoi.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <atoi>:
   0:	fc 01       	movw	r30, r24
   2:	88 27       	eor	r24, r24
   4:	99 27       	eor	r25, r25
   6:	e8 94       	clt
   8:	21 91       	ld	r18, Z+
   a:	20 32       	cpi	r18, 0x20	; 32
   c:	01 f0       	breq	.+0      	; 0xe <atoi+0xe>
   e:	29 30       	cpi	r18, 0x09	; 9
  10:	00 f0       	brcs	.+0      	; 0x12 <atoi+0x12>
  12:	2e 30       	cpi	r18, 0x0E	; 14
  14:	00 f0       	brcs	.+0      	; 0x16 <atoi+0x16>
  16:	2b 32       	cpi	r18, 0x2B	; 43
  18:	01 f0       	breq	.+0      	; 0x1a <atoi+0x1a>
  1a:	2d 32       	cpi	r18, 0x2D	; 45
  1c:	01 f4       	brne	.+0      	; 0x1e <atoi+0x1e>
  1e:	68 94       	set
  20:	00 c0       	rjmp	.+0      	; 0x22 <atoi+0x22>
  22:	0e 94 00 00 	call	0	; 0x0 <atoi>
  26:	82 0f       	add	r24, r18
  28:	91 1d       	adc	r25, r1
  2a:	21 91       	ld	r18, Z+
  2c:	20 53       	subi	r18, 0x30	; 48
  2e:	2a 30       	cpi	r18, 0x0A	; 10
  30:	00 f0       	brcs	.+0      	; 0x32 <atoi+0x32>
  32:	06 f4       	brtc	.+0      	; 0x34 <atoi+0x34>
  34:	90 95       	com	r25
  36:	81 95       	neg	r24
  38:	9f 4f       	sbci	r25, 0xFF	; 255
  3a:	08 95       	ret

atol.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <atol>:
   0:	1f 93       	push	r17
   2:	fc 01       	movw	r30, r24
   4:	99 27       	eor	r25, r25
   6:	88 27       	eor	r24, r24
   8:	bc 01       	movw	r22, r24
   a:	e8 94       	clt
   c:	11 91       	ld	r17, Z+
   e:	10 32       	cpi	r17, 0x20	; 32
  10:	01 f0       	breq	.+0      	; 0x12 <atol+0x12>
  12:	19 30       	cpi	r17, 0x09	; 9
  14:	00 f0       	brcs	.+0      	; 0x16 <atol+0x16>
  16:	1e 30       	cpi	r17, 0x0E	; 14
  18:	00 f0       	brcs	.+0      	; 0x1a <atol+0x1a>
  1a:	1b 32       	cpi	r17, 0x2B	; 43
  1c:	01 f0       	breq	.+0      	; 0x1e <atol+0x1e>
  1e:	1d 32       	cpi	r17, 0x2D	; 45
  20:	01 f4       	brne	.+0      	; 0x22 <atol+0x22>
  22:	68 94       	set
  24:	00 c0       	rjmp	.+0      	; 0x26 <atol+0x26>
  26:	0e 94 00 00 	call	0	; 0x0 <atol>
  2a:	61 0f       	add	r22, r17
  2c:	71 1d       	adc	r23, r1
  2e:	81 1d       	adc	r24, r1
  30:	91 1d       	adc	r25, r1
  32:	11 91       	ld	r17, Z+
  34:	10 53       	subi	r17, 0x30	; 48
  36:	1a 30       	cpi	r17, 0x0A	; 10
  38:	00 f0       	brcs	.+0      	; 0x3a <atol+0x3a>
  3a:	06 f4       	brtc	.+0      	; 0x3c <atol+0x3c>
  3c:	90 95       	com	r25
  3e:	80 95       	com	r24
  40:	70 95       	com	r23
  42:	61 95       	neg	r22
  44:	7f 4f       	sbci	r23, 0xFF	; 255
  46:	8f 4f       	sbci	r24, 0xFF	; 255
  48:	9f 4f       	sbci	r25, 0xFF	; 255
  4a:	1f 91       	pop	r17
  4c:	08 95       	ret

div.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <div>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <div>

exit.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <exit>:
   0:	f8 94       	cli
   2:	0c 94 00 00 	jmp	0	; 0x0 <exit>

ftoa_engine.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__ftoa_engine>:
   0:	28 30       	cpi	r18, 0x08	; 8
   2:	00 f0       	brcs	.+0      	; 0x4 <__ftoa_engine+0x4>
   4:	27 e0       	ldi	r18, 0x07	; 7
   6:	33 27       	eor	r19, r19
   8:	da 01       	movw	r26, r20
   a:	99 0f       	add	r25, r25
   c:	31 1d       	adc	r19, r1
   e:	87 fd       	sbrc	r24, 7
  10:	91 60       	ori	r25, 0x01	; 1
  12:	00 96       	adiw	r24, 0x00	; 0
  14:	61 05       	cpc	r22, r1
  16:	71 05       	cpc	r23, r1
  18:	01 f4       	brne	.+0      	; 0x1a <__ftoa_engine+0x1a>
  1a:	32 60       	ori	r19, 0x02	; 2
  1c:	2e 5f       	subi	r18, 0xFE	; 254
  1e:	3d 93       	st	X+, r19
  20:	30 e3       	ldi	r19, 0x30	; 48
  22:	2a 95       	dec	r18
  24:	01 f4       	brne	.+0      	; 0x26 <__ftoa_engine+0x26>
  26:	08 95       	ret
  28:	9f 3f       	cpi	r25, 0xFF	; 255
  2a:	00 f0       	brcs	.+0      	; 0x2c <__ftoa_engine+0x2c>
  2c:	80 38       	cpi	r24, 0x80	; 128
  2e:	71 05       	cpc	r23, r1
  30:	61 05       	cpc	r22, r1
  32:	01 f0       	breq	.+0      	; 0x34 <__ftoa_engine+0x34>
  34:	3c 5f       	subi	r19, 0xFC	; 252
  36:	3c 5f       	subi	r19, 0xFC	; 252
  38:	3d 93       	st	X+, r19
  3a:	91 30       	cpi	r25, 0x01	; 1
  3c:	00 f0       	brcs	.+0      	; 0x3e <__ftoa_engine+0x3e>
  3e:	80 68       	ori	r24, 0x80	; 128
  40:	91 1d       	adc	r25, r1
  42:	df 93       	push	r29
  44:	cf 93       	push	r28
  46:	1f 93       	push	r17
  48:	0f 93       	push	r16
  4a:	ff 92       	push	r15
  4c:	ef 92       	push	r14
  4e:	19 2f       	mov	r17, r25
  50:	98 7f       	andi	r25, 0xF8	; 248
  52:	96 95       	lsr	r25
  54:	e9 2f       	mov	r30, r25
  56:	96 95       	lsr	r25
  58:	96 95       	lsr	r25
  5a:	e9 0f       	add	r30, r25
  5c:	ff 27       	eor	r31, r31
  5e:	e0 50       	subi	r30, 0x00	; 0
  60:	f0 40       	sbci	r31, 0x00	; 0
  62:	99 27       	eor	r25, r25
  64:	33 27       	eor	r19, r19
  66:	ee 24       	eor	r14, r14
  68:	ff 24       	eor	r15, r15
  6a:	a7 01       	movw	r20, r14
  6c:	e7 01       	movw	r28, r14
  6e:	05 90       	lpm	r0, Z+
  70:	08 94       	sec
  72:	07 94       	ror	r0
  74:	00 f4       	brcc	.+0      	; 0x76 <__ftoa_engine+0x76>
  76:	36 0f       	add	r19, r22
  78:	e7 1e       	adc	r14, r23
  7a:	f8 1e       	adc	r15, r24
  7c:	49 1f       	adc	r20, r25
  7e:	51 1d       	adc	r21, r1
  80:	66 0f       	add	r22, r22
  82:	77 1f       	adc	r23, r23
  84:	88 1f       	adc	r24, r24
  86:	99 1f       	adc	r25, r25
  88:	06 94       	lsr	r0
  8a:	01 f4       	brne	.+0      	; 0x8c <__ftoa_engine+0x8c>
  8c:	05 90       	lpm	r0, Z+
  8e:	07 94       	ror	r0
  90:	00 f4       	brcc	.+0      	; 0x92 <__ftoa_engine+0x92>
  92:	e7 0e       	add	r14, r23
  94:	f8 1e       	adc	r15, r24
  96:	49 1f       	adc	r20, r25
  98:	56 1f       	adc	r21, r22
  9a:	c1 1d       	adc	r28, r1
  9c:	77 0f       	add	r23, r23
  9e:	88 1f       	adc	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	66 1f       	adc	r22, r22
  a4:	06 94       	lsr	r0
  a6:	01 f4       	brne	.+0      	; 0xa8 <__ftoa_engine+0xa8>
  a8:	05 90       	lpm	r0, Z+
  aa:	07 94       	ror	r0
  ac:	00 f4       	brcc	.+0      	; 0xae <__ftoa_engine+0xae>
  ae:	f8 0e       	add	r15, r24
  b0:	49 1f       	adc	r20, r25
  b2:	56 1f       	adc	r21, r22
  b4:	c7 1f       	adc	r28, r23
  b6:	d1 1d       	adc	r29, r1
  b8:	88 0f       	add	r24, r24
  ba:	99 1f       	adc	r25, r25
  bc:	66 1f       	adc	r22, r22
  be:	77 1f       	adc	r23, r23
  c0:	06 94       	lsr	r0
  c2:	01 f4       	brne	.+0      	; 0xc4 <__ftoa_engine+0xc4>
  c4:	05 90       	lpm	r0, Z+
  c6:	07 94       	ror	r0
  c8:	00 f4       	brcc	.+0      	; 0xca <__ftoa_engine+0xca>
  ca:	49 0f       	add	r20, r25
  cc:	56 1f       	adc	r21, r22
  ce:	c7 1f       	adc	r28, r23
  d0:	d8 1f       	adc	r29, r24
  d2:	99 0f       	add	r25, r25
  d4:	66 1f       	adc	r22, r22
  d6:	77 1f       	adc	r23, r23
  d8:	88 1f       	adc	r24, r24
  da:	06 94       	lsr	r0
  dc:	01 f4       	brne	.+0      	; 0xde <__ftoa_engine+0xde>
  de:	84 91       	lpm	r24, Z
  e0:	10 95       	com	r17
  e2:	17 70       	andi	r17, 0x07	; 7
  e4:	01 f0       	breq	.+0      	; 0xe6 <__ftoa_engine+0xe6>
  e6:	d6 95       	lsr	r29
  e8:	c7 95       	ror	r28
  ea:	57 95       	ror	r21
  ec:	47 95       	ror	r20
  ee:	f7 94       	ror	r15
  f0:	e7 94       	ror	r14
  f2:	1a 95       	dec	r17
  f4:	01 f4       	brne	.+0      	; 0xf6 <__ftoa_engine+0xf6>
  f6:	e0 e0       	ldi	r30, 0x00	; 0
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	68 94       	set
  fc:	15 90       	lpm	r1, Z+
  fe:	15 91       	lpm	r17, Z+
 100:	35 91       	lpm	r19, Z+
 102:	65 91       	lpm	r22, Z+
 104:	95 91       	lpm	r25, Z+
 106:	05 90       	lpm	r0, Z+
 108:	7f e2       	ldi	r23, 0x2F	; 47
 10a:	73 95       	inc	r23
 10c:	e1 18       	sub	r14, r1
 10e:	f1 0a       	sbc	r15, r17
 110:	43 0b       	sbc	r20, r19
 112:	56 0b       	sbc	r21, r22
 114:	c9 0b       	sbc	r28, r25
 116:	d0 09       	sbc	r29, r0
 118:	00 f4       	brcc	.+0      	; 0x11a <__ftoa_engine+0x11a>
 11a:	e1 0c       	add	r14, r1
 11c:	f1 1e       	adc	r15, r17
 11e:	43 1f       	adc	r20, r19
 120:	56 1f       	adc	r21, r22
 122:	c9 1f       	adc	r28, r25
 124:	d0 1d       	adc	r29, r0
 126:	06 f4       	brtc	.+0      	; 0x128 <__ftoa_engine+0x128>
 128:	70 33       	cpi	r23, 0x30	; 48
 12a:	01 f4       	brne	.+0      	; 0x12c <__ftoa_engine+0x12c>
 12c:	8a 95       	dec	r24
 12e:	00 c0       	rjmp	.+0      	; 0x130 <__ftoa_engine+0x130>
 130:	e8 94       	clt
 132:	01 50       	subi	r16, 0x01	; 1
 134:	00 f0       	brcs	.+0      	; 0x136 <__ftoa_engine+0x136>
 136:	08 0f       	add	r16, r24
 138:	02 f4       	brpl	.+0      	; 0x13a <__ftoa_engine+0x13a>
 13a:	00 27       	eor	r16, r16
 13c:	02 17       	cp	r16, r18
 13e:	00 f4       	brcc	.+0      	; 0x140 <__ftoa_engine+0x140>
 140:	20 2f       	mov	r18, r16
 142:	23 95       	inc	r18
 144:	02 2f       	mov	r16, r18
 146:	7a 33       	cpi	r23, 0x3A	; 58
 148:	00 f0       	brcs	.+0      	; 0x14a <__ftoa_engine+0x14a>
 14a:	79 e3       	ldi	r23, 0x39	; 57
 14c:	7d 93       	st	X+, r23
 14e:	2a 95       	dec	r18
 150:	01 f4       	brne	.+0      	; 0x152 <__ftoa_engine+0x152>
 152:	00 c0       	rjmp	.+0      	; 0x154 <__ftoa_engine+0x154>
 154:	7d 93       	st	X+, r23
 156:	2a 95       	dec	r18
 158:	01 f4       	brne	.+0      	; 0x15a <__ftoa_engine+0x15a>
 15a:	06 94       	lsr	r0
 15c:	97 95       	ror	r25
 15e:	67 95       	ror	r22
 160:	37 95       	ror	r19
 162:	17 95       	ror	r17
 164:	17 94       	ror	r1
 166:	e1 18       	sub	r14, r1
 168:	f1 0a       	sbc	r15, r17
 16a:	43 0b       	sbc	r20, r19
 16c:	56 0b       	sbc	r21, r22
 16e:	c9 0b       	sbc	r28, r25
 170:	d0 09       	sbc	r29, r0
 172:	00 f0       	brcs	.+0      	; 0x174 <__ftoa_engine+0x174>
 174:	23 95       	inc	r18
 176:	7e 91       	ld	r23, -X
 178:	73 95       	inc	r23
 17a:	7a 33       	cpi	r23, 0x3A	; 58
 17c:	00 f0       	brcs	.+0      	; 0x17e <__ftoa_engine+0x17e>
 17e:	70 e3       	ldi	r23, 0x30	; 48
 180:	7c 93       	st	X, r23
 182:	20 13       	cpse	r18, r16
 184:	00 f4       	brcc	.+0      	; 0x186 <__ftoa_engine+0x186>
 186:	7e 91       	ld	r23, -X
 188:	70 61       	ori	r23, 0x10	; 16
 18a:	7d 93       	st	X+, r23
 18c:	00 f0       	brcs	.+0      	; 0x18e <__ftoa_engine+0x18e>
 18e:	83 95       	inc	r24
 190:	71 e3       	ldi	r23, 0x31	; 49
 192:	7d 93       	st	X+, r23
 194:	70 e3       	ldi	r23, 0x30	; 48
 196:	2a 95       	dec	r18
 198:	01 f4       	brne	.+0      	; 0x19a <__ftoa_engine+0x19a>
 19a:	11 24       	eor	r1, r1
 19c:	ef 90       	pop	r14
 19e:	ff 90       	pop	r15
 1a0:	0f 91       	pop	r16
 1a2:	1f 91       	pop	r17
 1a4:	cf 91       	pop	r28
 1a6:	df 91       	pop	r29
 1a8:	99 27       	eor	r25, r25
 1aa:	87 fd       	sbrc	r24, 7
 1ac:	90 95       	com	r25
 1ae:	08 95       	ret

Дизассемблирование раздела .progmem.data:

00000000 <.progmem.data>:
   0:	00 40       	sbci	r16, 0x00	; 0
   2:	7a 10       	cpse	r7, r10
   4:	f3 5a       	subi	r31, 0xA3	; 163
   6:	00 a0       	ldd	r0, Z+32	; 0x20
   8:	72 4e       	sbci	r23, 0xE2	; 226
   a:	18 09       	sbc	r17, r8
   c:	00 10       	cpse	r0, r0
   e:	a5 d4       	rcall	.+2378   	; 0x95a <__ftoa_engine+0x95a>
  10:	e8 00       	.word	0x00e8	; ????
  12:	00 e8       	ldi	r16, 0x80	; 128
  14:	76 48       	sbci	r23, 0x86	; 134
  16:	17 00       	.word	0x0017	; ????
  18:	00 e4       	ldi	r16, 0x40	; 64
  1a:	0b 54       	subi	r16, 0x4B	; 75
  1c:	02 00       	.word	0x0002	; ????
  1e:	00 ca       	rjmp	.-3072   	; 0xfffff420 <__ftoa_engine+0xfffff420>
  20:	9a 3b       	cpi	r25, 0xBA	; 186
  22:	00 00       	nop
  24:	00 e1       	ldi	r16, 0x10	; 16
  26:	f5 05       	cpc	r31, r5
  28:	00 00       	nop
  2a:	80 96       	adiw	r24, 0x20	; 32
  2c:	98 00       	.word	0x0098	; ????
  2e:	00 00       	nop
  30:	40 42       	sbci	r20, 0x20	; 32
  32:	0f 00       	.word	0x000f	; ????
  34:	00 00       	nop
  36:	a0 86       	std	Z+8, r10	; 0x08
  38:	01 00       	.word	0x0001	; ????
  3a:	00 00       	nop
  3c:	10 27       	eor	r17, r16
  3e:	00 00       	nop
  40:	00 00       	nop
  42:	e8 03       	fmulsu	r22, r16
  44:	00 00       	nop
  46:	00 00       	nop
  48:	64 00       	.word	0x0064	; ????
  4a:	00 00       	nop
  4c:	00 00       	nop
  4e:	0a 00       	.word	0x000a	; ????
  50:	00 00       	nop
  52:	00 00       	nop
  54:	01 00       	.word	0x0001	; ????
  56:	00 00       	nop
  58:	00 00       	nop
  5a:	2c 76       	andi	r18, 0x6C	; 108
  5c:	d8 88       	ldd	r13, Y+16	; 0x10
  5e:	dc 67       	ori	r29, 0x7C	; 124
  60:	4f 08       	sbc	r4, r15
  62:	23 df       	rcall	.-442    	; 0xfffffeaa <__ftoa_engine+0xfffffeaa>
  64:	c1 df       	rcall	.-126    	; 0xffffffe8 <__ftoa_engine+0xffffffe8>
  66:	ae 59       	subi	r26, 0x9E	; 158
  68:	e1 b1       	in	r30, 0x01	; 1
  6a:	b7 96       	adiw	r30, 0x27	; 39
  6c:	e5 e3       	ldi	r30, 0x35	; 53
  6e:	e4 53       	subi	r30, 0x34	; 52
  70:	c6 3a       	cpi	r28, 0xA6	; 166
  72:	e6 51       	subi	r30, 0x16	; 22
  74:	99 76       	andi	r25, 0x69	; 105
  76:	96 e8       	ldi	r25, 0x86	; 134
  78:	e6 c2       	rjmp	.+1484   	; 0x646 <__ftoa_engine+0x646>
  7a:	84 26       	eor	r8, r20
  7c:	eb 89       	ldd	r30, Y+19	; 0x13
  7e:	8c 9b       	sbis	0x11, 4	; 17
  80:	62 ed       	ldi	r22, 0xD2	; 210
  82:	40 7c       	andi	r20, 0xC0	; 192
  84:	6f fc       	.word	0xfc6f	; ????
  86:	ef bc       	out	0x2f, r14	; 47
  88:	9c 9f       	mul	r25, r28
  8a:	40 f2       	brcs	.-112    	; 0x1c <.progmem.data+0x1c>
  8c:	ba a5       	ldd	r27, Y+42	; 0x2a
  8e:	6f a5       	ldd	r22, Y+47	; 0x2f
  90:	f4 90       	lpm	r15, Z
  92:	05 5a       	subi	r16, 0xA5	; 165
  94:	2a f7       	brpl	.-54     	; 0x60 <.progmem.data+0x60>
  96:	5c 93       	st	X, r21
  98:	6b 6c       	ori	r22, 0xCB	; 203
  9a:	f9 67       	ori	r31, 0x79	; 121
  9c:	6d c1       	rjmp	.+730    	; 0x378 <__ftoa_engine+0x378>
  9e:	1b fc       	.word	0xfc1b	; ????
  a0:	e0 e4       	ldi	r30, 0x40	; 64
  a2:	0d 47       	sbci	r16, 0x7D	; 125
  a4:	fe f5       	brtc	.+126    	; 0x124 <__ftoa_engine+0x124>
  a6:	20 e6       	ldi	r18, 0x60	; 96
  a8:	b5 00       	.word	0x00b5	; ????
  aa:	d0 ed       	ldi	r29, 0xD0	; 208
  ac:	90 2e       	mov	r9, r16
  ae:	03 00       	.word	0x0003	; ????
  b0:	94 35       	cpi	r25, 0x54	; 84
  b2:	77 05       	cpc	r23, r7
  b4:	00 80       	ld	r0, Z
  b6:	84 1e       	adc	r8, r20
  b8:	08 00       	.word	0x0008	; ????
  ba:	00 20       	and	r0, r0
  bc:	4e 0a       	sbc	r4, r30
  be:	00 00       	nop
  c0:	00 c8       	rjmp	.-4096   	; 0xfffff0c2 <__ftoa_engine+0xfffff0c2>
  c2:	0c 33       	cpi	r16, 0x3C	; 60
  c4:	33 33       	cpi	r19, 0x33	; 51
  c6:	33 0f       	add	r19, r19
  c8:	98 6e       	ori	r25, 0xE8	; 232
  ca:	12 83       	std	Z+2, r17	; 0x02
  cc:	11 41       	sbci	r17, 0x11	; 17
  ce:	ef 8d       	ldd	r30, Y+31	; 0x1f
  d0:	21 14       	cp	r2, r1
  d2:	89 3b       	cpi	r24, 0xB9	; 185
  d4:	e6 55       	subi	r30, 0x56	; 86
  d6:	16 cf       	rjmp	.-468    	; 0xffffff04 <__ftoa_engine+0xffffff04>
  d8:	fe e6       	ldi	r31, 0x6E	; 110
  da:	db 18       	sub	r13, r11
  dc:	d1 84       	ldd	r13, Z+9	; 0x09
  de:	4b 38       	cpi	r20, 0x8B	; 139
  e0:	1b f7       	brvc	.-58     	; 0xa8 <.progmem.data+0xa8>
  e2:	7c 1d       	adc	r23, r12
  e4:	90 1d       	adc	r25, r0
  e6:	a4 bb       	out	0x14, r26	; 20
  e8:	e4 24       	eor	r14, r4
  ea:	20 32       	cpi	r18, 0x20	; 32
  ec:	84 72       	andi	r24, 0x24	; 36
  ee:	5e 22       	and	r5, r30
  f0:	81 00       	.word	0x0081	; ????
  f2:	c9 f1       	breq	.+114    	; 0x166 <__ftoa_engine+0x166>
  f4:	24 ec       	ldi	r18, 0xC4	; 196
  f6:	a1 e5       	ldi	r26, 0x51	; 81
  f8:	3d 27       	eor	r19, r29

ldiv.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ldiv>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <ldiv>

setjmp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <setjmp>:
   0:	dc 01       	movw	r26, r24
   2:	2d 92       	st	X+, r2
   4:	3d 92       	st	X+, r3
   6:	4d 92       	st	X+, r4
   8:	5d 92       	st	X+, r5
   a:	6d 92       	st	X+, r6
   c:	7d 92       	st	X+, r7
   e:	8d 92       	st	X+, r8
  10:	9d 92       	st	X+, r9
  12:	ad 92       	st	X+, r10
  14:	bd 92       	st	X+, r11
  16:	cd 92       	st	X+, r12
  18:	dd 92       	st	X+, r13
  1a:	ed 92       	st	X+, r14
  1c:	fd 92       	st	X+, r15
  1e:	0d 93       	st	X+, r16
  20:	1d 93       	st	X+, r17
  22:	cd 93       	st	X+, r28
  24:	dd 93       	st	X+, r29
  26:	ff 91       	pop	r31
  28:	ef 91       	pop	r30
  2a:	8d b7       	in	r24, 0x3d	; 61
  2c:	8d 93       	st	X+, r24
  2e:	8e b7       	in	r24, 0x3e	; 62
  30:	8d 93       	st	X+, r24
  32:	8f b7       	in	r24, 0x3f	; 63
  34:	8d 93       	st	X+, r24
  36:	ed 93       	st	X+, r30
  38:	fd 93       	st	X+, r31
  3a:	88 27       	eor	r24, r24
  3c:	99 27       	eor	r25, r25
  3e:	09 94       	ijmp

00000040 <longjmp>:
  40:	dc 01       	movw	r26, r24
  42:	cb 01       	movw	r24, r22
  44:	81 30       	cpi	r24, 0x01	; 1
  46:	91 05       	cpc	r25, r1
  48:	81 1d       	adc	r24, r1
  4a:	2d 90       	ld	r2, X+
  4c:	3d 90       	ld	r3, X+
  4e:	4d 90       	ld	r4, X+
  50:	5d 90       	ld	r5, X+
  52:	6d 90       	ld	r6, X+
  54:	7d 90       	ld	r7, X+
  56:	8d 90       	ld	r8, X+
  58:	9d 90       	ld	r9, X+
  5a:	ad 90       	ld	r10, X+
  5c:	bd 90       	ld	r11, X+
  5e:	cd 90       	ld	r12, X+
  60:	dd 90       	ld	r13, X+
  62:	ed 90       	ld	r14, X+
  64:	fd 90       	ld	r15, X+
  66:	0d 91       	ld	r16, X+
  68:	1d 91       	ld	r17, X+
  6a:	cd 91       	ld	r28, X+
  6c:	dd 91       	ld	r29, X+
  6e:	ed 91       	ld	r30, X+
  70:	fd 91       	ld	r31, X+
  72:	0d 90       	ld	r0, X+
  74:	f8 94       	cli
  76:	fe bf       	out	0x3e, r31	; 62
  78:	0f be       	out	0x3f, r0	; 63
  7a:	ed bf       	out	0x3d, r30	; 61
  7c:	ed 91       	ld	r30, X+
  7e:	fd 91       	ld	r31, X+
  80:	09 94       	ijmp

isascii.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isascii>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <isascii>
   6:	80 95       	com	r24
   8:	80 78       	andi	r24, 0x80	; 128
   a:	08 95       	ret

toascii.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <toascii>:
   0:	99 27       	eor	r25, r25
   2:	8f 77       	andi	r24, 0x7F	; 127
   4:	08 95       	ret

isalnum.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isalnum>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <isalnum>
   6:	80 53       	subi	r24, 0x30	; 48
   8:	8a 50       	subi	r24, 0x0A	; 10
   a:	00 f0       	brcs	.+0      	; 0xc <isalnum+0xc>
   c:	86 5c       	subi	r24, 0xC6	; 198
   e:	0c 94 00 00 	jmp	0	; 0x0 <isalnum>
  12:	08 95       	ret

cty_isfalse.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__ctype_isfalse>:
   0:	99 27       	eor	r25, r25
   2:	88 27       	eor	r24, r24

00000004 <__ctype_istrue>:
   4:	08 95       	ret

isalpha.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isupper>:
   0:	85 fd       	sbrc	r24, 5
   2:	0c 94 00 00 	jmp	0	; 0x0 <isupper>

00000006 <isalpha>:
   6:	80 62       	ori	r24, 0x20	; 32

00000008 <islower>:
   8:	91 11       	cpse	r25, r1
   a:	0c 94 00 00 	jmp	0	; 0x0 <isupper>
   e:	81 56       	subi	r24, 0x61	; 97
  10:	8a 51       	subi	r24, 0x1A	; 26
  12:	00 f4       	brcc	.+0      	; 0x14 <islower+0xc>
  14:	08 95       	ret

isdigit.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isdigit>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <isdigit>
   6:	80 53       	subi	r24, 0x30	; 48
   8:	8a 50       	subi	r24, 0x0A	; 10
   a:	00 f4       	brcc	.+0      	; 0xc <isdigit+0xc>
   c:	08 95       	ret

isxdigit.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isxdigit>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <isxdigit>
   6:	80 53       	subi	r24, 0x30	; 48
   8:	8a 50       	subi	r24, 0x0A	; 10
   a:	00 f0       	brcs	.+0      	; 0xc <isxdigit+0xc>
   c:	86 5c       	subi	r24, 0xC6	; 198
   e:	80 62       	ori	r24, 0x20	; 32
  10:	81 56       	subi	r24, 0x61	; 97
  12:	86 50       	subi	r24, 0x06	; 6
  14:	00 f4       	brcc	.+0      	; 0x16 <isxdigit+0x16>
  16:	08 95       	ret

iscntrl.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <iscntrl>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <iscntrl>
   6:	8f 37       	cpi	r24, 0x7F	; 127
   8:	01 f0       	breq	.+0      	; 0xa <iscntrl+0xa>
   a:	80 52       	subi	r24, 0x20	; 32
   c:	00 f4       	brcc	.+0      	; 0xe <iscntrl+0xe>
   e:	08 95       	ret

isprint.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isgraph>:
   0:	80 32       	cpi	r24, 0x20	; 32
   2:	01 f0       	breq	.+0      	; 0x4 <isprint>

00000004 <isprint>:
   4:	91 11       	cpse	r25, r1
   6:	0c 94 00 00 	jmp	0	; 0x0 <isgraph>
   a:	80 52       	subi	r24, 0x20	; 32
   c:	8f 55       	subi	r24, 0x5F	; 95
   e:	00 f4       	brcc	.+0      	; 0x10 <isprint+0xc>
  10:	08 95       	ret

isspace.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isspace>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <isspace>
   6:	80 32       	cpi	r24, 0x20	; 32
   8:	01 f0       	breq	.+0      	; 0xa <isspace+0xa>
   a:	89 50       	subi	r24, 0x09	; 9
   c:	85 50       	subi	r24, 0x05	; 5
   e:	00 f4       	brcc	.+0      	; 0x10 <isspace+0x10>
  10:	08 95       	ret

isblank.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <isblank>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <isblank>
   6:	80 32       	cpi	r24, 0x20	; 32
   8:	01 f0       	breq	.+0      	; 0xa <isblank+0xa>
   a:	89 30       	cpi	r24, 0x09	; 9
   c:	01 f4       	brne	.+0      	; 0xe <isblank+0xe>
   e:	08 95       	ret

ispunct.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ispunct>:
   0:	91 11       	cpse	r25, r1
   2:	0c 94 00 00 	jmp	0	; 0x0 <ispunct>
   6:	81 52       	subi	r24, 0x21	; 33
   8:	8e 55       	subi	r24, 0x5E	; 94
   a:	00 f4       	brcc	.+0      	; 0xc <ispunct+0xc>
   c:	81 58       	subi	r24, 0x81	; 129
   e:	0e 94 00 00 	call	0	; 0x0 <ispunct>
  12:	88 23       	and	r24, r24
  14:	01 f4       	brne	.+0      	; 0x16 <ispunct+0x16>
  16:	81 e0       	ldi	r24, 0x01	; 1
  18:	08 95       	ret

tolower.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <tolower>:
   0:	91 11       	cpse	r25, r1
   2:	08 95       	ret
   4:	81 54       	subi	r24, 0x41	; 65
   6:	8a 51       	subi	r24, 0x1A	; 26
   8:	00 f4       	brcc	.+0      	; 0xa <tolower+0xa>
   a:	80 5e       	subi	r24, 0xE0	; 224
   c:	85 5a       	subi	r24, 0xA5	; 165
   e:	08 95       	ret

toupper.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <toupper>:
   0:	91 11       	cpse	r25, r1
   2:	08 95       	ret
   4:	81 56       	subi	r24, 0x61	; 97
   6:	8a 51       	subi	r24, 0x1A	; 26
   8:	00 f4       	brcc	.+0      	; 0xa <toupper+0xa>
   a:	80 52       	subi	r24, 0x20	; 32
   c:	85 58       	subi	r24, 0x85	; 133
   e:	08 95       	ret

strtok_P.o:     формат файла elf32-avr


Дизассемблирование раздела .bss:

00000000 <p.1653>:
	...

Дизассемблирование раздела .text.avr-libc:

00000000 <strtok_P>:
   0:	40 e0       	ldi	r20, 0x00	; 0
   2:	50 e0       	ldi	r21, 0x00	; 0
   4:	0c 94 00 00 	jmp	0	; 0x0 <strtok_P>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

memchr_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memchr_P>:
   0:	fc 01       	movw	r30, r24
   2:	41 50       	subi	r20, 0x01	; 1
   4:	50 40       	sbci	r21, 0x00	; 0
   6:	00 f0       	brcs	.+0      	; 0x8 <memchr_P+0x8>
   8:	05 90       	lpm	r0, Z+
   a:	06 16       	cp	r0, r22
   c:	01 f4       	brne	.+0      	; 0xe <memchr_P+0xe>
   e:	31 97       	sbiw	r30, 0x01	; 1
  10:	cf 01       	movw	r24, r30
  12:	08 95       	ret
  14:	88 27       	eor	r24, r24
  16:	99 27       	eor	r25, r25
  18:	08 95       	ret

memcmp_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memcmp_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	00 c0       	rjmp	.+0      	; 0x6 <memcmp_P+0x6>
   6:	8d 91       	ld	r24, X+
   8:	05 90       	lpm	r0, Z+
   a:	80 19       	sub	r24, r0
   c:	01 f4       	brne	.+0      	; 0xe <memcmp_P+0xe>
   e:	41 50       	subi	r20, 0x01	; 1
  10:	50 40       	sbci	r21, 0x00	; 0
  12:	00 f4       	brcc	.+0      	; 0x14 <memcmp_P+0x14>
  14:	88 1b       	sub	r24, r24
  16:	99 0b       	sbc	r25, r25
  18:	08 95       	ret

memccpy_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memccpy_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	21 50       	subi	r18, 0x01	; 1
   6:	30 40       	sbci	r19, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <memccpy_P+0xa>
   a:	05 90       	lpm	r0, Z+
   c:	0d 92       	st	X+, r0
   e:	04 16       	cp	r0, r20
  10:	01 f4       	brne	.+0      	; 0x12 <memccpy_P+0x12>
  12:	cd 01       	movw	r24, r26
  14:	08 95       	ret
  16:	88 27       	eor	r24, r24
  18:	99 27       	eor	r25, r25
  1a:	08 95       	ret

memcpy_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memcpy_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	00 c0       	rjmp	.+0      	; 0x6 <memcpy_P+0x6>
   6:	05 90       	lpm	r0, Z+
   8:	0d 92       	st	X+, r0
   a:	41 50       	subi	r20, 0x01	; 1
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	00 f4       	brcc	.+0      	; 0x10 <memcpy_P+0x10>
  10:	08 95       	ret

memrchr_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memrchr_P>:
   0:	fa 01       	movw	r30, r20
   2:	30 96       	adiw	r30, 0x00	; 0
   4:	01 f0       	breq	.+0      	; 0x6 <memrchr_P+0x6>
   6:	e8 0f       	add	r30, r24
   8:	f9 1f       	adc	r31, r25
   a:	31 97       	sbiw	r30, 0x01	; 1
   c:	c8 95       	lpm
   e:	06 16       	cp	r0, r22
  10:	01 f0       	breq	.+0      	; 0x12 <memrchr_P+0x12>
  12:	41 50       	subi	r20, 0x01	; 1
  14:	50 40       	sbci	r21, 0x00	; 0
  16:	01 f4       	brne	.+0      	; 0x18 <memrchr_P+0x18>
  18:	fa 01       	movw	r30, r20
  1a:	cf 01       	movw	r24, r30
  1c:	08 95       	ret

strcasecmp_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcasecmp_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	8d 91       	ld	r24, X+
   6:	81 34       	cpi	r24, 0x41	; 65
   8:	04 f0       	brlt	.+0      	; 0xa <strcasecmp_P+0xa>
   a:	8b 35       	cpi	r24, 0x5B	; 91
   c:	04 f4       	brge	.+0      	; 0xe <strcasecmp_P+0xe>
   e:	80 5e       	subi	r24, 0xE0	; 224
  10:	65 91       	lpm	r22, Z+
  12:	61 34       	cpi	r22, 0x41	; 65
  14:	04 f0       	brlt	.+0      	; 0x16 <strcasecmp_P+0x16>
  16:	6b 35       	cpi	r22, 0x5B	; 91
  18:	04 f4       	brge	.+0      	; 0x1a <strcasecmp_P+0x1a>
  1a:	60 5e       	subi	r22, 0xE0	; 224
  1c:	86 1b       	sub	r24, r22
  1e:	61 11       	cpse	r22, r1
  20:	01 f0       	breq	.+0      	; 0x22 <strcasecmp_P+0x22>
  22:	99 0b       	sbc	r25, r25
  24:	08 95       	ret

strcat_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcat_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	0d 90       	ld	r0, X+
   6:	00 20       	and	r0, r0
   8:	01 f4       	brne	.+0      	; 0xa <strcat_P+0xa>
   a:	11 97       	sbiw	r26, 0x01	; 1
   c:	05 90       	lpm	r0, Z+
   e:	0d 92       	st	X+, r0
  10:	00 20       	and	r0, r0
  12:	01 f4       	brne	.+0      	; 0x14 <strcat_P+0x14>
  14:	08 95       	ret

strchr_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strchr_P>:
   0:	fc 01       	movw	r30, r24
   2:	05 90       	lpm	r0, Z+
   4:	06 16       	cp	r0, r22
   6:	01 f0       	breq	.+0      	; 0x8 <strchr_P+0x8>
   8:	00 20       	and	r0, r0
   a:	01 f4       	brne	.+0      	; 0xc <strchr_P+0xc>
   c:	c0 01       	movw	r24, r0
   e:	08 95       	ret
  10:	31 97       	sbiw	r30, 0x01	; 1
  12:	cf 01       	movw	r24, r30
  14:	08 95       	ret

strchrnul_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strchrnul_P>:
   0:	fc 01       	movw	r30, r24
   2:	05 90       	lpm	r0, Z+
   4:	06 16       	cp	r0, r22
   6:	01 10       	cpse	r0, r1
   8:	01 f4       	brne	.+0      	; 0xa <strchrnul_P+0xa>
   a:	31 97       	sbiw	r30, 0x01	; 1
   c:	cf 01       	movw	r24, r30
   e:	08 95       	ret

strcmp_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcmp_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	8d 91       	ld	r24, X+
   6:	05 90       	lpm	r0, Z+
   8:	80 19       	sub	r24, r0
   a:	01 10       	cpse	r0, r1
   c:	01 f0       	breq	.+0      	; 0xe <strcmp_P+0xe>
   e:	99 0b       	sbc	r25, r25
  10:	08 95       	ret

strcpy_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcpy_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	05 90       	lpm	r0, Z+
   6:	0d 92       	st	X+, r0
   8:	00 20       	and	r0, r0
   a:	01 f4       	brne	.+0      	; 0xc <strcpy_P+0xc>
   c:	08 95       	ret

strcspn_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcspn_P>:
   0:	dc 01       	movw	r26, r24
   2:	5d 91       	ld	r21, X+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strcspn_P+0x8>
   8:	fb 01       	movw	r30, r22
   a:	05 90       	lpm	r0, Z+
   c:	05 16       	cp	r0, r21
   e:	01 10       	cpse	r0, r1
  10:	01 f4       	brne	.+0      	; 0x12 <strcspn_P+0x12>
  12:	01 f4       	brne	.+0      	; 0x14 <strcspn_P+0x14>
  14:	80 95       	com	r24
  16:	90 95       	com	r25
  18:	8a 0f       	add	r24, r26
  1a:	9b 1f       	adc	r25, r27
  1c:	08 95       	ret

strlcat_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strlcat_P>:
   0:	dc 01       	movw	r26, r24
   2:	fb 01       	movw	r30, r22
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strlcat_P+0xa>
   a:	0d 90       	ld	r0, X+
   c:	00 20       	and	r0, r0
   e:	01 f4       	brne	.+0      	; 0x10 <strlcat_P+0x10>
  10:	11 97       	sbiw	r26, 0x01	; 1
  12:	00 c0       	rjmp	.+0      	; 0x14 <strlcat_P+0x14>
  14:	05 90       	lpm	r0, Z+
  16:	0d 92       	st	X+, r0
  18:	00 20       	and	r0, r0
  1a:	01 f0       	breq	.+0      	; 0x1c <strlcat_P+0x1c>
  1c:	41 50       	subi	r20, 0x01	; 1
  1e:	50 40       	sbci	r21, 0x00	; 0
  20:	00 f4       	brcc	.+0      	; 0x22 <strlcat_P+0x22>
  22:	1c 92       	st	X, r1
  24:	bf 01       	movw	r22, r30
  26:	05 90       	lpm	r0, Z+
  28:	00 20       	and	r0, r0
  2a:	01 f4       	brne	.+0      	; 0x2c <strlcat_P+0x2c>
  2c:	e6 1b       	sub	r30, r22
  2e:	f7 0b       	sbc	r31, r23
  30:	ae 0f       	add	r26, r30
  32:	bf 1f       	adc	r27, r31
  34:	08 94       	sec
  36:	a8 0b       	sbc	r26, r24
  38:	b9 0b       	sbc	r27, r25
  3a:	cd 01       	movw	r24, r26
  3c:	08 95       	ret

strlcpy_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strlcpy_P>:
   0:	dc 01       	movw	r26, r24
   2:	fb 01       	movw	r30, r22
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strlcpy_P+0xa>
   a:	01 f0       	breq	.+0      	; 0xc <strlcpy_P+0xc>
   c:	05 90       	lpm	r0, Z+
   e:	0d 92       	st	X+, r0
  10:	00 20       	and	r0, r0
  12:	01 f4       	brne	.+0      	; 0x14 <strlcpy_P+0x14>
  14:	e6 1b       	sub	r30, r22
  16:	f7 0b       	sbc	r31, r23
  18:	31 97       	sbiw	r30, 0x01	; 1
  1a:	cf 01       	movw	r24, r30
  1c:	08 95       	ret
  1e:	1c 92       	st	X, r1
  20:	05 90       	lpm	r0, Z+
  22:	00 20       	and	r0, r0
  24:	01 f4       	brne	.+0      	; 0x26 <strlcpy_P+0x26>
  26:	00 c0       	rjmp	.+0      	; 0x28 <strlcpy_P+0x28>

strlen_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__strlen_P>:
   0:	fc 01       	movw	r30, r24
   2:	05 90       	lpm	r0, Z+
   4:	00 20       	and	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <__strlen_P+0x8>
   8:	80 95       	com	r24
   a:	90 95       	com	r25
   c:	8e 0f       	add	r24, r30
   e:	9f 1f       	adc	r25, r31
  10:	08 95       	ret

strncasecmp_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncasecmp_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strncasecmp_P+0xa>
   a:	8d 91       	ld	r24, X+
   c:	81 34       	cpi	r24, 0x41	; 65
   e:	04 f0       	brlt	.+0      	; 0x10 <strncasecmp_P+0x10>
  10:	8b 35       	cpi	r24, 0x5B	; 91
  12:	04 f4       	brge	.+0      	; 0x14 <strncasecmp_P+0x14>
  14:	80 5e       	subi	r24, 0xE0	; 224
  16:	65 91       	lpm	r22, Z+
  18:	61 34       	cpi	r22, 0x41	; 65
  1a:	04 f0       	brlt	.+0      	; 0x1c <strncasecmp_P+0x1c>
  1c:	6b 35       	cpi	r22, 0x5B	; 91
  1e:	04 f4       	brge	.+0      	; 0x20 <strncasecmp_P+0x20>
  20:	60 5e       	subi	r22, 0xE0	; 224
  22:	86 1b       	sub	r24, r22
  24:	61 11       	cpse	r22, r1
  26:	01 f0       	breq	.+0      	; 0x28 <strncasecmp_P+0x28>
  28:	99 0b       	sbc	r25, r25
  2a:	08 95       	ret
  2c:	88 1b       	sub	r24, r24
  2e:	00 c0       	rjmp	.+0      	; 0x30 <strncasecmp_P+0x30>

strncat_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncat_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	0d 90       	ld	r0, X+
   6:	00 20       	and	r0, r0
   8:	01 f4       	brne	.+0      	; 0xa <strncat_P+0xa>
   a:	11 97       	sbiw	r26, 0x01	; 1
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f0       	brcs	.+0      	; 0x12 <strncat_P+0x12>
  12:	05 90       	lpm	r0, Z+
  14:	00 20       	and	r0, r0
  16:	0d 92       	st	X+, r0
  18:	01 f4       	brne	.+0      	; 0x1a <strncat_P+0x1a>
  1a:	08 95       	ret
  1c:	1c 92       	st	X, r1
  1e:	08 95       	ret

strncmp_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncmp_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strncmp_P+0xa>
   a:	8d 91       	ld	r24, X+
   c:	05 90       	lpm	r0, Z+
   e:	80 19       	sub	r24, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strncmp_P+0x12>
  12:	00 20       	and	r0, r0
  14:	01 f4       	brne	.+0      	; 0x16 <strncmp_P+0x16>
  16:	88 1b       	sub	r24, r24
  18:	99 0b       	sbc	r25, r25
  1a:	08 95       	ret

strncpy_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncpy_P>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strncpy_P+0xa>
   a:	05 90       	lpm	r0, Z+
   c:	0d 92       	st	X+, r0
   e:	00 20       	and	r0, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strncpy_P+0x12>
  12:	00 c0       	rjmp	.+0      	; 0x14 <strncpy_P+0x14>
  14:	1d 92       	st	X+, r1
  16:	41 50       	subi	r20, 0x01	; 1
  18:	50 40       	sbci	r21, 0x00	; 0
  1a:	00 f4       	brcc	.+0      	; 0x1c <strncpy_P+0x1c>
  1c:	08 95       	ret

strnlen_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strnlen_P>:
   0:	fc 01       	movw	r30, r24
   2:	05 90       	lpm	r0, Z+
   4:	61 50       	subi	r22, 0x01	; 1
   6:	70 40       	sbci	r23, 0x00	; 0
   8:	01 10       	cpse	r0, r1
   a:	00 f4       	brcc	.+0      	; 0xc <strnlen_P+0xc>
   c:	80 95       	com	r24
   e:	90 95       	com	r25
  10:	8e 0f       	add	r24, r30
  12:	9f 1f       	adc	r25, r31
  14:	08 95       	ret

strpbrk_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strpbrk_P>:
   0:	dc 01       	movw	r26, r24
   2:	99 27       	eor	r25, r25
   4:	8d 91       	ld	r24, X+
   6:	88 23       	and	r24, r24
   8:	01 f0       	breq	.+0      	; 0xa <strpbrk_P+0xa>
   a:	fb 01       	movw	r30, r22
   c:	05 90       	lpm	r0, Z+
   e:	08 16       	cp	r0, r24
  10:	01 10       	cpse	r0, r1
  12:	01 f4       	brne	.+0      	; 0x14 <strpbrk_P+0x14>
  14:	01 f4       	brne	.+0      	; 0x16 <strpbrk_P+0x16>
  16:	11 97       	sbiw	r26, 0x01	; 1
  18:	cd 01       	movw	r24, r26
  1a:	08 95       	ret

strrchr_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strrchr_P>:
   0:	fc 01       	movw	r30, r24
   2:	81 e0       	ldi	r24, 0x01	; 1
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	05 90       	lpm	r0, Z+
   8:	06 16       	cp	r0, r22
   a:	01 f4       	brne	.+0      	; 0xc <strrchr_P+0xc>
   c:	cf 01       	movw	r24, r30
   e:	00 20       	and	r0, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strrchr_P+0x12>
  12:	01 97       	sbiw	r24, 0x01	; 1
  14:	08 95       	ret

strsep_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strsep_P>:
   0:	fc 01       	movw	r30, r24
   2:	a0 81       	ld	r26, Z
   4:	b1 81       	ldd	r27, Z+1	; 0x01
   6:	ad 01       	movw	r20, r26
   8:	10 96       	adiw	r26, 0x00	; 0
   a:	01 f0       	breq	.+0      	; 0xc <strsep_P+0xc>
   c:	3d 91       	ld	r19, X+
   e:	fb 01       	movw	r30, r22
  10:	05 90       	lpm	r0, Z+
  12:	03 16       	cp	r0, r19
  14:	01 10       	cpse	r0, r1
  16:	01 f4       	brne	.+0      	; 0x18 <strsep_P+0x18>
  18:	01 f4       	brne	.+0      	; 0x1a <strsep_P+0x1a>
  1a:	00 20       	and	r0, r0
  1c:	01 f4       	brne	.+0      	; 0x1e <strsep_P+0x1e>
  1e:	d0 01       	movw	r26, r0
  20:	00 c0       	rjmp	.+0      	; 0x22 <strsep_P+0x22>
  22:	1e 92       	st	-X, r1
  24:	11 96       	adiw	r26, 0x01	; 1
  26:	fc 01       	movw	r30, r24
  28:	a0 83       	st	Z, r26
  2a:	b1 83       	std	Z+1, r27	; 0x01
  2c:	ca 01       	movw	r24, r20
  2e:	08 95       	ret

strspn_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strspn_P>:
   0:	dc 01       	movw	r26, r24
   2:	5d 91       	ld	r21, X+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strspn_P+0x8>
   8:	fb 01       	movw	r30, r22
   a:	05 90       	lpm	r0, Z+
   c:	05 16       	cp	r0, r21
   e:	01 10       	cpse	r0, r1
  10:	01 f4       	brne	.+0      	; 0x12 <strspn_P+0x12>
  12:	01 f0       	breq	.+0      	; 0x14 <strspn_P+0x14>
  14:	80 95       	com	r24
  16:	90 95       	com	r25
  18:	8a 0f       	add	r24, r26
  1a:	9b 1f       	adc	r25, r27
  1c:	08 95       	ret

strstr_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strstr_P>:
   0:	fb 01       	movw	r30, r22
   2:	55 91       	lpm	r21, Z+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strstr_P+0x8>
   8:	bf 01       	movw	r22, r30
   a:	dc 01       	movw	r26, r24
   c:	4d 91       	ld	r20, X+
   e:	45 17       	cp	r20, r21
  10:	41 11       	cpse	r20, r1
  12:	01 f4       	brne	.+0      	; 0x14 <strstr_P+0x14>
  14:	01 f4       	brne	.+0      	; 0x16 <strstr_P+0x16>
  16:	cd 01       	movw	r24, r26
  18:	05 90       	lpm	r0, Z+
  1a:	00 20       	and	r0, r0
  1c:	01 f0       	breq	.+0      	; 0x1e <strstr_P+0x1e>
  1e:	4d 91       	ld	r20, X+
  20:	40 15       	cp	r20, r0
  22:	41 11       	cpse	r20, r1
  24:	01 f0       	breq	.+0      	; 0x26 <strstr_P+0x26>
  26:	fb 01       	movw	r30, r22
  28:	41 11       	cpse	r20, r1
  2a:	00 c0       	rjmp	.+0      	; 0x2c <strstr_P+0x2c>
  2c:	81 e0       	ldi	r24, 0x01	; 1
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	01 97       	sbiw	r24, 0x01	; 1
  32:	08 95       	ret

strtok_rP.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strtok_rP>:
   0:	fa 01       	movw	r30, r20
   2:	a1 91       	ld	r26, Z+
   4:	b0 81       	ld	r27, Z
   6:	00 97       	sbiw	r24, 0x00	; 0
   8:	01 f4       	brne	.+0      	; 0xa <strtok_rP+0xa>
   a:	10 97       	sbiw	r26, 0x00	; 0
   c:	01 f0       	breq	.+0      	; 0xe <strtok_rP+0xe>
   e:	cd 01       	movw	r24, r26
  10:	dc 01       	movw	r26, r24
  12:	cd 01       	movw	r24, r26
  14:	0d 90       	ld	r0, X+
  16:	00 20       	and	r0, r0
  18:	01 f4       	brne	.+0      	; 0x1a <strtok_rP+0x1a>
  1a:	c0 01       	movw	r24, r0
  1c:	00 c0       	rjmp	.+0      	; 0x1e <strtok_rP+0x1e>
  1e:	fb 01       	movw	r30, r22
  20:	25 91       	lpm	r18, Z+
  22:	22 23       	and	r18, r18
  24:	01 f0       	breq	.+0      	; 0x26 <strtok_rP+0x26>
  26:	20 15       	cp	r18, r0
  28:	01 f4       	brne	.+0      	; 0x2a <strtok_rP+0x2a>
  2a:	00 c0       	rjmp	.+0      	; 0x2c <strtok_rP+0x2c>
  2c:	fb 01       	movw	r30, r22
  2e:	25 91       	lpm	r18, Z+
  30:	20 15       	cp	r18, r0
  32:	01 f4       	brne	.+0      	; 0x34 <strtok_rP+0x34>
  34:	1e 92       	st	-X, r1
  36:	11 96       	adiw	r26, 0x01	; 1
  38:	00 c0       	rjmp	.+0      	; 0x3a <strtok_rP+0x3a>
  3a:	22 23       	and	r18, r18
  3c:	01 f4       	brne	.+0      	; 0x3e <strtok_rP+0x3e>
  3e:	0d 90       	ld	r0, X+
  40:	00 20       	and	r0, r0
  42:	01 f4       	brne	.+0      	; 0x44 <strtok_rP+0x44>
  44:	d0 01       	movw	r26, r0
  46:	fa 01       	movw	r30, r20
  48:	a1 93       	st	Z+, r26
  4a:	b0 83       	st	Z, r27
  4c:	08 95       	ret

memcpy_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <memcpy_PF>:
   0:	6b bf       	out	0x3b, r22	; 59
   2:	fa 01       	movw	r30, r20
   4:	dc 01       	movw	r26, r24
   6:	00 c0       	rjmp	.+0      	; 0x8 <memcpy_PF+0x8>
   8:	07 90       	elpm	r0, Z+
   a:	0d 92       	st	X+, r0
   c:	21 50       	subi	r18, 0x01	; 1
   e:	30 40       	sbci	r19, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <memcpy_PF+0x12>
  12:	08 95       	ret

strcasecmp_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strcasecmp_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	8d 91       	ld	r24, X+
   8:	07 90       	elpm	r0, Z+
   a:	50 2d       	mov	r21, r0
   c:	40 2d       	mov	r20, r0
   e:	40 62       	ori	r20, 0x20	; 32
  10:	41 36       	cpi	r20, 0x61	; 97
  12:	04 f0       	brlt	.+0      	; 0x14 <strcasecmp_PF+0x14>
  14:	4b 37       	cpi	r20, 0x7B	; 123
  16:	04 f4       	brge	.+0      	; 0x18 <strcasecmp_PF+0x18>
  18:	50 62       	ori	r21, 0x20	; 32
  1a:	80 62       	ori	r24, 0x20	; 32
  1c:	85 1b       	sub	r24, r21
  1e:	01 f4       	brne	.+0      	; 0x20 <strcasecmp_PF+0x20>
  20:	00 20       	and	r0, r0
  22:	01 f4       	brne	.+0      	; 0x24 <strcasecmp_PF+0x24>
  24:	99 0b       	sbc	r25, r25
  26:	08 95       	ret

strcat_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strcat_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	0d 90       	ld	r0, X+
   8:	00 20       	and	r0, r0
   a:	01 f4       	brne	.+0      	; 0xc <strcat_PF+0xc>
   c:	11 97       	sbiw	r26, 0x01	; 1
   e:	07 90       	elpm	r0, Z+
  10:	0d 92       	st	X+, r0
  12:	00 20       	and	r0, r0
  14:	01 f4       	brne	.+0      	; 0x16 <strcat_PF+0x16>
  16:	08 95       	ret

strcmp_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strcmp_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	8d 91       	ld	r24, X+
   8:	07 90       	elpm	r0, Z+
   a:	80 19       	sub	r24, r0
   c:	01 f4       	brne	.+0      	; 0xe <strcmp_PF+0xe>
   e:	00 20       	and	r0, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strcmp_PF+0x12>
  12:	99 0b       	sbc	r25, r25
  14:	08 95       	ret

strcpy_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strcpy_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	07 90       	elpm	r0, Z+
   8:	0d 92       	st	X+, r0
   a:	00 20       	and	r0, r0
   c:	01 f4       	brne	.+0      	; 0xe <strcpy_PF+0xe>
   e:	08 95       	ret

strlcat_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strlcat_PF>:
   0:	cf 93       	push	r28
   2:	c6 2f       	mov	r28, r22
   4:	dc 01       	movw	r26, r24
   6:	fa 01       	movw	r30, r20
   8:	cb bf       	out	0x3b, r28	; 59
   a:	0d 90       	ld	r0, X+
   c:	21 15       	cp	r18, r1
   e:	31 05       	cpc	r19, r1
  10:	01 f0       	breq	.+0      	; 0x12 <strlcat_PF+0x12>
  12:	00 20       	and	r0, r0
  14:	01 f0       	breq	.+0      	; 0x16 <strlcat_PF+0x16>
  16:	21 50       	subi	r18, 0x01	; 1
  18:	30 40       	sbci	r19, 0x00	; 0
  1a:	00 c0       	rjmp	.+0      	; 0x1c <strlcat_PF+0x1c>
  1c:	11 97       	sbiw	r26, 0x01	; 1
  1e:	bd 01       	movw	r22, r26
  20:	68 1b       	sub	r22, r24
  22:	79 0b       	sbc	r23, r25
  24:	21 15       	cp	r18, r1
  26:	31 05       	cpc	r19, r1
  28:	01 f0       	breq	.+0      	; 0x2a <strlcat_PF+0x2a>
  2a:	21 50       	subi	r18, 0x01	; 1
  2c:	30 40       	sbci	r19, 0x00	; 0
  2e:	07 90       	elpm	r0, Z+
  30:	21 15       	cp	r18, r1
  32:	31 05       	cpc	r19, r1
  34:	01 f0       	breq	.+0      	; 0x36 <strlcat_PF+0x36>
  36:	00 20       	and	r0, r0
  38:	01 f0       	breq	.+0      	; 0x3a <strlcat_PF+0x3a>
  3a:	0d 92       	st	X+, r0
  3c:	21 50       	subi	r18, 0x01	; 1
  3e:	30 40       	sbci	r19, 0x00	; 0
  40:	00 c0       	rjmp	.+0      	; 0x42 <strlcat_PF+0x42>
  42:	1c 92       	st	X, r1
  44:	31 97       	sbiw	r30, 0x01	; 1
  46:	0b b6       	in	r0, 0x3b	; 59
  48:	01 08       	sbc	r0, r1
  4a:	0b be       	out	0x3b, r0	; 59
  4c:	07 90       	elpm	r0, Z+
  4e:	00 20       	and	r0, r0
  50:	01 f4       	brne	.+0      	; 0x52 <strlcat_PF+0x52>
  52:	31 97       	sbiw	r30, 0x01	; 1
  54:	0b b6       	in	r0, 0x3b	; 59
  56:	01 08       	sbc	r0, r1
  58:	0b be       	out	0x3b, r0	; 59
  5a:	cb 01       	movw	r24, r22
  5c:	8e 0f       	add	r24, r30
  5e:	9f 1f       	adc	r25, r31
  60:	84 1b       	sub	r24, r20
  62:	95 0b       	sbc	r25, r21
  64:	cf 91       	pop	r28
  66:	08 95       	ret

strlcpy_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strlcpy_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	21 15       	cp	r18, r1
   8:	21 05       	cpc	r18, r1
   a:	01 f0       	breq	.+0      	; 0xc <strlcpy_PF+0xc>
   c:	21 50       	subi	r18, 0x01	; 1
   e:	30 40       	sbci	r19, 0x00	; 0
  10:	01 f0       	breq	.+0      	; 0x12 <strlcpy_PF+0x12>
  12:	07 90       	elpm	r0, Z+
  14:	0d 92       	st	X+, r0
  16:	00 20       	and	r0, r0
  18:	01 f0       	breq	.+0      	; 0x1a <strlcpy_PF+0x1a>
  1a:	00 c0       	rjmp	.+0      	; 0x1c <strlcpy_PF+0x1c>
  1c:	1c 92       	st	X, r1
  1e:	07 90       	elpm	r0, Z+
  20:	00 20       	and	r0, r0
  22:	01 f4       	brne	.+0      	; 0x24 <strlcpy_PF+0x24>
  24:	e4 1b       	sub	r30, r20
  26:	f5 0b       	sbc	r31, r21
  28:	31 97       	sbiw	r30, 0x01	; 1
  2a:	cf 01       	movw	r24, r30
  2c:	08 95       	ret

strlen_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strlen_PF>:
   0:	8b bf       	out	0x3b, r24	; 59
   2:	fb 01       	movw	r30, r22
   4:	07 90       	elpm	r0, Z+
   6:	00 20       	and	r0, r0
   8:	01 f4       	brne	.+0      	; 0xa <strlen_PF+0xa>
   a:	60 95       	com	r22
   c:	70 95       	com	r23
   e:	6e 0f       	add	r22, r30
  10:	7f 1f       	adc	r23, r31
  12:	cb 01       	movw	r24, r22
  14:	08 95       	ret

strncasecmp_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strncasecmp_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	21 50       	subi	r18, 0x01	; 1
   8:	30 40       	sbci	r19, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <strncasecmp_PF+0xc>
   c:	8d 91       	ld	r24, X+
   e:	07 90       	elpm	r0, Z+
  10:	40 2d       	mov	r20, r0
  12:	50 2d       	mov	r21, r0
  14:	50 62       	ori	r21, 0x20	; 32
  16:	51 36       	cpi	r21, 0x61	; 97
  18:	04 f0       	brlt	.+0      	; 0x1a <strncasecmp_PF+0x1a>
  1a:	5b 37       	cpi	r21, 0x7B	; 123
  1c:	04 f4       	brge	.+0      	; 0x1e <strncasecmp_PF+0x1e>
  1e:	40 62       	ori	r20, 0x20	; 32
  20:	80 62       	ori	r24, 0x20	; 32
  22:	84 1b       	sub	r24, r20
  24:	01 f4       	brne	.+0      	; 0x26 <strncasecmp_PF+0x26>
  26:	00 20       	and	r0, r0
  28:	01 f4       	brne	.+0      	; 0x2a <strncasecmp_PF+0x2a>
  2a:	88 1b       	sub	r24, r24
  2c:	99 0b       	sbc	r25, r25
  2e:	08 95       	ret

strncat_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strncat_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	0d 90       	ld	r0, X+
   8:	00 20       	and	r0, r0
   a:	01 f4       	brne	.+0      	; 0xc <strncat_PF+0xc>
   c:	11 97       	sbiw	r26, 0x01	; 1
   e:	21 50       	subi	r18, 0x01	; 1
  10:	30 40       	sbci	r19, 0x00	; 0
  12:	00 f0       	brcs	.+0      	; 0x14 <strncat_PF+0x14>
  14:	07 90       	elpm	r0, Z+
  16:	00 20       	and	r0, r0
  18:	0d 92       	st	X+, r0
  1a:	01 f4       	brne	.+0      	; 0x1c <strncat_PF+0x1c>
  1c:	08 95       	ret
  1e:	1c 92       	st	X, r1
  20:	08 95       	ret

strncmp_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strncmp_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	21 50       	subi	r18, 0x01	; 1
   8:	30 40       	sbci	r19, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <strncmp_PF+0xc>
   c:	8d 91       	ld	r24, X+
   e:	07 90       	elpm	r0, Z+
  10:	80 19       	sub	r24, r0
  12:	01 f4       	brne	.+0      	; 0x14 <strncmp_PF+0x14>
  14:	00 20       	and	r0, r0
  16:	01 f4       	brne	.+0      	; 0x18 <strncmp_PF+0x18>
  18:	88 1b       	sub	r24, r24
  1a:	99 0b       	sbc	r25, r25
  1c:	08 95       	ret

strncpy_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strncpy_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	21 50       	subi	r18, 0x01	; 1
   8:	30 40       	sbci	r19, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <strncpy_PF+0xc>
   c:	07 90       	elpm	r0, Z+
   e:	0d 92       	st	X+, r0
  10:	00 20       	and	r0, r0
  12:	01 f4       	brne	.+0      	; 0x14 <strncpy_PF+0x14>
  14:	00 c0       	rjmp	.+0      	; 0x16 <strncpy_PF+0x16>
  16:	1d 92       	st	X+, r1
  18:	21 50       	subi	r18, 0x01	; 1
  1a:	30 40       	sbci	r19, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <strncpy_PF+0x1e>
  1e:	08 95       	ret

strnlen_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strnlen_PF>:
   0:	8b bf       	out	0x3b, r24	; 59
   2:	fb 01       	movw	r30, r22
   4:	07 90       	elpm	r0, Z+
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	01 10       	cpse	r0, r1
   c:	00 f4       	brcc	.+0      	; 0xe <strnlen_PF+0xe>
   e:	60 95       	com	r22
  10:	70 95       	com	r23
  12:	6e 0f       	add	r22, r30
  14:	7f 1f       	adc	r23, r31
  16:	cb 01       	movw	r24, r22
  18:	08 95       	ret

strstr_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <strstr_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	07 90       	elpm	r0, Z+
   8:	00 20       	and	r0, r0
   a:	01 f4       	brne	.+0      	; 0xc <strstr_PF+0xc>
   c:	08 95       	ret
   e:	fa 01       	movw	r30, r20
  10:	6b bf       	out	0x3b, r22	; 59
  12:	07 90       	elpm	r0, Z+
  14:	7d 91       	ld	r23, X+
  16:	77 23       	and	r23, r23
  18:	01 f0       	breq	.+0      	; 0x1a <strstr_PF+0x1a>
  1a:	70 15       	cp	r23, r0
  1c:	cd 01       	movw	r24, r26
  1e:	01 f4       	brne	.+0      	; 0x20 <strstr_PF+0x20>
  20:	07 90       	elpm	r0, Z+
  22:	00 20       	and	r0, r0
  24:	01 f0       	breq	.+0      	; 0x26 <strstr_PF+0x26>
  26:	7c 91       	ld	r23, X
  28:	77 23       	and	r23, r23
  2a:	01 f0       	breq	.+0      	; 0x2c <strstr_PF+0x2c>
  2c:	70 15       	cp	r23, r0
  2e:	01 f4       	brne	.+0      	; 0x30 <strstr_PF+0x30>
  30:	11 96       	adiw	r26, 0x01	; 1
  32:	00 c0       	rjmp	.+0      	; 0x34 <strstr_PF+0x34>
  34:	88 27       	eor	r24, r24
  36:	99 27       	eor	r25, r25
  38:	08 95       	ret
  3a:	01 97       	sbiw	r24, 0x01	; 1
  3c:	08 95       	ret

memcmp_PF.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memcmp_PF>:
   0:	fa 01       	movw	r30, r20
   2:	6b bf       	out	0x3b, r22	; 59
   4:	dc 01       	movw	r26, r24
   6:	00 c0       	rjmp	.+0      	; 0x8 <memcmp_PF+0x8>
   8:	8d 91       	ld	r24, X+
   a:	07 90       	elpm	r0, Z+
   c:	80 19       	sub	r24, r0
   e:	01 f4       	brne	.+0      	; 0x10 <memcmp_PF+0x10>
  10:	21 50       	subi	r18, 0x01	; 1
  12:	30 40       	sbci	r19, 0x00	; 0
  14:	00 f4       	brcc	.+0      	; 0x16 <memcmp_PF+0x16>
  16:	88 1b       	sub	r24, r24
  18:	99 0b       	sbc	r25, r25
  1a:	08 95       	ret

strdup.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strdup>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	fc 01       	movw	r30, r24
   c:	01 90       	ld	r0, Z+
   e:	00 20       	and	r0, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strdup+0x12>
  12:	cf 01       	movw	r24, r30
  14:	80 1b       	sub	r24, r16
  16:	91 0b       	sbc	r25, r17
  18:	0e 94 00 00 	call	0	; 0x0 <strdup>
  1c:	ec 01       	movw	r28, r24
  1e:	00 97       	sbiw	r24, 0x00	; 0
  20:	01 f0       	breq	.+0      	; 0x22 <strdup+0x22>
  22:	b8 01       	movw	r22, r16
  24:	0e 94 00 00 	call	0	; 0x0 <strdup>
  28:	ce 01       	movw	r24, r28
  2a:	df 91       	pop	r29
  2c:	cf 91       	pop	r28
  2e:	1f 91       	pop	r17
  30:	0f 91       	pop	r16
  32:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

strtok.o:     формат файла elf32-avr


Дизассемблирование раздела .bss:

00000000 <p>:
	...

Дизассемблирование раздела .text.avr-libc:

00000000 <strtok>:
   0:	40 e0       	ldi	r20, 0x00	; 0
   2:	50 e0       	ldi	r21, 0x00	; 0
   4:	0c 94 00 00 	jmp	0	; 0x0 <strtok>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

ffs.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ffs>:
   0:	e1 e0       	ldi	r30, 0x01	; 1
   2:	88 23       	and	r24, r24
   4:	01 f4       	brne	.+0      	; 0x6 <ffs+0x6>
   6:	89 2b       	or	r24, r25
   8:	01 f0       	breq	.+0      	; 0xa <ffs+0xa>
   a:	e8 e0       	ldi	r30, 0x08	; 8
   c:	e3 95       	inc	r30
   e:	87 95       	ror	r24
  10:	00 f4       	brcc	.+0      	; 0x12 <ffs+0x12>
  12:	8e 2f       	mov	r24, r30
  14:	99 27       	eor	r25, r25
  16:	08 95       	ret

ffsl.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ffsl>:
   0:	e1 e0       	ldi	r30, 0x01	; 1
   2:	66 23       	and	r22, r22
   4:	01 f4       	brne	.+0      	; 0x6 <ffsl+0x6>
   6:	e8 5f       	subi	r30, 0xF8	; 248
   8:	67 2b       	or	r22, r23
   a:	01 f4       	brne	.+0      	; 0xc <ffsl+0xc>
   c:	e8 5f       	subi	r30, 0xF8	; 248
   e:	68 2b       	or	r22, r24
  10:	01 f4       	brne	.+0      	; 0x12 <ffsl+0x12>
  12:	e9 5f       	subi	r30, 0xF9	; 249
  14:	69 2b       	or	r22, r25
  16:	01 f0       	breq	.+0      	; 0x18 <ffsl+0x18>
  18:	e3 95       	inc	r30
  1a:	67 95       	ror	r22
  1c:	00 f4       	brcc	.+0      	; 0x1e <ffsl+0x1e>
  1e:	8e 2f       	mov	r24, r30
  20:	99 27       	eor	r25, r25
  22:	08 95       	ret

ffsll.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ffsll>:
   0:	f9 01       	movw	r30, r18
   2:	21 e0       	ldi	r18, 0x01	; 1
   4:	30 97       	sbiw	r30, 0x00	; 0
   6:	01 f4       	brne	.+0      	; 0x8 <ffsll+0x8>
   8:	fa 01       	movw	r30, r20
   a:	20 5f       	subi	r18, 0xF0	; 240
   c:	30 97       	sbiw	r30, 0x00	; 0
   e:	01 f4       	brne	.+0      	; 0x10 <ffsll+0x10>
  10:	fb 01       	movw	r30, r22
  12:	20 5f       	subi	r18, 0xF0	; 240
  14:	30 97       	sbiw	r30, 0x00	; 0
  16:	01 f4       	brne	.+0      	; 0x18 <ffsll+0x18>
  18:	fc 01       	movw	r30, r24
  1a:	20 5f       	subi	r18, 0xF0	; 240
  1c:	30 97       	sbiw	r30, 0x00	; 0
  1e:	01 f0       	breq	.+0      	; 0x20 <ffsll+0x20>
  20:	ee 23       	and	r30, r30
  22:	01 f4       	brne	.+0      	; 0x24 <ffsll+0x24>
  24:	29 5f       	subi	r18, 0xF9	; 249
  26:	ef 2f       	mov	r30, r31
  28:	23 95       	inc	r18
  2a:	e7 95       	ror	r30
  2c:	00 f4       	brcc	.+0      	; 0x2e <ffsll+0x2e>
  2e:	82 2f       	mov	r24, r18
  30:	99 27       	eor	r25, r25
  32:	08 95       	ret

memccpy.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memccpy>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	21 50       	subi	r18, 0x01	; 1
   6:	30 40       	sbci	r19, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <memccpy+0xa>
   a:	01 90       	ld	r0, Z+
   c:	0d 92       	st	X+, r0
   e:	04 16       	cp	r0, r20
  10:	01 f4       	brne	.+0      	; 0x12 <memccpy+0x12>
  12:	cd 01       	movw	r24, r26
  14:	08 95       	ret
  16:	88 27       	eor	r24, r24
  18:	99 27       	eor	r25, r25
  1a:	08 95       	ret

memchr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memchr>:
   0:	fc 01       	movw	r30, r24
   2:	41 50       	subi	r20, 0x01	; 1
   4:	50 40       	sbci	r21, 0x00	; 0
   6:	00 f0       	brcs	.+0      	; 0x8 <memchr+0x8>
   8:	01 90       	ld	r0, Z+
   a:	06 16       	cp	r0, r22
   c:	01 f4       	brne	.+0      	; 0xe <memchr+0xe>
   e:	31 97       	sbiw	r30, 0x01	; 1
  10:	cf 01       	movw	r24, r30
  12:	08 95       	ret
  14:	88 27       	eor	r24, r24
  16:	99 27       	eor	r25, r25
  18:	08 95       	ret

memcmp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memcmp>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	00 c0       	rjmp	.+0      	; 0x6 <memcmp+0x6>
   6:	8d 91       	ld	r24, X+
   8:	01 90       	ld	r0, Z+
   a:	80 19       	sub	r24, r0
   c:	01 f4       	brne	.+0      	; 0xe <memcmp+0xe>
   e:	41 50       	subi	r20, 0x01	; 1
  10:	50 40       	sbci	r21, 0x00	; 0
  12:	00 f4       	brcc	.+0      	; 0x14 <memcmp+0x14>
  14:	88 1b       	sub	r24, r24
  16:	99 0b       	sbc	r25, r25
  18:	08 95       	ret

memcpy.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memcpy>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	00 c0       	rjmp	.+0      	; 0x6 <memcpy+0x6>
   6:	01 90       	ld	r0, Z+
   8:	0d 92       	st	X+, r0
   a:	41 50       	subi	r20, 0x01	; 1
   c:	50 40       	sbci	r21, 0x00	; 0
   e:	00 f4       	brcc	.+0      	; 0x10 <memcpy+0x10>
  10:	08 95       	ret

memmem.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memmem>:
   0:	21 15       	cp	r18, r1
   2:	31 05       	cpc	r19, r1
   4:	01 f0       	breq	.+0      	; 0x6 <memmem+0x6>
   6:	1f 93       	push	r17
   8:	0f 93       	push	r16
   a:	24 0f       	add	r18, r20
   c:	35 1f       	adc	r19, r21
   e:	68 0f       	add	r22, r24
  10:	79 1f       	adc	r23, r25
  12:	fa 01       	movw	r30, r20
  14:	11 91       	ld	r17, Z+
  16:	af 01       	movw	r20, r30
  18:	dc 01       	movw	r26, r24
  1a:	a6 17       	cp	r26, r22
  1c:	b7 07       	cpc	r27, r23
  1e:	00 f4       	brcc	.+0      	; 0x20 <memmem+0x20>
  20:	0d 91       	ld	r16, X+
  22:	01 17       	cp	r16, r17
  24:	01 f4       	brne	.+0      	; 0x26 <memmem+0x26>
  26:	cd 01       	movw	r24, r26
  28:	fa 01       	movw	r30, r20
  2a:	e2 17       	cp	r30, r18
  2c:	f3 07       	cpc	r31, r19
  2e:	00 f4       	brcc	.+0      	; 0x30 <memmem+0x30>
  30:	a6 17       	cp	r26, r22
  32:	b7 07       	cpc	r27, r23
  34:	00 f4       	brcc	.+0      	; 0x36 <memmem+0x36>
  36:	0d 91       	ld	r16, X+
  38:	01 90       	ld	r0, Z+
  3a:	00 15       	cp	r16, r0
  3c:	01 f0       	breq	.+0      	; 0x3e <memmem+0x3e>
  3e:	00 c0       	rjmp	.+0      	; 0x40 <memmem+0x40>
  40:	81 e0       	ldi	r24, 0x01	; 1
  42:	90 e0       	ldi	r25, 0x00	; 0
  44:	01 97       	sbiw	r24, 0x01	; 1
  46:	0f 91       	pop	r16
  48:	1f 91       	pop	r17
  4a:	08 95       	ret

memmem_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memmem_P>:
   0:	21 15       	cp	r18, r1
   2:	31 05       	cpc	r19, r1
   4:	01 f0       	breq	.+0      	; 0x6 <memmem_P+0x6>
   6:	1f 93       	push	r17
   8:	0f 93       	push	r16
   a:	24 0f       	add	r18, r20
   c:	35 1f       	adc	r19, r21
   e:	68 0f       	add	r22, r24
  10:	79 1f       	adc	r23, r25
  12:	fa 01       	movw	r30, r20
  14:	15 91       	lpm	r17, Z+
  16:	af 01       	movw	r20, r30
  18:	dc 01       	movw	r26, r24
  1a:	a6 17       	cp	r26, r22
  1c:	b7 07       	cpc	r27, r23
  1e:	00 f4       	brcc	.+0      	; 0x20 <memmem_P+0x20>
  20:	0d 91       	ld	r16, X+
  22:	01 17       	cp	r16, r17
  24:	01 f4       	brne	.+0      	; 0x26 <memmem_P+0x26>
  26:	cd 01       	movw	r24, r26
  28:	fa 01       	movw	r30, r20
  2a:	e2 17       	cp	r30, r18
  2c:	f3 07       	cpc	r31, r19
  2e:	00 f4       	brcc	.+0      	; 0x30 <memmem_P+0x30>
  30:	a6 17       	cp	r26, r22
  32:	b7 07       	cpc	r27, r23
  34:	00 f4       	brcc	.+0      	; 0x36 <memmem_P+0x36>
  36:	0d 91       	ld	r16, X+
  38:	05 90       	lpm	r0, Z+
  3a:	00 15       	cp	r16, r0
  3c:	01 f0       	breq	.+0      	; 0x3e <memmem_P+0x3e>
  3e:	00 c0       	rjmp	.+0      	; 0x40 <memmem_P+0x40>
  40:	81 e0       	ldi	r24, 0x01	; 1
  42:	90 e0       	ldi	r25, 0x00	; 0
  44:	01 97       	sbiw	r24, 0x01	; 1
  46:	0f 91       	pop	r16
  48:	1f 91       	pop	r17
  4a:	08 95       	ret

memmove.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memmove>:
   0:	68 17       	cp	r22, r24
   2:	79 07       	cpc	r23, r25
   4:	00 f4       	brcc	.+0      	; 0x6 <memmove+0x6>
   6:	fb 01       	movw	r30, r22
   8:	dc 01       	movw	r26, r24
   a:	e4 0f       	add	r30, r20
   c:	f5 1f       	adc	r31, r21
   e:	a4 0f       	add	r26, r20
  10:	b5 1f       	adc	r27, r21
  12:	00 c0       	rjmp	.+0      	; 0x14 <memmove+0x14>
  14:	02 90       	ld	r0, -Z
  16:	0e 92       	st	-X, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <memmove+0x1e>
  1e:	08 95       	ret
  20:	0c 94 00 00 	jmp	0	; 0x0 <memmove>

memrchr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memrchr>:
   0:	fa 01       	movw	r30, r20
   2:	30 96       	adiw	r30, 0x00	; 0
   4:	01 f0       	breq	.+0      	; 0x6 <memrchr+0x6>
   6:	e8 0f       	add	r30, r24
   8:	f9 1f       	adc	r31, r25
   a:	02 90       	ld	r0, -Z
   c:	06 16       	cp	r0, r22
   e:	01 f0       	breq	.+0      	; 0x10 <memrchr+0x10>
  10:	41 50       	subi	r20, 0x01	; 1
  12:	50 40       	sbci	r21, 0x00	; 0
  14:	01 f4       	brne	.+0      	; 0x16 <memrchr+0x16>
  16:	fa 01       	movw	r30, r20
  18:	cf 01       	movw	r24, r30
  1a:	08 95       	ret

memset.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <memset>:
   0:	dc 01       	movw	r26, r24
   2:	00 c0       	rjmp	.+0      	; 0x4 <memset+0x4>
   4:	6d 93       	st	X+, r22
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f4       	brcc	.+0      	; 0xc <memset+0xc>
   c:	08 95       	ret

strcasecmp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcasecmp>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	8d 91       	ld	r24, X+
   6:	81 34       	cpi	r24, 0x41	; 65
   8:	04 f0       	brlt	.+0      	; 0xa <strcasecmp+0xa>
   a:	8b 35       	cpi	r24, 0x5B	; 91
   c:	04 f4       	brge	.+0      	; 0xe <strcasecmp+0xe>
   e:	80 5e       	subi	r24, 0xE0	; 224
  10:	61 91       	ld	r22, Z+
  12:	61 34       	cpi	r22, 0x41	; 65
  14:	04 f0       	brlt	.+0      	; 0x16 <strcasecmp+0x16>
  16:	6b 35       	cpi	r22, 0x5B	; 91
  18:	04 f4       	brge	.+0      	; 0x1a <strcasecmp+0x1a>
  1a:	60 5e       	subi	r22, 0xE0	; 224
  1c:	86 1b       	sub	r24, r22
  1e:	61 11       	cpse	r22, r1
  20:	01 f0       	breq	.+0      	; 0x22 <strcasecmp+0x22>
  22:	99 0b       	sbc	r25, r25
  24:	08 95       	ret

strcasestr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcasestr>:
   0:	fb 01       	movw	r30, r22
   2:	51 91       	ld	r21, Z+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strcasestr+0x8>
   8:	bf 01       	movw	r22, r30
   a:	dc 01       	movw	r26, r24
   c:	05 2e       	mov	r0, r21
   e:	4d 91       	ld	r20, X+
  10:	44 23       	and	r20, r20
  12:	01 f0       	breq	.+0      	; 0x14 <strcasestr+0x14>
  14:	00 d0       	rcall	.+0      	; 0x16 <strcasestr+0x16>
  16:	01 f4       	brne	.+0      	; 0x18 <strcasestr+0x18>
  18:	cd 01       	movw	r24, r26
  1a:	01 90       	ld	r0, Z+
  1c:	00 20       	and	r0, r0
  1e:	01 f0       	breq	.+0      	; 0x20 <strcasestr+0x20>
  20:	4d 91       	ld	r20, X+
  22:	41 11       	cpse	r20, r1
  24:	00 d0       	rcall	.+0      	; 0x26 <strcasestr+0x26>
  26:	01 f0       	breq	.+0      	; 0x28 <strcasestr+0x28>
  28:	fb 01       	movw	r30, r22
  2a:	41 11       	cpse	r20, r1
  2c:	00 c0       	rjmp	.+0      	; 0x2e <strcasestr+0x2e>
  2e:	81 e0       	ldi	r24, 0x01	; 1
  30:	90 e0       	ldi	r25, 0x00	; 0
  32:	01 97       	sbiw	r24, 0x01	; 1
  34:	08 95       	ret
  36:	40 25       	eor	r20, r0
  38:	01 f0       	breq	.+0      	; 0x3a <strcasestr+0x3a>
  3a:	40 32       	cpi	r20, 0x20	; 32
  3c:	01 f4       	brne	.+0      	; 0x3e <strcasestr+0x3e>
  3e:	40 29       	or	r20, r0
  40:	4b 57       	subi	r20, 0x7B	; 123
  42:	46 5e       	subi	r20, 0xE6	; 230
  44:	00 f0       	brcs	.+0      	; 0x46 <strcasestr+0x46>
  46:	18 94       	sez
  48:	08 95       	ret

strcasestr_P.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcasestr_P>:
   0:	fb 01       	movw	r30, r22
   2:	55 91       	lpm	r21, Z+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strcasestr_P+0x8>
   8:	bf 01       	movw	r22, r30
   a:	dc 01       	movw	r26, r24
   c:	05 2e       	mov	r0, r21
   e:	4d 91       	ld	r20, X+
  10:	44 23       	and	r20, r20
  12:	01 f0       	breq	.+0      	; 0x14 <strcasestr_P+0x14>
  14:	00 d0       	rcall	.+0      	; 0x16 <strcasestr_P+0x16>
  16:	01 f4       	brne	.+0      	; 0x18 <strcasestr_P+0x18>
  18:	cd 01       	movw	r24, r26
  1a:	05 90       	lpm	r0, Z+
  1c:	00 20       	and	r0, r0
  1e:	01 f0       	breq	.+0      	; 0x20 <strcasestr_P+0x20>
  20:	4d 91       	ld	r20, X+
  22:	41 11       	cpse	r20, r1
  24:	00 d0       	rcall	.+0      	; 0x26 <strcasestr_P+0x26>
  26:	01 f0       	breq	.+0      	; 0x28 <strcasestr_P+0x28>
  28:	fb 01       	movw	r30, r22
  2a:	41 11       	cpse	r20, r1
  2c:	00 c0       	rjmp	.+0      	; 0x2e <strcasestr_P+0x2e>
  2e:	81 e0       	ldi	r24, 0x01	; 1
  30:	90 e0       	ldi	r25, 0x00	; 0
  32:	01 97       	sbiw	r24, 0x01	; 1
  34:	08 95       	ret
  36:	40 25       	eor	r20, r0
  38:	01 f0       	breq	.+0      	; 0x3a <strcasestr_P+0x3a>
  3a:	40 32       	cpi	r20, 0x20	; 32
  3c:	01 f4       	brne	.+0      	; 0x3e <strcasestr_P+0x3e>
  3e:	40 29       	or	r20, r0
  40:	4b 57       	subi	r20, 0x7B	; 123
  42:	46 5e       	subi	r20, 0xE6	; 230
  44:	00 f0       	brcs	.+0      	; 0x46 <strcasestr_P+0x46>
  46:	18 94       	sez
  48:	08 95       	ret

strcat.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcat>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	0d 90       	ld	r0, X+
   6:	00 20       	and	r0, r0
   8:	01 f4       	brne	.+0      	; 0xa <strcat+0xa>
   a:	11 97       	sbiw	r26, 0x01	; 1
   c:	01 90       	ld	r0, Z+
   e:	0d 92       	st	X+, r0
  10:	00 20       	and	r0, r0
  12:	01 f4       	brne	.+0      	; 0x14 <strcat+0x14>
  14:	08 95       	ret

strchr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strchr>:
   0:	fc 01       	movw	r30, r24
   2:	81 91       	ld	r24, Z+
   4:	86 17       	cp	r24, r22
   6:	01 f0       	breq	.+0      	; 0x8 <strchr+0x8>
   8:	88 23       	and	r24, r24
   a:	01 f4       	brne	.+0      	; 0xc <strchr+0xc>
   c:	99 27       	eor	r25, r25
   e:	08 95       	ret
  10:	31 97       	sbiw	r30, 0x01	; 1
  12:	cf 01       	movw	r24, r30
  14:	08 95       	ret

strchrnul.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strchrnul>:
   0:	fc 01       	movw	r30, r24
   2:	01 90       	ld	r0, Z+
   4:	06 16       	cp	r0, r22
   6:	01 10       	cpse	r0, r1
   8:	01 f4       	brne	.+0      	; 0xa <strchrnul+0xa>
   a:	31 97       	sbiw	r30, 0x01	; 1
   c:	cf 01       	movw	r24, r30
   e:	08 95       	ret

strcmp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcmp>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	8d 91       	ld	r24, X+
   6:	01 90       	ld	r0, Z+
   8:	80 19       	sub	r24, r0
   a:	01 10       	cpse	r0, r1
   c:	01 f0       	breq	.+0      	; 0xe <strcmp+0xe>
   e:	99 0b       	sbc	r25, r25
  10:	08 95       	ret

strcpy.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcpy>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	01 90       	ld	r0, Z+
   6:	0d 92       	st	X+, r0
   8:	00 20       	and	r0, r0
   a:	01 f4       	brne	.+0      	; 0xc <strcpy+0xc>
   c:	08 95       	ret

strcspn.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strcspn>:
   0:	dc 01       	movw	r26, r24
   2:	5d 91       	ld	r21, X+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strcspn+0x8>
   8:	fb 01       	movw	r30, r22
   a:	01 90       	ld	r0, Z+
   c:	05 16       	cp	r0, r21
   e:	01 10       	cpse	r0, r1
  10:	01 f4       	brne	.+0      	; 0x12 <strcspn+0x12>
  12:	01 f4       	brne	.+0      	; 0x14 <strcspn+0x14>
  14:	80 95       	com	r24
  16:	90 95       	com	r25
  18:	8a 0f       	add	r24, r26
  1a:	9b 1f       	adc	r25, r27
  1c:	08 95       	ret

strlcat.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strlcat>:
   0:	dc 01       	movw	r26, r24
   2:	fb 01       	movw	r30, r22
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strlcat+0xa>
   a:	0d 90       	ld	r0, X+
   c:	00 20       	and	r0, r0
   e:	01 f4       	brne	.+0      	; 0x10 <strlcat+0x10>
  10:	11 97       	sbiw	r26, 0x01	; 1
  12:	00 c0       	rjmp	.+0      	; 0x14 <strlcat+0x14>
  14:	01 90       	ld	r0, Z+
  16:	0d 92       	st	X+, r0
  18:	00 20       	and	r0, r0
  1a:	01 f0       	breq	.+0      	; 0x1c <strlcat+0x1c>
  1c:	41 50       	subi	r20, 0x01	; 1
  1e:	50 40       	sbci	r21, 0x00	; 0
  20:	00 f4       	brcc	.+0      	; 0x22 <strlcat+0x22>
  22:	1c 92       	st	X, r1
  24:	bf 01       	movw	r22, r30
  26:	01 90       	ld	r0, Z+
  28:	00 20       	and	r0, r0
  2a:	01 f4       	brne	.+0      	; 0x2c <strlcat+0x2c>
  2c:	e6 1b       	sub	r30, r22
  2e:	f7 0b       	sbc	r31, r23
  30:	ae 0f       	add	r26, r30
  32:	bf 1f       	adc	r27, r31
  34:	08 94       	sec
  36:	a8 0b       	sbc	r26, r24
  38:	b9 0b       	sbc	r27, r25
  3a:	cd 01       	movw	r24, r26
  3c:	08 95       	ret

strlcpy.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strlcpy>:
   0:	dc 01       	movw	r26, r24
   2:	fb 01       	movw	r30, r22
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strlcpy+0xa>
   a:	01 f0       	breq	.+0      	; 0xc <strlcpy+0xc>
   c:	01 90       	ld	r0, Z+
   e:	0d 92       	st	X+, r0
  10:	00 20       	and	r0, r0
  12:	01 f4       	brne	.+0      	; 0x14 <strlcpy+0x14>
  14:	e6 1b       	sub	r30, r22
  16:	f7 0b       	sbc	r31, r23
  18:	31 97       	sbiw	r30, 0x01	; 1
  1a:	cf 01       	movw	r24, r30
  1c:	08 95       	ret
  1e:	1c 92       	st	X, r1
  20:	01 90       	ld	r0, Z+
  22:	00 20       	and	r0, r0
  24:	01 f4       	brne	.+0      	; 0x26 <strlcpy+0x26>
  26:	00 c0       	rjmp	.+0      	; 0x28 <strlcpy+0x28>

strlen.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strlen>:
   0:	fc 01       	movw	r30, r24
   2:	01 90       	ld	r0, Z+
   4:	00 20       	and	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <strlen+0x8>
   8:	80 95       	com	r24
   a:	90 95       	com	r25
   c:	8e 0f       	add	r24, r30
   e:	9f 1f       	adc	r25, r31
  10:	08 95       	ret

strlwr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strlwr>:
   0:	dc 01       	movw	r26, r24
   2:	6c 91       	ld	r22, X
   4:	61 54       	subi	r22, 0x41	; 65
   6:	6a 31       	cpi	r22, 0x1A	; 26
   8:	00 f0       	brcs	.+0      	; 0xa <strlwr+0xa>
   a:	60 52       	subi	r22, 0x20	; 32
   c:	6f 59       	subi	r22, 0x9F	; 159
   e:	6d 93       	st	X+, r22
  10:	01 f4       	brne	.+0      	; 0x12 <strlwr+0x12>
  12:	08 95       	ret

strncasecmp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncasecmp>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strncasecmp+0xa>
   a:	8d 91       	ld	r24, X+
   c:	81 34       	cpi	r24, 0x41	; 65
   e:	04 f0       	brlt	.+0      	; 0x10 <strncasecmp+0x10>
  10:	8b 35       	cpi	r24, 0x5B	; 91
  12:	04 f4       	brge	.+0      	; 0x14 <strncasecmp+0x14>
  14:	80 5e       	subi	r24, 0xE0	; 224
  16:	61 91       	ld	r22, Z+
  18:	61 34       	cpi	r22, 0x41	; 65
  1a:	04 f0       	brlt	.+0      	; 0x1c <strncasecmp+0x1c>
  1c:	6b 35       	cpi	r22, 0x5B	; 91
  1e:	04 f4       	brge	.+0      	; 0x20 <strncasecmp+0x20>
  20:	60 5e       	subi	r22, 0xE0	; 224
  22:	86 1b       	sub	r24, r22
  24:	61 11       	cpse	r22, r1
  26:	01 f0       	breq	.+0      	; 0x28 <strncasecmp+0x28>
  28:	99 0b       	sbc	r25, r25
  2a:	08 95       	ret
  2c:	88 1b       	sub	r24, r24
  2e:	00 c0       	rjmp	.+0      	; 0x30 <strncasecmp+0x30>

strncat.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncat>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	0d 90       	ld	r0, X+
   6:	00 20       	and	r0, r0
   8:	01 f4       	brne	.+0      	; 0xa <strncat+0xa>
   a:	11 97       	sbiw	r26, 0x01	; 1
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f0       	brcs	.+0      	; 0x12 <strncat+0x12>
  12:	01 90       	ld	r0, Z+
  14:	00 20       	and	r0, r0
  16:	0d 92       	st	X+, r0
  18:	01 f4       	brne	.+0      	; 0x1a <strncat+0x1a>
  1a:	08 95       	ret
  1c:	1c 92       	st	X, r1
  1e:	08 95       	ret

strncmp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncmp>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strncmp+0xa>
   a:	8d 91       	ld	r24, X+
   c:	01 90       	ld	r0, Z+
   e:	80 19       	sub	r24, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strncmp+0x12>
  12:	00 20       	and	r0, r0
  14:	01 f4       	brne	.+0      	; 0x16 <strncmp+0x16>
  16:	88 1b       	sub	r24, r24
  18:	99 0b       	sbc	r25, r25
  1a:	08 95       	ret

strncpy.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strncpy>:
   0:	fb 01       	movw	r30, r22
   2:	dc 01       	movw	r26, r24
   4:	41 50       	subi	r20, 0x01	; 1
   6:	50 40       	sbci	r21, 0x00	; 0
   8:	00 f0       	brcs	.+0      	; 0xa <strncpy+0xa>
   a:	01 90       	ld	r0, Z+
   c:	0d 92       	st	X+, r0
   e:	00 20       	and	r0, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strncpy+0x12>
  12:	00 c0       	rjmp	.+0      	; 0x14 <strncpy+0x14>
  14:	1d 92       	st	X+, r1
  16:	41 50       	subi	r20, 0x01	; 1
  18:	50 40       	sbci	r21, 0x00	; 0
  1a:	00 f4       	brcc	.+0      	; 0x1c <strncpy+0x1c>
  1c:	08 95       	ret

strnlen.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strnlen>:
   0:	fc 01       	movw	r30, r24
   2:	61 50       	subi	r22, 0x01	; 1
   4:	70 40       	sbci	r23, 0x00	; 0
   6:	01 90       	ld	r0, Z+
   8:	01 10       	cpse	r0, r1
   a:	00 f4       	brcc	.+0      	; 0xc <strnlen+0xc>
   c:	80 95       	com	r24
   e:	90 95       	com	r25
  10:	8e 0f       	add	r24, r30
  12:	9f 1f       	adc	r25, r31
  14:	08 95       	ret

strpbrk.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strpbrk>:
   0:	dc 01       	movw	r26, r24
   2:	99 27       	eor	r25, r25
   4:	8d 91       	ld	r24, X+
   6:	88 23       	and	r24, r24
   8:	01 f0       	breq	.+0      	; 0xa <strpbrk+0xa>
   a:	fb 01       	movw	r30, r22
   c:	01 90       	ld	r0, Z+
   e:	08 16       	cp	r0, r24
  10:	01 10       	cpse	r0, r1
  12:	01 f4       	brne	.+0      	; 0x14 <strpbrk+0x14>
  14:	01 f4       	brne	.+0      	; 0x16 <strpbrk+0x16>
  16:	11 97       	sbiw	r26, 0x01	; 1
  18:	cd 01       	movw	r24, r26
  1a:	08 95       	ret

strrchr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strrchr>:
   0:	fc 01       	movw	r30, r24
   2:	81 e0       	ldi	r24, 0x01	; 1
   4:	90 e0       	ldi	r25, 0x00	; 0
   6:	01 90       	ld	r0, Z+
   8:	06 16       	cp	r0, r22
   a:	01 f4       	brne	.+0      	; 0xc <strrchr+0xc>
   c:	cf 01       	movw	r24, r30
   e:	00 20       	and	r0, r0
  10:	01 f4       	brne	.+0      	; 0x12 <strrchr+0x12>
  12:	01 97       	sbiw	r24, 0x01	; 1
  14:	08 95       	ret

strrev.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strrev>:
   0:	dc 01       	movw	r26, r24
   2:	fc 01       	movw	r30, r24
   4:	67 2f       	mov	r22, r23
   6:	71 91       	ld	r23, Z+
   8:	77 23       	and	r23, r23
   a:	01 f4       	brne	.+0      	; 0xc <strrev+0xc>
   c:	32 97       	sbiw	r30, 0x02	; 2
   e:	00 c0       	rjmp	.+0      	; 0x10 <strrev+0x10>
  10:	7c 91       	ld	r23, X
  12:	6d 93       	st	X+, r22
  14:	70 83       	st	Z, r23
  16:	62 91       	ld	r22, -Z
  18:	ae 17       	cp	r26, r30
  1a:	bf 07       	cpc	r27, r31
  1c:	00 f0       	brcs	.+0      	; 0x1e <strrev+0x1e>
  1e:	08 95       	ret

strsep.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strsep>:
   0:	fc 01       	movw	r30, r24
   2:	a0 81       	ld	r26, Z
   4:	b1 81       	ldd	r27, Z+1	; 0x01
   6:	ad 01       	movw	r20, r26
   8:	10 96       	adiw	r26, 0x00	; 0
   a:	01 f0       	breq	.+0      	; 0xc <strsep+0xc>
   c:	3d 91       	ld	r19, X+
   e:	fb 01       	movw	r30, r22
  10:	01 90       	ld	r0, Z+
  12:	03 16       	cp	r0, r19
  14:	01 10       	cpse	r0, r1
  16:	01 f4       	brne	.+0      	; 0x18 <strsep+0x18>
  18:	01 f4       	brne	.+0      	; 0x1a <strsep+0x1a>
  1a:	00 20       	and	r0, r0
  1c:	01 f4       	brne	.+0      	; 0x1e <strsep+0x1e>
  1e:	d0 01       	movw	r26, r0
  20:	00 c0       	rjmp	.+0      	; 0x22 <strsep+0x22>
  22:	1e 92       	st	-X, r1
  24:	11 96       	adiw	r26, 0x01	; 1
  26:	fc 01       	movw	r30, r24
  28:	a0 83       	st	Z, r26
  2a:	b1 83       	std	Z+1, r27	; 0x01
  2c:	ca 01       	movw	r24, r20
  2e:	08 95       	ret

strspn.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strspn>:
   0:	dc 01       	movw	r26, r24
   2:	5d 91       	ld	r21, X+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strspn+0x8>
   8:	fb 01       	movw	r30, r22
   a:	01 90       	ld	r0, Z+
   c:	05 16       	cp	r0, r21
   e:	01 10       	cpse	r0, r1
  10:	01 f4       	brne	.+0      	; 0x12 <strspn+0x12>
  12:	01 f0       	breq	.+0      	; 0x14 <strspn+0x14>
  14:	80 95       	com	r24
  16:	90 95       	com	r25
  18:	8a 0f       	add	r24, r26
  1a:	9b 1f       	adc	r25, r27
  1c:	08 95       	ret

strstr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strstr>:
   0:	fb 01       	movw	r30, r22
   2:	51 91       	ld	r21, Z+
   4:	55 23       	and	r21, r21
   6:	01 f0       	breq	.+0      	; 0x8 <strstr+0x8>
   8:	bf 01       	movw	r22, r30
   a:	dc 01       	movw	r26, r24
   c:	4d 91       	ld	r20, X+
   e:	45 17       	cp	r20, r21
  10:	41 11       	cpse	r20, r1
  12:	01 f4       	brne	.+0      	; 0x14 <strstr+0x14>
  14:	01 f4       	brne	.+0      	; 0x16 <strstr+0x16>
  16:	cd 01       	movw	r24, r26
  18:	01 90       	ld	r0, Z+
  1a:	00 20       	and	r0, r0
  1c:	01 f0       	breq	.+0      	; 0x1e <strstr+0x1e>
  1e:	4d 91       	ld	r20, X+
  20:	40 15       	cp	r20, r0
  22:	41 11       	cpse	r20, r1
  24:	01 f0       	breq	.+0      	; 0x26 <strstr+0x26>
  26:	fb 01       	movw	r30, r22
  28:	41 11       	cpse	r20, r1
  2a:	00 c0       	rjmp	.+0      	; 0x2c <strstr+0x2c>
  2c:	81 e0       	ldi	r24, 0x01	; 1
  2e:	90 e0       	ldi	r25, 0x00	; 0
  30:	01 97       	sbiw	r24, 0x01	; 1
  32:	08 95       	ret

strtok_r.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strtok_r>:
   0:	fa 01       	movw	r30, r20
   2:	a1 91       	ld	r26, Z+
   4:	b0 81       	ld	r27, Z
   6:	00 97       	sbiw	r24, 0x00	; 0
   8:	01 f4       	brne	.+0      	; 0xa <strtok_r+0xa>
   a:	10 97       	sbiw	r26, 0x00	; 0
   c:	01 f0       	breq	.+0      	; 0xe <strtok_r+0xe>
   e:	cd 01       	movw	r24, r26
  10:	dc 01       	movw	r26, r24
  12:	cd 01       	movw	r24, r26
  14:	0d 90       	ld	r0, X+
  16:	00 20       	and	r0, r0
  18:	01 f4       	brne	.+0      	; 0x1a <strtok_r+0x1a>
  1a:	c0 01       	movw	r24, r0
  1c:	00 c0       	rjmp	.+0      	; 0x1e <strtok_r+0x1e>
  1e:	fb 01       	movw	r30, r22
  20:	21 91       	ld	r18, Z+
  22:	22 23       	and	r18, r18
  24:	01 f0       	breq	.+0      	; 0x26 <strtok_r+0x26>
  26:	20 15       	cp	r18, r0
  28:	01 f4       	brne	.+0      	; 0x2a <strtok_r+0x2a>
  2a:	00 c0       	rjmp	.+0      	; 0x2c <strtok_r+0x2c>
  2c:	fb 01       	movw	r30, r22
  2e:	21 91       	ld	r18, Z+
  30:	20 15       	cp	r18, r0
  32:	01 f4       	brne	.+0      	; 0x34 <strtok_r+0x34>
  34:	1e 92       	st	-X, r1
  36:	11 96       	adiw	r26, 0x01	; 1
  38:	00 c0       	rjmp	.+0      	; 0x3a <strtok_r+0x3a>
  3a:	22 23       	and	r18, r18
  3c:	01 f4       	brne	.+0      	; 0x3e <strtok_r+0x3e>
  3e:	0d 90       	ld	r0, X+
  40:	00 20       	and	r0, r0
  42:	01 f4       	brne	.+0      	; 0x44 <strtok_r+0x44>
  44:	d0 01       	movw	r26, r0
  46:	fa 01       	movw	r30, r20
  48:	a1 93       	st	Z+, r26
  4a:	b0 83       	st	Z, r27
  4c:	08 95       	ret

strupr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <strupr>:
   0:	dc 01       	movw	r26, r24
   2:	6c 91       	ld	r22, X
   4:	61 56       	subi	r22, 0x61	; 97
   6:	6a 31       	cpi	r22, 0x1A	; 26
   8:	00 f0       	brcs	.+0      	; 0xa <strupr+0xa>
   a:	60 5e       	subi	r22, 0xE0	; 224
   c:	6f 5b       	subi	r22, 0xBF	; 191
   e:	6d 93       	st	X+, r22
  10:	01 f4       	brne	.+0      	; 0x12 <strupr+0x12>
  12:	08 95       	ret

itoa.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <itoa>:
   0:	45 32       	cpi	r20, 0x25	; 37
   2:	51 05       	cpc	r21, r1
   4:	00 f4       	brcc	.+0      	; 0x6 <itoa+0x6>
   6:	42 30       	cpi	r20, 0x02	; 2
   8:	00 f0       	brcs	.+0      	; 0xa <itoa+0xa>
   a:	0c 94 00 00 	jmp	0	; 0x0 <itoa>
   e:	fb 01       	movw	r30, r22
  10:	10 82       	st	Z, r1
  12:	cb 01       	movw	r24, r22
  14:	08 95       	ret

itoa_ncheck.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__itoa_ncheck>:
   0:	bb 27       	eor	r27, r27
   2:	4a 30       	cpi	r20, 0x0A	; 10
   4:	01 f4       	brne	.+0      	; 0x6 <__itoa_ncheck+0x6>
   6:	99 23       	and	r25, r25
   8:	02 f4       	brpl	.+0      	; 0xa <__itoa_ncheck+0xa>
   a:	bd e2       	ldi	r27, 0x2D	; 45
   c:	90 95       	com	r25
   e:	81 95       	neg	r24
  10:	9f 4f       	sbci	r25, 0xFF	; 255
  12:	0c 94 00 00 	jmp	0	; 0x0 <__itoa_ncheck>

ltoa.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ltoa>:
   0:	25 32       	cpi	r18, 0x25	; 37
   2:	31 05       	cpc	r19, r1
   4:	00 f4       	brcc	.+0      	; 0x6 <ltoa+0x6>
   6:	22 30       	cpi	r18, 0x02	; 2
   8:	00 f0       	brcs	.+0      	; 0xa <ltoa+0xa>
   a:	0c 94 00 00 	jmp	0	; 0x0 <ltoa>
   e:	fa 01       	movw	r30, r20
  10:	10 82       	st	Z, r1
  12:	ca 01       	movw	r24, r20
  14:	08 95       	ret

ltoa_ncheck.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__ltoa_ncheck>:
   0:	bb 27       	eor	r27, r27
   2:	2a 30       	cpi	r18, 0x0A	; 10
   4:	01 f4       	brne	.+0      	; 0x6 <__ltoa_ncheck+0x6>
   6:	99 23       	and	r25, r25
   8:	02 f4       	brpl	.+0      	; 0xa <__ltoa_ncheck+0xa>
   a:	bd e2       	ldi	r27, 0x2D	; 45
   c:	90 95       	com	r25
   e:	80 95       	com	r24
  10:	70 95       	com	r23
  12:	61 95       	neg	r22
  14:	7f 4f       	sbci	r23, 0xFF	; 255
  16:	8f 4f       	sbci	r24, 0xFF	; 255
  18:	9f 4f       	sbci	r25, 0xFF	; 255
  1a:	0c 94 00 00 	jmp	0	; 0x0 <__ltoa_ncheck>

mulsi10.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__mulsi_const_10>:
   0:	59 2f       	mov	r21, r25
   2:	48 2f       	mov	r20, r24
   4:	37 2f       	mov	r19, r23
   6:	26 2f       	mov	r18, r22
   8:	66 0f       	add	r22, r22
   a:	77 1f       	adc	r23, r23
   c:	88 1f       	adc	r24, r24
   e:	99 1f       	adc	r25, r25
  10:	66 0f       	add	r22, r22
  12:	77 1f       	adc	r23, r23
  14:	88 1f       	adc	r24, r24
  16:	99 1f       	adc	r25, r25
  18:	62 0f       	add	r22, r18
  1a:	73 1f       	adc	r23, r19
  1c:	84 1f       	adc	r24, r20
  1e:	95 1f       	adc	r25, r21
  20:	66 0f       	add	r22, r22
  22:	77 1f       	adc	r23, r23
  24:	88 1f       	adc	r24, r24
  26:	99 1f       	adc	r25, r25
  28:	08 95       	ret

mul10.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__mulhi_const_10>:
   0:	7a e0       	ldi	r23, 0x0A	; 10
   2:	97 9f       	mul	r25, r23
   4:	90 2d       	mov	r25, r0
   6:	87 9f       	mul	r24, r23
   8:	80 2d       	mov	r24, r0
   a:	91 0d       	add	r25, r1
   c:	11 24       	eor	r1, r1
   e:	08 95       	ret

ultoa.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ultoa>:
   0:	25 32       	cpi	r18, 0x25	; 37
   2:	31 05       	cpc	r19, r1
   4:	00 f4       	brcc	.+0      	; 0x6 <ultoa+0x6>
   6:	22 30       	cpi	r18, 0x02	; 2
   8:	00 f0       	brcs	.+0      	; 0xa <ultoa+0xa>
   a:	0c 94 00 00 	jmp	0	; 0x0 <ultoa>
   e:	fa 01       	movw	r30, r20
  10:	10 82       	st	Z, r1
  12:	ca 01       	movw	r24, r20
  14:	08 95       	ret

ultoa_ncheck.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__ultoa_ncheck>:
   0:	bb 27       	eor	r27, r27

00000002 <__ultoa_common>:
   2:	fa 01       	movw	r30, r20
   4:	a6 2f       	mov	r26, r22
   6:	62 17       	cp	r22, r18
   8:	71 05       	cpc	r23, r1
   a:	81 05       	cpc	r24, r1
   c:	91 05       	cpc	r25, r1
   e:	33 0b       	sbc	r19, r19
  10:	30 fb       	bst	r19, 0
  12:	06 f0       	brts	.+0      	; 0x14 <__ultoa_common+0x12>
  14:	aa 27       	eor	r26, r26
  16:	66 0f       	add	r22, r22
  18:	77 1f       	adc	r23, r23
  1a:	88 1f       	adc	r24, r24
  1c:	99 1f       	adc	r25, r25
  1e:	aa 1f       	adc	r26, r26
  20:	a2 17       	cp	r26, r18
  22:	00 f0       	brcs	.+0      	; 0x24 <__ultoa_common+0x22>
  24:	a2 1b       	sub	r26, r18
  26:	63 95       	inc	r22
  28:	38 50       	subi	r19, 0x08	; 8
  2a:	01 f4       	brne	.+0      	; 0x2c <__ultoa_common+0x2a>
  2c:	a0 5d       	subi	r26, 0xD0	; 208
  2e:	aa 33       	cpi	r26, 0x3A	; 58
  30:	00 f0       	brcs	.+0      	; 0x32 <__ultoa_common+0x30>
  32:	a9 5d       	subi	r26, 0xD9	; 217
  34:	a1 93       	st	Z+, r26
  36:	06 f4       	brtc	.+0      	; 0x38 <__ultoa_common+0x36>
  38:	b1 11       	cpse	r27, r1
  3a:	b1 93       	st	Z+, r27
  3c:	10 82       	st	Z, r1
  3e:	ca 01       	movw	r24, r20
  40:	0c 94 00 00 	jmp	0	; 0x0 <__ultoa_ncheck>

utoa.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <utoa>:
   0:	45 32       	cpi	r20, 0x25	; 37
   2:	51 05       	cpc	r21, r1
   4:	00 f4       	brcc	.+0      	; 0x6 <utoa+0x6>
   6:	42 30       	cpi	r20, 0x02	; 2
   8:	00 f0       	brcs	.+0      	; 0xa <utoa+0xa>
   a:	0c 94 00 00 	jmp	0	; 0x0 <utoa>
   e:	fb 01       	movw	r30, r22
  10:	10 82       	st	Z, r1
  12:	cb 01       	movw	r24, r22
  14:	08 95       	ret

utoa_ncheck.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__utoa_ncheck>:
   0:	bb 27       	eor	r27, r27

00000002 <__utoa_common>:
   2:	fb 01       	movw	r30, r22
   4:	55 27       	eor	r21, r21
   6:	aa 27       	eor	r26, r26
   8:	88 0f       	add	r24, r24
   a:	99 1f       	adc	r25, r25
   c:	aa 1f       	adc	r26, r26
   e:	a4 17       	cp	r26, r20
  10:	00 f0       	brcs	.+0      	; 0x12 <__utoa_common+0x10>
  12:	a4 1b       	sub	r26, r20
  14:	83 95       	inc	r24
  16:	50 51       	subi	r21, 0x10	; 16
  18:	01 f4       	brne	.+0      	; 0x1a <__utoa_common+0x18>
  1a:	a0 5d       	subi	r26, 0xD0	; 208
  1c:	aa 33       	cpi	r26, 0x3A	; 58
  1e:	00 f0       	brcs	.+0      	; 0x20 <__utoa_common+0x1e>
  20:	a9 5d       	subi	r26, 0xD9	; 217
  22:	a1 93       	st	Z+, r26
  24:	00 97       	sbiw	r24, 0x00	; 0
  26:	01 f4       	brne	.+0      	; 0x28 <__utoa_common+0x26>
  28:	b1 11       	cpse	r27, r1
  2a:	b1 93       	st	Z+, r27
  2c:	11 92       	st	Z+, r1
  2e:	cb 01       	movw	r24, r22
  30:	0c 94 00 00 	jmp	0	; 0x0 <__utoa_ncheck>

clearerr.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <clearerr>:
   0:	fc 01       	movw	r30, r24
   2:	23 81       	ldd	r18, Z+3	; 0x03
   4:	2f 7c       	andi	r18, 0xCF	; 207
   6:	23 83       	std	Z+3, r18	; 0x03
   8:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fclose.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fclose>:
   0:	fc 01       	movw	r30, r24
   2:	23 81       	ldd	r18, Z+3	; 0x03
   4:	27 ff       	sbrs	r18, 7
   6:	00 c0       	rjmp	.+0      	; 0x8 <fclose+0x8>
   8:	e0 e0       	ldi	r30, 0x00	; 0
   a:	f0 e0       	ldi	r31, 0x00	; 0
   c:	20 81       	ld	r18, Z
   e:	31 81       	ldd	r19, Z+1	; 0x01
  10:	28 17       	cp	r18, r24
  12:	39 07       	cpc	r19, r25
  14:	01 f4       	brne	.+0      	; 0x16 <fclose+0x16>
  16:	11 82       	std	Z+1, r1	; 0x01
  18:	10 82       	st	Z, r1
  1a:	32 96       	adiw	r30, 0x02	; 2
  1c:	20 e0       	ldi	r18, 0x00	; 0
  1e:	e0 30       	cpi	r30, 0x00	; 0
  20:	f2 07       	cpc	r31, r18
  22:	01 f4       	brne	.+0      	; 0x24 <fclose+0x24>
  24:	0e 94 00 00 	call	0	; 0x0 <fclose>
  28:	80 e0       	ldi	r24, 0x00	; 0
  2a:	90 e0       	ldi	r25, 0x00	; 0
  2c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fdevopen.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fdevopen>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	8b 01       	movw	r16, r22
   c:	00 97       	sbiw	r24, 0x00	; 0
   e:	01 f4       	brne	.+0      	; 0x10 <fdevopen+0x10>
  10:	61 15       	cp	r22, r1
  12:	71 05       	cpc	r23, r1
  14:	01 f4       	brne	.+0      	; 0x16 <fdevopen+0x16>
  16:	80 e0       	ldi	r24, 0x00	; 0
  18:	90 e0       	ldi	r25, 0x00	; 0
  1a:	00 c0       	rjmp	.+0      	; 0x1c <fdevopen+0x1c>
  1c:	6e e0       	ldi	r22, 0x0E	; 14
  1e:	70 e0       	ldi	r23, 0x00	; 0
  20:	81 e0       	ldi	r24, 0x01	; 1
  22:	90 e0       	ldi	r25, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <fdevopen>
  28:	fc 01       	movw	r30, r24
  2a:	00 97       	sbiw	r24, 0x00	; 0
  2c:	01 f0       	breq	.+0      	; 0x2e <fdevopen+0x2e>
  2e:	80 e8       	ldi	r24, 0x80	; 128
  30:	83 83       	std	Z+3, r24	; 0x03
  32:	01 15       	cp	r16, r1
  34:	11 05       	cpc	r17, r1
  36:	01 f0       	breq	.+0      	; 0x38 <fdevopen+0x38>
  38:	13 87       	std	Z+11, r17	; 0x0b
  3a:	02 87       	std	Z+10, r16	; 0x0a
  3c:	81 e8       	ldi	r24, 0x81	; 129
  3e:	83 83       	std	Z+3, r24	; 0x03
  40:	80 91 00 00 	lds	r24, 0x0000
  44:	90 91 00 00 	lds	r25, 0x0000
  48:	89 2b       	or	r24, r25
  4a:	01 f4       	brne	.+0      	; 0x4c <fdevopen+0x4c>
  4c:	f0 93 00 00 	sts	0x0000, r31
  50:	e0 93 00 00 	sts	0x0000, r30
  54:	20 97       	sbiw	r28, 0x00	; 0
  56:	01 f0       	breq	.+0      	; 0x58 <fdevopen+0x58>
  58:	d1 87       	std	Z+9, r29	; 0x09
  5a:	c0 87       	std	Z+8, r28	; 0x08
  5c:	83 81       	ldd	r24, Z+3	; 0x03
  5e:	82 60       	ori	r24, 0x02	; 2
  60:	83 83       	std	Z+3, r24	; 0x03
  62:	80 91 00 00 	lds	r24, 0x0000
  66:	90 91 00 00 	lds	r25, 0x0000
  6a:	89 2b       	or	r24, r25
  6c:	01 f4       	brne	.+0      	; 0x6e <fdevopen+0x6e>
  6e:	f0 93 00 00 	sts	0x0000, r31
  72:	e0 93 00 00 	sts	0x0000, r30
  76:	80 91 00 00 	lds	r24, 0x0000
  7a:	90 91 00 00 	lds	r25, 0x0000
  7e:	89 2b       	or	r24, r25
  80:	01 f4       	brne	.+0      	; 0x82 <fdevopen+0x82>
  82:	f0 93 00 00 	sts	0x0000, r31
  86:	e0 93 00 00 	sts	0x0000, r30
  8a:	cf 01       	movw	r24, r30
  8c:	df 91       	pop	r29
  8e:	cf 91       	pop	r28
  90:	1f 91       	pop	r17
  92:	0f 91       	pop	r16
  94:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

feof.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <feof>:
   0:	fc 01       	movw	r30, r24
   2:	83 81       	ldd	r24, Z+3	; 0x03
   4:	80 72       	andi	r24, 0x20	; 32
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

ferror.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ferror>:
   0:	fc 01       	movw	r30, r24
   2:	83 81       	ldd	r24, Z+3	; 0x03
   4:	80 71       	andi	r24, 0x10	; 16
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fgetc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fgetc>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	2b 81       	ldd	r18, Y+3	; 0x03
   8:	20 ff       	sbrs	r18, 0
   a:	00 c0       	rjmp	.+0      	; 0xc <fgetc+0xc>
   c:	26 ff       	sbrs	r18, 6
   e:	00 c0       	rjmp	.+0      	; 0x10 <fgetc+0x10>
  10:	2f 7b       	andi	r18, 0xBF	; 191
  12:	2b 83       	std	Y+3, r18	; 0x03
  14:	8e 81       	ldd	r24, Y+6	; 0x06
  16:	9f 81       	ldd	r25, Y+7	; 0x07
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	9f 83       	std	Y+7, r25	; 0x07
  1c:	8e 83       	std	Y+6, r24	; 0x06
  1e:	8a 81       	ldd	r24, Y+2	; 0x02
  20:	90 e0       	ldi	r25, 0x00	; 0
  22:	00 c0       	rjmp	.+0      	; 0x24 <fgetc+0x24>
  24:	22 ff       	sbrs	r18, 2
  26:	00 c0       	rjmp	.+0      	; 0x28 <fgetc+0x28>
  28:	e8 81       	ld	r30, Y
  2a:	f9 81       	ldd	r31, Y+1	; 0x01
  2c:	80 81       	ld	r24, Z
  2e:	99 27       	eor	r25, r25
  30:	87 fd       	sbrc	r24, 7
  32:	90 95       	com	r25
  34:	00 97       	sbiw	r24, 0x00	; 0
  36:	01 f4       	brne	.+0      	; 0x38 <fgetc+0x38>
  38:	20 62       	ori	r18, 0x20	; 32
  3a:	2b 83       	std	Y+3, r18	; 0x03
  3c:	00 c0       	rjmp	.+0      	; 0x3e <fgetc+0x3e>
  3e:	31 96       	adiw	r30, 0x01	; 1
  40:	f9 83       	std	Y+1, r31	; 0x01
  42:	e8 83       	st	Y, r30
  44:	00 c0       	rjmp	.+0      	; 0x46 <fgetc+0x46>
  46:	ea 85       	ldd	r30, Y+10	; 0x0a
  48:	fb 85       	ldd	r31, Y+11	; 0x0b
  4a:	09 95       	icall
  4c:	97 ff       	sbrs	r25, 7
  4e:	00 c0       	rjmp	.+0      	; 0x50 <fgetc+0x50>
  50:	2b 81       	ldd	r18, Y+3	; 0x03
  52:	01 96       	adiw	r24, 0x01	; 1
  54:	01 f4       	brne	.+0      	; 0x56 <fgetc+0x56>
  56:	80 e1       	ldi	r24, 0x10	; 16
  58:	00 c0       	rjmp	.+0      	; 0x5a <fgetc+0x5a>
  5a:	80 e2       	ldi	r24, 0x20	; 32
  5c:	82 2b       	or	r24, r18
  5e:	8b 83       	std	Y+3, r24	; 0x03
  60:	00 c0       	rjmp	.+0      	; 0x62 <fgetc+0x62>
  62:	2e 81       	ldd	r18, Y+6	; 0x06
  64:	3f 81       	ldd	r19, Y+7	; 0x07
  66:	2f 5f       	subi	r18, 0xFF	; 255
  68:	3f 4f       	sbci	r19, 0xFF	; 255
  6a:	3f 83       	std	Y+7, r19	; 0x07
  6c:	2e 83       	std	Y+6, r18	; 0x06
  6e:	99 27       	eor	r25, r25
  70:	00 c0       	rjmp	.+0      	; 0x72 <fgetc+0x72>
  72:	8f ef       	ldi	r24, 0xFF	; 255
  74:	9f ef       	ldi	r25, 0xFF	; 255
  76:	df 91       	pop	r29
  78:	cf 91       	pop	r28
  7a:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fgets.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fgets>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	6c 01       	movw	r12, r24
  12:	7a 01       	movw	r14, r20
  14:	fa 01       	movw	r30, r20
  16:	83 81       	ldd	r24, Z+3	; 0x03
  18:	80 fd       	sbrc	r24, 0
  1a:	00 c0       	rjmp	.+0      	; 0x1c <fgets+0x1c>
  1c:	80 e0       	ldi	r24, 0x00	; 0
  1e:	90 e0       	ldi	r25, 0x00	; 0
  20:	00 c0       	rjmp	.+0      	; 0x22 <fgets+0x22>
  22:	16 16       	cp	r1, r22
  24:	17 06       	cpc	r1, r23
  26:	04 f4       	brge	.+0      	; 0x28 <fgets+0x28>
  28:	8b 01       	movw	r16, r22
  2a:	cc 2d       	mov	r28, r12
  2c:	dd 2d       	mov	r29, r13
  2e:	01 30       	cpi	r16, 0x01	; 1
  30:	11 05       	cpc	r17, r1
  32:	01 f0       	breq	.+0      	; 0x34 <fgets+0x34>
  34:	c7 01       	movw	r24, r14
  36:	0e 94 00 00 	call	0	; 0x0 <fgets>
  3a:	8f 3f       	cpi	r24, 0xFF	; 255
  3c:	ef ef       	ldi	r30, 0xFF	; 255
  3e:	9e 07       	cpc	r25, r30
  40:	01 f0       	breq	.+0      	; 0x42 <fgets+0x42>
  42:	89 93       	st	Y+, r24
  44:	01 50       	subi	r16, 0x01	; 1
  46:	11 09       	sbc	r17, r1
  48:	0a 97       	sbiw	r24, 0x0a	; 10
  4a:	01 f4       	brne	.+0      	; 0x4c <fgets+0x4c>
  4c:	18 82       	st	Y, r1
  4e:	c6 01       	movw	r24, r12
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
  56:	0f 91       	pop	r16
  58:	ff 90       	pop	r15
  5a:	ef 90       	pop	r14
  5c:	df 90       	pop	r13
  5e:	cf 90       	pop	r12
  60:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fprintf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fprintf>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	ae 01       	movw	r20, r28
   a:	47 5f       	subi	r20, 0xF7	; 247
   c:	5f 4f       	sbci	r21, 0xFF	; 255
   e:	6f 81       	ldd	r22, Y+7	; 0x07
  10:	78 85       	ldd	r23, Y+8	; 0x08
  12:	8d 81       	ldd	r24, Y+5	; 0x05
  14:	9e 81       	ldd	r25, Y+6	; 0x06
  16:	0e 94 00 00 	call	0	; 0x0 <fprintf>
  1a:	df 91       	pop	r29
  1c:	cf 91       	pop	r28
  1e:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fprintf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fprintf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	0f 81       	ldd	r16, Y+7	; 0x07
   e:	18 85       	ldd	r17, Y+8	; 0x08
  10:	f8 01       	movw	r30, r16
  12:	83 81       	ldd	r24, Z+3	; 0x03
  14:	88 60       	ori	r24, 0x08	; 8
  16:	83 83       	std	Z+3, r24	; 0x03
  18:	ae 01       	movw	r20, r28
  1a:	45 5f       	subi	r20, 0xF5	; 245
  1c:	5f 4f       	sbci	r21, 0xFF	; 255
  1e:	69 85       	ldd	r22, Y+9	; 0x09
  20:	7a 85       	ldd	r23, Y+10	; 0x0a
  22:	c8 01       	movw	r24, r16
  24:	0e 94 00 00 	call	0	; 0x0 <fprintf_P>
  28:	f8 01       	movw	r30, r16
  2a:	23 81       	ldd	r18, Z+3	; 0x03
  2c:	27 7f       	andi	r18, 0xF7	; 247
  2e:	23 83       	std	Z+3, r18	; 0x03
  30:	df 91       	pop	r29
  32:	cf 91       	pop	r28
  34:	1f 91       	pop	r17
  36:	0f 91       	pop	r16
  38:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fputc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fputc>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	18 2f       	mov	r17, r24
   a:	09 2f       	mov	r16, r25
   c:	eb 01       	movw	r28, r22
   e:	8b 81       	ldd	r24, Y+3	; 0x03
  10:	81 fd       	sbrc	r24, 1
  12:	00 c0       	rjmp	.+0      	; 0x14 <fputc+0x14>
  14:	8f ef       	ldi	r24, 0xFF	; 255
  16:	9f ef       	ldi	r25, 0xFF	; 255
  18:	00 c0       	rjmp	.+0      	; 0x1a <fputc+0x1a>
  1a:	82 ff       	sbrs	r24, 2
  1c:	00 c0       	rjmp	.+0      	; 0x1e <fputc+0x1e>
  1e:	4e 81       	ldd	r20, Y+6	; 0x06
  20:	5f 81       	ldd	r21, Y+7	; 0x07
  22:	2c 81       	ldd	r18, Y+4	; 0x04
  24:	3d 81       	ldd	r19, Y+5	; 0x05
  26:	42 17       	cp	r20, r18
  28:	53 07       	cpc	r21, r19
  2a:	04 f4       	brge	.+0      	; 0x2c <fputc+0x2c>
  2c:	e8 81       	ld	r30, Y
  2e:	f9 81       	ldd	r31, Y+1	; 0x01
  30:	9f 01       	movw	r18, r30
  32:	2f 5f       	subi	r18, 0xFF	; 255
  34:	3f 4f       	sbci	r19, 0xFF	; 255
  36:	39 83       	std	Y+1, r19	; 0x01
  38:	28 83       	st	Y, r18
  3a:	10 83       	st	Z, r17
  3c:	00 c0       	rjmp	.+0      	; 0x3e <fputc+0x3e>
  3e:	e8 85       	ldd	r30, Y+8	; 0x08
  40:	f9 85       	ldd	r31, Y+9	; 0x09
  42:	81 2f       	mov	r24, r17
  44:	09 95       	icall
  46:	89 2b       	or	r24, r25
  48:	01 f4       	brne	.+0      	; 0x4a <fputc+0x4a>
  4a:	2e 81       	ldd	r18, Y+6	; 0x06
  4c:	3f 81       	ldd	r19, Y+7	; 0x07
  4e:	2f 5f       	subi	r18, 0xFF	; 255
  50:	3f 4f       	sbci	r19, 0xFF	; 255
  52:	3f 83       	std	Y+7, r19	; 0x07
  54:	2e 83       	std	Y+6, r18	; 0x06
  56:	81 2f       	mov	r24, r17
  58:	90 2f       	mov	r25, r16
  5a:	df 91       	pop	r29
  5c:	cf 91       	pop	r28
  5e:	1f 91       	pop	r17
  60:	0f 91       	pop	r16
  62:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fputs.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fputs>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	8b 01       	movw	r16, r22
   e:	db 01       	movw	r26, r22
  10:	13 96       	adiw	r26, 0x03	; 3
  12:	2c 91       	ld	r18, X
  14:	21 ff       	sbrs	r18, 1
  16:	00 c0       	rjmp	.+0      	; 0x18 <fputs+0x18>
  18:	ec 01       	movw	r28, r24
  1a:	e1 2c       	mov	r14, r1
  1c:	f1 2c       	mov	r15, r1
  1e:	89 91       	ld	r24, Y+
  20:	88 23       	and	r24, r24
  22:	01 f0       	breq	.+0      	; 0x24 <fputs+0x24>
  24:	d8 01       	movw	r26, r16
  26:	18 96       	adiw	r26, 0x08	; 8
  28:	ed 91       	ld	r30, X+
  2a:	fc 91       	ld	r31, X
  2c:	19 97       	sbiw	r26, 0x09	; 9
  2e:	b8 01       	movw	r22, r16
  30:	09 95       	icall
  32:	89 2b       	or	r24, r25
  34:	01 f0       	breq	.+0      	; 0x36 <fputs+0x36>
  36:	ee 24       	eor	r14, r14
  38:	ea 94       	dec	r14
  3a:	ff 24       	eor	r15, r15
  3c:	fa 94       	dec	r15
  3e:	00 c0       	rjmp	.+0      	; 0x40 <fputs+0x40>
  40:	c7 01       	movw	r24, r14
  42:	00 c0       	rjmp	.+0      	; 0x44 <fputs+0x44>
  44:	8f ef       	ldi	r24, 0xFF	; 255
  46:	9f ef       	ldi	r25, 0xFF	; 255
  48:	df 91       	pop	r29
  4a:	cf 91       	pop	r28
  4c:	1f 91       	pop	r17
  4e:	0f 91       	pop	r16
  50:	ff 90       	pop	r15
  52:	ef 90       	pop	r14
  54:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fputs_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fputs_P>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	8b 01       	movw	r16, r22
  10:	db 01       	movw	r26, r22
  12:	13 96       	adiw	r26, 0x03	; 3
  14:	8c 91       	ld	r24, X
  16:	81 ff       	sbrs	r24, 1
  18:	00 c0       	rjmp	.+0      	; 0x1a <fputs_P+0x1a>
  1a:	e1 2c       	mov	r14, r1
  1c:	f1 2c       	mov	r15, r1
  1e:	fe 01       	movw	r30, r28
  20:	84 91       	lpm	r24, Z
  22:	88 23       	and	r24, r24
  24:	01 f0       	breq	.+0      	; 0x26 <fputs_P+0x26>
  26:	d8 01       	movw	r26, r16
  28:	18 96       	adiw	r26, 0x08	; 8
  2a:	ed 91       	ld	r30, X+
  2c:	fc 91       	ld	r31, X
  2e:	19 97       	sbiw	r26, 0x09	; 9
  30:	b8 01       	movw	r22, r16
  32:	09 95       	icall
  34:	89 2b       	or	r24, r25
  36:	01 f0       	breq	.+0      	; 0x38 <fputs_P+0x38>
  38:	ee 24       	eor	r14, r14
  3a:	ea 94       	dec	r14
  3c:	ff 24       	eor	r15, r15
  3e:	fa 94       	dec	r15
  40:	21 96       	adiw	r28, 0x01	; 1
  42:	00 c0       	rjmp	.+0      	; 0x44 <fputs_P+0x44>
  44:	c7 01       	movw	r24, r14
  46:	00 c0       	rjmp	.+0      	; 0x48 <fputs_P+0x48>
  48:	8f ef       	ldi	r24, 0xFF	; 255
  4a:	9f ef       	ldi	r25, 0xFF	; 255
  4c:	df 91       	pop	r29
  4e:	cf 91       	pop	r28
  50:	1f 91       	pop	r17
  52:	0f 91       	pop	r16
  54:	ff 90       	pop	r15
  56:	ef 90       	pop	r14
  58:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fread.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fread>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	6b 01       	movw	r12, r22
  1a:	4a 01       	movw	r8, r20
  1c:	79 01       	movw	r14, r18
  1e:	f9 01       	movw	r30, r18
  20:	23 81       	ldd	r18, Z+3	; 0x03
  22:	20 ff       	sbrs	r18, 0
  24:	00 c0       	rjmp	.+0      	; 0x26 <fread+0x26>
  26:	c0 e0       	ldi	r28, 0x00	; 0
  28:	d0 e0       	ldi	r29, 0x00	; 0
  2a:	c8 15       	cp	r28, r8
  2c:	d9 05       	cpc	r29, r9
  2e:	01 f0       	breq	.+0      	; 0x30 <fread+0x30>
  30:	8c 01       	movw	r16, r24
  32:	5c 01       	movw	r10, r24
  34:	ac 0c       	add	r10, r12
  36:	bd 1c       	adc	r11, r13
  38:	c8 01       	movw	r24, r16
  3a:	0a 15       	cp	r16, r10
  3c:	1b 05       	cpc	r17, r11
  3e:	01 f0       	breq	.+0      	; 0x40 <fread+0x40>
  40:	c7 01       	movw	r24, r14
  42:	0e 94 00 00 	call	0	; 0x0 <fread>
  46:	8f 3f       	cpi	r24, 0xFF	; 255
  48:	ff ef       	ldi	r31, 0xFF	; 255
  4a:	9f 07       	cpc	r25, r31
  4c:	01 f0       	breq	.+0      	; 0x4e <fread+0x4e>
  4e:	f8 01       	movw	r30, r16
  50:	81 93       	st	Z+, r24
  52:	8f 01       	movw	r16, r30
  54:	00 c0       	rjmp	.+0      	; 0x56 <fread+0x56>
  56:	21 96       	adiw	r28, 0x01	; 1
  58:	00 c0       	rjmp	.+0      	; 0x5a <fread+0x5a>
  5a:	80 e0       	ldi	r24, 0x00	; 0
  5c:	90 e0       	ldi	r25, 0x00	; 0
  5e:	00 c0       	rjmp	.+0      	; 0x60 <fread+0x60>
  60:	ce 01       	movw	r24, r28
  62:	df 91       	pop	r29
  64:	cf 91       	pop	r28
  66:	1f 91       	pop	r17
  68:	0f 91       	pop	r16
  6a:	ff 90       	pop	r15
  6c:	ef 90       	pop	r14
  6e:	df 90       	pop	r13
  70:	cf 90       	pop	r12
  72:	bf 90       	pop	r11
  74:	af 90       	pop	r10
  76:	9f 90       	pop	r9
  78:	8f 90       	pop	r8
  7a:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fscanf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fscanf>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	ae 01       	movw	r20, r28
   a:	47 5f       	subi	r20, 0xF7	; 247
   c:	5f 4f       	sbci	r21, 0xFF	; 255
   e:	6f 81       	ldd	r22, Y+7	; 0x07
  10:	78 85       	ldd	r23, Y+8	; 0x08
  12:	8d 81       	ldd	r24, Y+5	; 0x05
  14:	9e 81       	ldd	r25, Y+6	; 0x06
  16:	0e 94 00 00 	call	0	; 0x0 <fscanf>
  1a:	df 91       	pop	r29
  1c:	cf 91       	pop	r28
  1e:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fscanf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fscanf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	0f 81       	ldd	r16, Y+7	; 0x07
   e:	18 85       	ldd	r17, Y+8	; 0x08
  10:	f8 01       	movw	r30, r16
  12:	83 81       	ldd	r24, Z+3	; 0x03
  14:	88 60       	ori	r24, 0x08	; 8
  16:	83 83       	std	Z+3, r24	; 0x03
  18:	ae 01       	movw	r20, r28
  1a:	45 5f       	subi	r20, 0xF5	; 245
  1c:	5f 4f       	sbci	r21, 0xFF	; 255
  1e:	69 85       	ldd	r22, Y+9	; 0x09
  20:	7a 85       	ldd	r23, Y+10	; 0x0a
  22:	c8 01       	movw	r24, r16
  24:	0e 94 00 00 	call	0	; 0x0 <fscanf_P>
  28:	f8 01       	movw	r30, r16
  2a:	23 81       	ldd	r18, Z+3	; 0x03
  2c:	27 7f       	andi	r18, 0xF7	; 247
  2e:	23 83       	std	Z+3, r18	; 0x03
  30:	df 91       	pop	r29
  32:	cf 91       	pop	r28
  34:	1f 91       	pop	r17
  36:	0f 91       	pop	r16
  38:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fwrite.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <fwrite>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	6b 01       	movw	r12, r22
  1a:	4a 01       	movw	r8, r20
  1c:	79 01       	movw	r14, r18
  1e:	d9 01       	movw	r26, r18
  20:	13 96       	adiw	r26, 0x03	; 3
  22:	2c 91       	ld	r18, X
  24:	21 ff       	sbrs	r18, 1
  26:	00 c0       	rjmp	.+0      	; 0x28 <fwrite+0x28>
  28:	c0 e0       	ldi	r28, 0x00	; 0
  2a:	d0 e0       	ldi	r29, 0x00	; 0
  2c:	c8 15       	cp	r28, r8
  2e:	d9 05       	cpc	r29, r9
  30:	01 f0       	breq	.+0      	; 0x32 <fwrite+0x32>
  32:	8c 01       	movw	r16, r24
  34:	5c 01       	movw	r10, r24
  36:	ac 0c       	add	r10, r12
  38:	bd 1c       	adc	r11, r13
  3a:	c8 01       	movw	r24, r16
  3c:	0a 15       	cp	r16, r10
  3e:	1b 05       	cpc	r17, r11
  40:	01 f0       	breq	.+0      	; 0x42 <fwrite+0x42>
  42:	0f 5f       	subi	r16, 0xFF	; 255
  44:	1f 4f       	sbci	r17, 0xFF	; 255
  46:	d7 01       	movw	r26, r14
  48:	18 96       	adiw	r26, 0x08	; 8
  4a:	ed 91       	ld	r30, X+
  4c:	fc 91       	ld	r31, X
  4e:	19 97       	sbiw	r26, 0x09	; 9
  50:	b7 01       	movw	r22, r14
  52:	dc 01       	movw	r26, r24
  54:	8c 91       	ld	r24, X
  56:	09 95       	icall
  58:	89 2b       	or	r24, r25
  5a:	01 f0       	breq	.+0      	; 0x5c <fwrite+0x5c>
  5c:	00 c0       	rjmp	.+0      	; 0x5e <fwrite+0x5e>
  5e:	21 96       	adiw	r28, 0x01	; 1
  60:	00 c0       	rjmp	.+0      	; 0x62 <fwrite+0x62>
  62:	80 e0       	ldi	r24, 0x00	; 0
  64:	90 e0       	ldi	r25, 0x00	; 0
  66:	00 c0       	rjmp	.+0      	; 0x68 <fwrite+0x68>
  68:	ce 01       	movw	r24, r28
  6a:	df 91       	pop	r29
  6c:	cf 91       	pop	r28
  6e:	1f 91       	pop	r17
  70:	0f 91       	pop	r16
  72:	ff 90       	pop	r15
  74:	ef 90       	pop	r14
  76:	df 90       	pop	r13
  78:	cf 90       	pop	r12
  7a:	bf 90       	pop	r11
  7c:	af 90       	pop	r10
  7e:	9f 90       	pop	r9
  80:	8f 90       	pop	r8
  82:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

getchar.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <getchar>:
   0:	80 91 00 00 	lds	r24, 0x0000
   4:	90 91 00 00 	lds	r25, 0x0000
   8:	0c 94 00 00 	jmp	0	; 0x0 <getchar>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

gets.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <gets>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	8c 01       	movw	r16, r24
   a:	e0 91 00 00 	lds	r30, 0x0000
   e:	f0 91 00 00 	lds	r31, 0x0000
  12:	83 81       	ldd	r24, Z+3	; 0x03
  14:	80 fd       	sbrc	r24, 0
  16:	00 c0       	rjmp	.+0      	; 0x18 <gets+0x18>
  18:	80 e0       	ldi	r24, 0x00	; 0
  1a:	90 e0       	ldi	r25, 0x00	; 0
  1c:	00 c0       	rjmp	.+0      	; 0x1e <gets+0x1e>
  1e:	c0 2f       	mov	r28, r16
  20:	d1 2f       	mov	r29, r17
  22:	80 91 00 00 	lds	r24, 0x0000
  26:	90 91 00 00 	lds	r25, 0x0000
  2a:	0e 94 00 00 	call	0	; 0x0 <gets>
  2e:	8f 3f       	cpi	r24, 0xFF	; 255
  30:	2f ef       	ldi	r18, 0xFF	; 255
  32:	92 07       	cpc	r25, r18
  34:	01 f0       	breq	.+0      	; 0x36 <gets+0x36>
  36:	89 93       	st	Y+, r24
  38:	0a 97       	sbiw	r24, 0x0a	; 10
  3a:	01 f4       	brne	.+0      	; 0x3c <gets+0x3c>
  3c:	21 97       	sbiw	r28, 0x01	; 1
  3e:	18 82       	st	Y, r1
  40:	c8 01       	movw	r24, r16
  42:	df 91       	pop	r29
  44:	cf 91       	pop	r28
  46:	1f 91       	pop	r17
  48:	0f 91       	pop	r16
  4a:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

iob.o:     формат файла elf32-avr


Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

printf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <printf>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	fe 01       	movw	r30, r28
   a:	35 96       	adiw	r30, 0x05	; 5
   c:	61 91       	ld	r22, Z+
   e:	71 91       	ld	r23, Z+
  10:	af 01       	movw	r20, r30
  12:	80 91 00 00 	lds	r24, 0x0000
  16:	90 91 00 00 	lds	r25, 0x0000
  1a:	0e 94 00 00 	call	0	; 0x0 <printf>
  1e:	df 91       	pop	r29
  20:	cf 91       	pop	r28
  22:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

printf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <printf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	fe 01       	movw	r30, r28
   e:	37 96       	adiw	r30, 0x07	; 7
  10:	61 91       	ld	r22, Z+
  12:	71 91       	ld	r23, Z+
  14:	00 e0       	ldi	r16, 0x00	; 0
  16:	10 e0       	ldi	r17, 0x00	; 0
  18:	d8 01       	movw	r26, r16
  1a:	8d 91       	ld	r24, X+
  1c:	9c 91       	ld	r25, X
  1e:	dc 01       	movw	r26, r24
  20:	13 96       	adiw	r26, 0x03	; 3
  22:	2c 91       	ld	r18, X
  24:	13 97       	sbiw	r26, 0x03	; 3
  26:	28 60       	ori	r18, 0x08	; 8
  28:	13 96       	adiw	r26, 0x03	; 3
  2a:	2c 93       	st	X, r18
  2c:	af 01       	movw	r20, r30
  2e:	0e 94 00 00 	call	0	; 0x0 <printf_P>
  32:	d8 01       	movw	r26, r16
  34:	ed 91       	ld	r30, X+
  36:	fc 91       	ld	r31, X
  38:	23 81       	ldd	r18, Z+3	; 0x03
  3a:	27 7f       	andi	r18, 0xF7	; 247
  3c:	23 83       	std	Z+3, r18	; 0x03
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	1f 91       	pop	r17
  44:	0f 91       	pop	r16
  46:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

putchar.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <putchar>:
   0:	60 91 00 00 	lds	r22, 0x0000
   4:	70 91 00 00 	lds	r23, 0x0000
   8:	0c 94 00 00 	jmp	0	; 0x0 <putchar>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

puts.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <puts>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	e0 91 00 00 	lds	r30, 0x0000
   c:	f0 91 00 00 	lds	r31, 0x0000
  10:	23 81       	ldd	r18, Z+3	; 0x03
  12:	21 ff       	sbrs	r18, 1
  14:	00 c0       	rjmp	.+0      	; 0x16 <puts+0x16>
  16:	ec 01       	movw	r28, r24
  18:	00 e0       	ldi	r16, 0x00	; 0
  1a:	10 e0       	ldi	r17, 0x00	; 0
  1c:	89 91       	ld	r24, Y+
  1e:	60 91 00 00 	lds	r22, 0x0000
  22:	70 91 00 00 	lds	r23, 0x0000
  26:	db 01       	movw	r26, r22
  28:	18 96       	adiw	r26, 0x08	; 8
  2a:	ed 91       	ld	r30, X+
  2c:	fc 91       	ld	r31, X
  2e:	19 97       	sbiw	r26, 0x09	; 9
  30:	88 23       	and	r24, r24
  32:	01 f0       	breq	.+0      	; 0x34 <puts+0x34>
  34:	09 95       	icall
  36:	89 2b       	or	r24, r25
  38:	01 f0       	breq	.+0      	; 0x3a <puts+0x3a>
  3a:	0f ef       	ldi	r16, 0xFF	; 255
  3c:	1f ef       	ldi	r17, 0xFF	; 255
  3e:	00 c0       	rjmp	.+0      	; 0x40 <puts+0x40>
  40:	8a e0       	ldi	r24, 0x0A	; 10
  42:	09 95       	icall
  44:	89 2b       	or	r24, r25
  46:	01 f4       	brne	.+0      	; 0x48 <puts+0x48>
  48:	c8 01       	movw	r24, r16
  4a:	00 c0       	rjmp	.+0      	; 0x4c <puts+0x4c>
  4c:	8f ef       	ldi	r24, 0xFF	; 255
  4e:	9f ef       	ldi	r25, 0xFF	; 255
  50:	df 91       	pop	r29
  52:	cf 91       	pop	r28
  54:	1f 91       	pop	r17
  56:	0f 91       	pop	r16
  58:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

puts_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <puts_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	ec 01       	movw	r28, r24
   a:	e0 91 00 00 	lds	r30, 0x0000
   e:	f0 91 00 00 	lds	r31, 0x0000
  12:	83 81       	ldd	r24, Z+3	; 0x03
  14:	81 ff       	sbrs	r24, 1
  16:	00 c0       	rjmp	.+0      	; 0x18 <puts_P+0x18>
  18:	00 e0       	ldi	r16, 0x00	; 0
  1a:	10 e0       	ldi	r17, 0x00	; 0
  1c:	fe 01       	movw	r30, r28
  1e:	84 91       	lpm	r24, Z
  20:	60 91 00 00 	lds	r22, 0x0000
  24:	70 91 00 00 	lds	r23, 0x0000
  28:	db 01       	movw	r26, r22
  2a:	18 96       	adiw	r26, 0x08	; 8
  2c:	ed 91       	ld	r30, X+
  2e:	fc 91       	ld	r31, X
  30:	19 97       	sbiw	r26, 0x09	; 9
  32:	88 23       	and	r24, r24
  34:	01 f0       	breq	.+0      	; 0x36 <puts_P+0x36>
  36:	09 95       	icall
  38:	89 2b       	or	r24, r25
  3a:	01 f0       	breq	.+0      	; 0x3c <puts_P+0x3c>
  3c:	0f ef       	ldi	r16, 0xFF	; 255
  3e:	1f ef       	ldi	r17, 0xFF	; 255
  40:	21 96       	adiw	r28, 0x01	; 1
  42:	00 c0       	rjmp	.+0      	; 0x44 <puts_P+0x44>
  44:	8a e0       	ldi	r24, 0x0A	; 10
  46:	09 95       	icall
  48:	89 2b       	or	r24, r25
  4a:	01 f4       	brne	.+0      	; 0x4c <puts_P+0x4c>
  4c:	c8 01       	movw	r24, r16
  4e:	00 c0       	rjmp	.+0      	; 0x50 <puts_P+0x50>
  50:	8f ef       	ldi	r24, 0xFF	; 255
  52:	9f ef       	ldi	r25, 0xFF	; 255
  54:	df 91       	pop	r29
  56:	cf 91       	pop	r28
  58:	1f 91       	pop	r17
  5a:	0f 91       	pop	r16
  5c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

scanf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <scanf>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	fe 01       	movw	r30, r28
   a:	35 96       	adiw	r30, 0x05	; 5
   c:	61 91       	ld	r22, Z+
   e:	71 91       	ld	r23, Z+
  10:	af 01       	movw	r20, r30
  12:	80 91 00 00 	lds	r24, 0x0000
  16:	90 91 00 00 	lds	r25, 0x0000
  1a:	0e 94 00 00 	call	0	; 0x0 <scanf>
  1e:	df 91       	pop	r29
  20:	cf 91       	pop	r28
  22:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

scanf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <scanf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	fe 01       	movw	r30, r28
   e:	37 96       	adiw	r30, 0x07	; 7
  10:	61 91       	ld	r22, Z+
  12:	71 91       	ld	r23, Z+
  14:	00 e0       	ldi	r16, 0x00	; 0
  16:	10 e0       	ldi	r17, 0x00	; 0
  18:	d8 01       	movw	r26, r16
  1a:	8d 91       	ld	r24, X+
  1c:	9c 91       	ld	r25, X
  1e:	dc 01       	movw	r26, r24
  20:	13 96       	adiw	r26, 0x03	; 3
  22:	2c 91       	ld	r18, X
  24:	13 97       	sbiw	r26, 0x03	; 3
  26:	28 60       	ori	r18, 0x08	; 8
  28:	13 96       	adiw	r26, 0x03	; 3
  2a:	2c 93       	st	X, r18
  2c:	af 01       	movw	r20, r30
  2e:	0e 94 00 00 	call	0	; 0x0 <scanf_P>
  32:	d8 01       	movw	r26, r16
  34:	ed 91       	ld	r30, X+
  36:	fc 91       	ld	r31, X
  38:	23 81       	ldd	r18, Z+3	; 0x03
  3a:	27 7f       	andi	r18, 0xF7	; 247
  3c:	23 83       	std	Z+3, r18	; 0x03
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	1f 91       	pop	r17
  44:	0f 91       	pop	r16
  46:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

snprintf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <snprintf>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	0d 89       	ldd	r16, Y+21	; 0x15
  1a:	1e 89       	ldd	r17, Y+22	; 0x16
  1c:	8f 89       	ldd	r24, Y+23	; 0x17
  1e:	98 8d       	ldd	r25, Y+24	; 0x18
  20:	26 e0       	ldi	r18, 0x06	; 6
  22:	2c 83       	std	Y+4, r18	; 0x04
  24:	1a 83       	std	Y+2, r17	; 0x02
  26:	09 83       	std	Y+1, r16	; 0x01
  28:	97 ff       	sbrs	r25, 7
  2a:	00 c0       	rjmp	.+0      	; 0x2c <snprintf+0x2c>
  2c:	80 e0       	ldi	r24, 0x00	; 0
  2e:	90 e8       	ldi	r25, 0x80	; 128
  30:	01 97       	sbiw	r24, 0x01	; 1
  32:	9e 83       	std	Y+6, r25	; 0x06
  34:	8d 83       	std	Y+5, r24	; 0x05
  36:	ae 01       	movw	r20, r28
  38:	45 5e       	subi	r20, 0xE5	; 229
  3a:	5f 4f       	sbci	r21, 0xFF	; 255
  3c:	69 8d       	ldd	r22, Y+25	; 0x19
  3e:	7a 8d       	ldd	r23, Y+26	; 0x1a
  40:	ce 01       	movw	r24, r28
  42:	01 96       	adiw	r24, 0x01	; 1
  44:	0e 94 00 00 	call	0	; 0x0 <snprintf>
  48:	4d 81       	ldd	r20, Y+5	; 0x05
  4a:	5e 81       	ldd	r21, Y+6	; 0x06
  4c:	57 fd       	sbrc	r21, 7
  4e:	00 c0       	rjmp	.+0      	; 0x50 <snprintf+0x50>
  50:	2f 81       	ldd	r18, Y+7	; 0x07
  52:	38 85       	ldd	r19, Y+8	; 0x08
  54:	42 17       	cp	r20, r18
  56:	53 07       	cpc	r21, r19
  58:	04 f4       	brge	.+0      	; 0x5a <snprintf+0x5a>
  5a:	9a 01       	movw	r18, r20
  5c:	f8 01       	movw	r30, r16
  5e:	e2 0f       	add	r30, r18
  60:	f3 1f       	adc	r31, r19
  62:	10 82       	st	Z, r1
  64:	2e 96       	adiw	r28, 0x0e	; 14
  66:	0f b6       	in	r0, 0x3f	; 63
  68:	f8 94       	cli
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	0f be       	out	0x3f, r0	; 63
  6e:	cd bf       	out	0x3d, r28	; 61
  70:	df 91       	pop	r29
  72:	cf 91       	pop	r28
  74:	1f 91       	pop	r17
  76:	0f 91       	pop	r16
  78:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

snprintf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <snprintf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	0d 89       	ldd	r16, Y+21	; 0x15
  1a:	1e 89       	ldd	r17, Y+22	; 0x16
  1c:	8f 89       	ldd	r24, Y+23	; 0x17
  1e:	98 8d       	ldd	r25, Y+24	; 0x18
  20:	2e e0       	ldi	r18, 0x0E	; 14
  22:	2c 83       	std	Y+4, r18	; 0x04
  24:	1a 83       	std	Y+2, r17	; 0x02
  26:	09 83       	std	Y+1, r16	; 0x01
  28:	97 ff       	sbrs	r25, 7
  2a:	00 c0       	rjmp	.+0      	; 0x2c <snprintf_P+0x2c>
  2c:	80 e0       	ldi	r24, 0x00	; 0
  2e:	90 e8       	ldi	r25, 0x80	; 128
  30:	01 97       	sbiw	r24, 0x01	; 1
  32:	9e 83       	std	Y+6, r25	; 0x06
  34:	8d 83       	std	Y+5, r24	; 0x05
  36:	ae 01       	movw	r20, r28
  38:	45 5e       	subi	r20, 0xE5	; 229
  3a:	5f 4f       	sbci	r21, 0xFF	; 255
  3c:	69 8d       	ldd	r22, Y+25	; 0x19
  3e:	7a 8d       	ldd	r23, Y+26	; 0x1a
  40:	ce 01       	movw	r24, r28
  42:	01 96       	adiw	r24, 0x01	; 1
  44:	0e 94 00 00 	call	0	; 0x0 <snprintf_P>
  48:	4d 81       	ldd	r20, Y+5	; 0x05
  4a:	5e 81       	ldd	r21, Y+6	; 0x06
  4c:	57 fd       	sbrc	r21, 7
  4e:	00 c0       	rjmp	.+0      	; 0x50 <snprintf_P+0x50>
  50:	2f 81       	ldd	r18, Y+7	; 0x07
  52:	38 85       	ldd	r19, Y+8	; 0x08
  54:	42 17       	cp	r20, r18
  56:	53 07       	cpc	r21, r19
  58:	04 f4       	brge	.+0      	; 0x5a <snprintf_P+0x5a>
  5a:	9a 01       	movw	r18, r20
  5c:	f8 01       	movw	r30, r16
  5e:	e2 0f       	add	r30, r18
  60:	f3 1f       	adc	r31, r19
  62:	10 82       	st	Z, r1
  64:	2e 96       	adiw	r28, 0x0e	; 14
  66:	0f b6       	in	r0, 0x3f	; 63
  68:	f8 94       	cli
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	0f be       	out	0x3f, r0	; 63
  6e:	cd bf       	out	0x3d, r28	; 61
  70:	df 91       	pop	r29
  72:	cf 91       	pop	r28
  74:	1f 91       	pop	r17
  76:	0f 91       	pop	r16
  78:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

sprintf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <sprintf>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	0d 89       	ldd	r16, Y+21	; 0x15
  1a:	1e 89       	ldd	r17, Y+22	; 0x16
  1c:	86 e0       	ldi	r24, 0x06	; 6
  1e:	8c 83       	std	Y+4, r24	; 0x04
  20:	1a 83       	std	Y+2, r17	; 0x02
  22:	09 83       	std	Y+1, r16	; 0x01
  24:	8f ef       	ldi	r24, 0xFF	; 255
  26:	9f e7       	ldi	r25, 0x7F	; 127
  28:	9e 83       	std	Y+6, r25	; 0x06
  2a:	8d 83       	std	Y+5, r24	; 0x05
  2c:	ae 01       	movw	r20, r28
  2e:	47 5e       	subi	r20, 0xE7	; 231
  30:	5f 4f       	sbci	r21, 0xFF	; 255
  32:	6f 89       	ldd	r22, Y+23	; 0x17
  34:	78 8d       	ldd	r23, Y+24	; 0x18
  36:	ce 01       	movw	r24, r28
  38:	01 96       	adiw	r24, 0x01	; 1
  3a:	0e 94 00 00 	call	0	; 0x0 <sprintf>
  3e:	ef 81       	ldd	r30, Y+7	; 0x07
  40:	f8 85       	ldd	r31, Y+8	; 0x08
  42:	e0 0f       	add	r30, r16
  44:	f1 1f       	adc	r31, r17
  46:	10 82       	st	Z, r1
  48:	2e 96       	adiw	r28, 0x0e	; 14
  4a:	0f b6       	in	r0, 0x3f	; 63
  4c:	f8 94       	cli
  4e:	de bf       	out	0x3e, r29	; 62
  50:	0f be       	out	0x3f, r0	; 63
  52:	cd bf       	out	0x3d, r28	; 61
  54:	df 91       	pop	r29
  56:	cf 91       	pop	r28
  58:	1f 91       	pop	r17
  5a:	0f 91       	pop	r16
  5c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

sprintf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <sprintf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	0d 89       	ldd	r16, Y+21	; 0x15
  1a:	1e 89       	ldd	r17, Y+22	; 0x16
  1c:	8e e0       	ldi	r24, 0x0E	; 14
  1e:	8c 83       	std	Y+4, r24	; 0x04
  20:	1a 83       	std	Y+2, r17	; 0x02
  22:	09 83       	std	Y+1, r16	; 0x01
  24:	8f ef       	ldi	r24, 0xFF	; 255
  26:	9f e7       	ldi	r25, 0x7F	; 127
  28:	9e 83       	std	Y+6, r25	; 0x06
  2a:	8d 83       	std	Y+5, r24	; 0x05
  2c:	ae 01       	movw	r20, r28
  2e:	47 5e       	subi	r20, 0xE7	; 231
  30:	5f 4f       	sbci	r21, 0xFF	; 255
  32:	6f 89       	ldd	r22, Y+23	; 0x17
  34:	78 8d       	ldd	r23, Y+24	; 0x18
  36:	ce 01       	movw	r24, r28
  38:	01 96       	adiw	r24, 0x01	; 1
  3a:	0e 94 00 00 	call	0	; 0x0 <sprintf_P>
  3e:	ef 81       	ldd	r30, Y+7	; 0x07
  40:	f8 85       	ldd	r31, Y+8	; 0x08
  42:	e0 0f       	add	r30, r16
  44:	f1 1f       	adc	r31, r17
  46:	10 82       	st	Z, r1
  48:	2e 96       	adiw	r28, 0x0e	; 14
  4a:	0f b6       	in	r0, 0x3f	; 63
  4c:	f8 94       	cli
  4e:	de bf       	out	0x3e, r29	; 62
  50:	0f be       	out	0x3f, r0	; 63
  52:	cd bf       	out	0x3d, r28	; 61
  54:	df 91       	pop	r29
  56:	cf 91       	pop	r28
  58:	1f 91       	pop	r17
  5a:	0f 91       	pop	r16
  5c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

sscanf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <sscanf>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	2e 97       	sbiw	r28, 0x0e	; 14
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	de bf       	out	0x3e, r29	; 62
  10:	0f be       	out	0x3f, r0	; 63
  12:	cd bf       	out	0x3d, r28	; 61
  14:	85 e0       	ldi	r24, 0x05	; 5
  16:	8c 83       	std	Y+4, r24	; 0x04
  18:	8b 89       	ldd	r24, Y+19	; 0x13
  1a:	9c 89       	ldd	r25, Y+20	; 0x14
  1c:	9a 83       	std	Y+2, r25	; 0x02
  1e:	89 83       	std	Y+1, r24	; 0x01
  20:	ae 01       	movw	r20, r28
  22:	49 5e       	subi	r20, 0xE9	; 233
  24:	5f 4f       	sbci	r21, 0xFF	; 255
  26:	6d 89       	ldd	r22, Y+21	; 0x15
  28:	7e 89       	ldd	r23, Y+22	; 0x16
  2a:	ce 01       	movw	r24, r28
  2c:	01 96       	adiw	r24, 0x01	; 1
  2e:	0e 94 00 00 	call	0	; 0x0 <sscanf>
  32:	2e 96       	adiw	r28, 0x0e	; 14
  34:	0f b6       	in	r0, 0x3f	; 63
  36:	f8 94       	cli
  38:	de bf       	out	0x3e, r29	; 62
  3a:	0f be       	out	0x3f, r0	; 63
  3c:	cd bf       	out	0x3d, r28	; 61
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

sscanf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <sscanf_P>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	2e 97       	sbiw	r28, 0x0e	; 14
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	de bf       	out	0x3e, r29	; 62
  10:	0f be       	out	0x3f, r0	; 63
  12:	cd bf       	out	0x3d, r28	; 61
  14:	8d e0       	ldi	r24, 0x0D	; 13
  16:	8c 83       	std	Y+4, r24	; 0x04
  18:	8b 89       	ldd	r24, Y+19	; 0x13
  1a:	9c 89       	ldd	r25, Y+20	; 0x14
  1c:	9a 83       	std	Y+2, r25	; 0x02
  1e:	89 83       	std	Y+1, r24	; 0x01
  20:	ae 01       	movw	r20, r28
  22:	49 5e       	subi	r20, 0xE9	; 233
  24:	5f 4f       	sbci	r21, 0xFF	; 255
  26:	6d 89       	ldd	r22, Y+21	; 0x15
  28:	7e 89       	ldd	r23, Y+22	; 0x16
  2a:	ce 01       	movw	r24, r28
  2c:	01 96       	adiw	r24, 0x01	; 1
  2e:	0e 94 00 00 	call	0	; 0x0 <sscanf_P>
  32:	2e 96       	adiw	r28, 0x0e	; 14
  34:	0f b6       	in	r0, 0x3f	; 63
  36:	f8 94       	cli
  38:	de bf       	out	0x3e, r29	; 62
  3a:	0f be       	out	0x3f, r0	; 63
  3c:	cd bf       	out	0x3d, r28	; 61
  3e:	df 91       	pop	r29
  40:	cf 91       	pop	r28
  42:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vfprintf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vfprintf_P>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	8b 81       	ldd	r24, Y+3	; 0x03
   8:	88 60       	ori	r24, 0x08	; 8
   a:	8b 83       	std	Y+3, r24	; 0x03
   c:	ce 01       	movw	r24, r28
   e:	0e 94 00 00 	call	0	; 0x0 <vfprintf_P>
  12:	2b 81       	ldd	r18, Y+3	; 0x03
  14:	27 7f       	andi	r18, 0xF7	; 247
  16:	2b 83       	std	Y+3, r18	; 0x03
  18:	df 91       	pop	r29
  1a:	cf 91       	pop	r28
  1c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vfscanf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vfscanf_P>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	ec 01       	movw	r28, r24
   6:	8b 81       	ldd	r24, Y+3	; 0x03
   8:	88 60       	ori	r24, 0x08	; 8
   a:	8b 83       	std	Y+3, r24	; 0x03
   c:	ce 01       	movw	r24, r28
   e:	0e 94 00 00 	call	0	; 0x0 <vfscanf_P>
  12:	2b 81       	ldd	r18, Y+3	; 0x03
  14:	27 7f       	andi	r18, 0xF7	; 247
  16:	2b 83       	std	Y+3, r18	; 0x03
  18:	df 91       	pop	r29
  1a:	cf 91       	pop	r28
  1c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vprintf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vprintf>:
   0:	ab 01       	movw	r20, r22
   2:	bc 01       	movw	r22, r24
   4:	80 91 00 00 	lds	r24, 0x0000
   8:	90 91 00 00 	lds	r25, 0x0000
   c:	0c 94 00 00 	jmp	0	; 0x0 <vprintf>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vscanf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vscanf>:
   0:	ab 01       	movw	r20, r22
   2:	bc 01       	movw	r22, r24
   4:	80 91 00 00 	lds	r24, 0x0000
   8:	90 91 00 00 	lds	r25, 0x0000
   c:	0c 94 00 00 	jmp	0	; 0x0 <vscanf>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vsnprintf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vsnprintf>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	8c 01       	movw	r16, r24
  1a:	ca 01       	movw	r24, r20
  1c:	46 e0       	ldi	r20, 0x06	; 6
  1e:	4c 83       	std	Y+4, r20	; 0x04
  20:	1a 83       	std	Y+2, r17	; 0x02
  22:	09 83       	std	Y+1, r16	; 0x01
  24:	77 ff       	sbrs	r23, 7
  26:	00 c0       	rjmp	.+0      	; 0x28 <vsnprintf+0x28>
  28:	60 e0       	ldi	r22, 0x00	; 0
  2a:	70 e8       	ldi	r23, 0x80	; 128
  2c:	61 50       	subi	r22, 0x01	; 1
  2e:	71 09       	sbc	r23, r1
  30:	7e 83       	std	Y+6, r23	; 0x06
  32:	6d 83       	std	Y+5, r22	; 0x05
  34:	a9 01       	movw	r20, r18
  36:	bc 01       	movw	r22, r24
  38:	ce 01       	movw	r24, r28
  3a:	01 96       	adiw	r24, 0x01	; 1
  3c:	0e 94 00 00 	call	0	; 0x0 <vsnprintf>
  40:	4d 81       	ldd	r20, Y+5	; 0x05
  42:	5e 81       	ldd	r21, Y+6	; 0x06
  44:	57 fd       	sbrc	r21, 7
  46:	00 c0       	rjmp	.+0      	; 0x48 <vsnprintf+0x48>
  48:	2f 81       	ldd	r18, Y+7	; 0x07
  4a:	38 85       	ldd	r19, Y+8	; 0x08
  4c:	42 17       	cp	r20, r18
  4e:	53 07       	cpc	r21, r19
  50:	04 f4       	brge	.+0      	; 0x52 <vsnprintf+0x52>
  52:	9a 01       	movw	r18, r20
  54:	f8 01       	movw	r30, r16
  56:	e2 0f       	add	r30, r18
  58:	f3 1f       	adc	r31, r19
  5a:	10 82       	st	Z, r1
  5c:	2e 96       	adiw	r28, 0x0e	; 14
  5e:	0f b6       	in	r0, 0x3f	; 63
  60:	f8 94       	cli
  62:	de bf       	out	0x3e, r29	; 62
  64:	0f be       	out	0x3f, r0	; 63
  66:	cd bf       	out	0x3d, r28	; 61
  68:	df 91       	pop	r29
  6a:	cf 91       	pop	r28
  6c:	1f 91       	pop	r17
  6e:	0f 91       	pop	r16
  70:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vsnprintf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vsnprintf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	8c 01       	movw	r16, r24
  1a:	ca 01       	movw	r24, r20
  1c:	4e e0       	ldi	r20, 0x0E	; 14
  1e:	4c 83       	std	Y+4, r20	; 0x04
  20:	1a 83       	std	Y+2, r17	; 0x02
  22:	09 83       	std	Y+1, r16	; 0x01
  24:	77 ff       	sbrs	r23, 7
  26:	00 c0       	rjmp	.+0      	; 0x28 <vsnprintf_P+0x28>
  28:	60 e0       	ldi	r22, 0x00	; 0
  2a:	70 e8       	ldi	r23, 0x80	; 128
  2c:	61 50       	subi	r22, 0x01	; 1
  2e:	71 09       	sbc	r23, r1
  30:	7e 83       	std	Y+6, r23	; 0x06
  32:	6d 83       	std	Y+5, r22	; 0x05
  34:	a9 01       	movw	r20, r18
  36:	bc 01       	movw	r22, r24
  38:	ce 01       	movw	r24, r28
  3a:	01 96       	adiw	r24, 0x01	; 1
  3c:	0e 94 00 00 	call	0	; 0x0 <vsnprintf_P>
  40:	4d 81       	ldd	r20, Y+5	; 0x05
  42:	5e 81       	ldd	r21, Y+6	; 0x06
  44:	57 fd       	sbrc	r21, 7
  46:	00 c0       	rjmp	.+0      	; 0x48 <vsnprintf_P+0x48>
  48:	2f 81       	ldd	r18, Y+7	; 0x07
  4a:	38 85       	ldd	r19, Y+8	; 0x08
  4c:	42 17       	cp	r20, r18
  4e:	53 07       	cpc	r21, r19
  50:	04 f4       	brge	.+0      	; 0x52 <vsnprintf_P+0x52>
  52:	9a 01       	movw	r18, r20
  54:	f8 01       	movw	r30, r16
  56:	e2 0f       	add	r30, r18
  58:	f3 1f       	adc	r31, r19
  5a:	10 82       	st	Z, r1
  5c:	2e 96       	adiw	r28, 0x0e	; 14
  5e:	0f b6       	in	r0, 0x3f	; 63
  60:	f8 94       	cli
  62:	de bf       	out	0x3e, r29	; 62
  64:	0f be       	out	0x3f, r0	; 63
  66:	cd bf       	out	0x3d, r28	; 61
  68:	df 91       	pop	r29
  6a:	cf 91       	pop	r28
  6c:	1f 91       	pop	r17
  6e:	0f 91       	pop	r16
  70:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vsprintf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vsprintf>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	8c 01       	movw	r16, r24
  1a:	86 e0       	ldi	r24, 0x06	; 6
  1c:	8c 83       	std	Y+4, r24	; 0x04
  1e:	1a 83       	std	Y+2, r17	; 0x02
  20:	09 83       	std	Y+1, r16	; 0x01
  22:	8f ef       	ldi	r24, 0xFF	; 255
  24:	9f e7       	ldi	r25, 0x7F	; 127
  26:	9e 83       	std	Y+6, r25	; 0x06
  28:	8d 83       	std	Y+5, r24	; 0x05
  2a:	ce 01       	movw	r24, r28
  2c:	01 96       	adiw	r24, 0x01	; 1
  2e:	0e 94 00 00 	call	0	; 0x0 <vsprintf>
  32:	ef 81       	ldd	r30, Y+7	; 0x07
  34:	f8 85       	ldd	r31, Y+8	; 0x08
  36:	e0 0f       	add	r30, r16
  38:	f1 1f       	adc	r31, r17
  3a:	10 82       	st	Z, r1
  3c:	2e 96       	adiw	r28, 0x0e	; 14
  3e:	0f b6       	in	r0, 0x3f	; 63
  40:	f8 94       	cli
  42:	de bf       	out	0x3e, r29	; 62
  44:	0f be       	out	0x3f, r0	; 63
  46:	cd bf       	out	0x3d, r28	; 61
  48:	df 91       	pop	r29
  4a:	cf 91       	pop	r28
  4c:	1f 91       	pop	r17
  4e:	0f 91       	pop	r16
  50:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vsprintf_p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vsprintf_P>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2e 97       	sbiw	r28, 0x0e	; 14
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	8c 01       	movw	r16, r24
  1a:	8e e0       	ldi	r24, 0x0E	; 14
  1c:	8c 83       	std	Y+4, r24	; 0x04
  1e:	1a 83       	std	Y+2, r17	; 0x02
  20:	09 83       	std	Y+1, r16	; 0x01
  22:	8f ef       	ldi	r24, 0xFF	; 255
  24:	9f e7       	ldi	r25, 0x7F	; 127
  26:	9e 83       	std	Y+6, r25	; 0x06
  28:	8d 83       	std	Y+5, r24	; 0x05
  2a:	ce 01       	movw	r24, r28
  2c:	01 96       	adiw	r24, 0x01	; 1
  2e:	0e 94 00 00 	call	0	; 0x0 <vsprintf_P>
  32:	ef 81       	ldd	r30, Y+7	; 0x07
  34:	f8 85       	ldd	r31, Y+8	; 0x08
  36:	e0 0f       	add	r30, r16
  38:	f1 1f       	adc	r31, r17
  3a:	10 82       	st	Z, r1
  3c:	2e 96       	adiw	r28, 0x0e	; 14
  3e:	0f b6       	in	r0, 0x3f	; 63
  40:	f8 94       	cli
  42:	de bf       	out	0x3e, r29	; 62
  44:	0f be       	out	0x3f, r0	; 63
  46:	cd bf       	out	0x3d, r28	; 61
  48:	df 91       	pop	r29
  4a:	cf 91       	pop	r28
  4c:	1f 91       	pop	r17
  4e:	0f 91       	pop	r16
  50:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

ungetc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <ungetc>:
   0:	fb 01       	movw	r30, r22
   2:	23 81       	ldd	r18, Z+3	; 0x03
   4:	20 ff       	sbrs	r18, 0
   6:	00 c0       	rjmp	.+0      	; 0x8 <ungetc+0x8>
   8:	26 fd       	sbrc	r18, 6
   a:	00 c0       	rjmp	.+0      	; 0xc <ungetc+0xc>
   c:	8f 3f       	cpi	r24, 0xFF	; 255
   e:	3f ef       	ldi	r19, 0xFF	; 255
  10:	93 07       	cpc	r25, r19
  12:	01 f0       	breq	.+0      	; 0x14 <ungetc+0x14>
  14:	82 83       	std	Z+2, r24	; 0x02
  16:	2f 7d       	andi	r18, 0xDF	; 223
  18:	20 64       	ori	r18, 0x40	; 64
  1a:	23 83       	std	Z+3, r18	; 0x03
  1c:	26 81       	ldd	r18, Z+6	; 0x06
  1e:	37 81       	ldd	r19, Z+7	; 0x07
  20:	21 50       	subi	r18, 0x01	; 1
  22:	31 09       	sbc	r19, r1
  24:	37 83       	std	Z+7, r19	; 0x07
  26:	26 83       	std	Z+6, r18	; 0x06
  28:	99 27       	eor	r25, r25
  2a:	08 95       	ret
  2c:	8f ef       	ldi	r24, 0xFF	; 255
  2e:	9f ef       	ldi	r25, 0xFF	; 255
  30:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

getc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <getc>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <getc>

putc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <putc>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <putc>

ultoa_invert.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <__ultoa_invert>:
   0:	fa 01       	movw	r30, r20
   2:	aa 27       	eor	r26, r26
   4:	28 30       	cpi	r18, 0x08	; 8
   6:	01 f0       	breq	.+0      	; 0x8 <__ultoa_invert+0x8>
   8:	20 31       	cpi	r18, 0x10	; 16
   a:	01 f0       	breq	.+0      	; 0xc <__ultoa_invert+0xc>
   c:	e8 94       	clt
   e:	6f 93       	push	r22
  10:	6e 7f       	andi	r22, 0xFE	; 254
  12:	6e 5f       	subi	r22, 0xFE	; 254
  14:	7f 4f       	sbci	r23, 0xFF	; 255
  16:	8f 4f       	sbci	r24, 0xFF	; 255
  18:	9f 4f       	sbci	r25, 0xFF	; 255
  1a:	af 4f       	sbci	r26, 0xFF	; 255
  1c:	b1 e0       	ldi	r27, 0x01	; 1
  1e:	00 d0       	rcall	.+0      	; 0x20 <__ultoa_invert+0x20>
  20:	b4 e0       	ldi	r27, 0x04	; 4
  22:	00 d0       	rcall	.+0      	; 0x24 <__ultoa_invert+0x24>
  24:	67 0f       	add	r22, r23
  26:	78 1f       	adc	r23, r24
  28:	89 1f       	adc	r24, r25
  2a:	9a 1f       	adc	r25, r26
  2c:	a1 1d       	adc	r26, r1
  2e:	68 0f       	add	r22, r24
  30:	79 1f       	adc	r23, r25
  32:	8a 1f       	adc	r24, r26
  34:	91 1d       	adc	r25, r1
  36:	a1 1d       	adc	r26, r1
  38:	6a 0f       	add	r22, r26
  3a:	71 1d       	adc	r23, r1
  3c:	81 1d       	adc	r24, r1
  3e:	91 1d       	adc	r25, r1
  40:	a1 1d       	adc	r26, r1
  42:	00 d0       	rcall	.+0      	; 0x44 <__ultoa_invert+0x44>
  44:	01 f4       	brne	.+0      	; 0x46 <__ultoa_invert+0x46>
  46:	68 94       	set
  48:	3f 91       	pop	r19
  4a:	2a e0       	ldi	r18, 0x0A	; 10
  4c:	26 9f       	mul	r18, r22
  4e:	11 24       	eor	r1, r1
  50:	30 19       	sub	r19, r0
  52:	30 5d       	subi	r19, 0xD0	; 208
  54:	31 93       	st	Z+, r19
  56:	06 f4       	brtc	.+0      	; 0x58 <__ultoa_invert+0x58>
  58:	cf 01       	movw	r24, r30
  5a:	08 95       	ret
  5c:	46 2f       	mov	r20, r22
  5e:	47 70       	andi	r20, 0x07	; 7
  60:	40 5d       	subi	r20, 0xD0	; 208
  62:	41 93       	st	Z+, r20
  64:	b3 e0       	ldi	r27, 0x03	; 3
  66:	00 d0       	rcall	.+0      	; 0x68 <__ultoa_invert+0x68>
  68:	01 f4       	brne	.+0      	; 0x6a <__ultoa_invert+0x6a>
  6a:	00 c0       	rjmp	.+0      	; 0x6c <__ultoa_invert+0x6c>
  6c:	46 2f       	mov	r20, r22
  6e:	4f 70       	andi	r20, 0x0F	; 15
  70:	40 5d       	subi	r20, 0xD0	; 208
  72:	4a 33       	cpi	r20, 0x3A	; 58
  74:	00 f0       	brcs	.+0      	; 0x76 <__ultoa_invert+0x76>
  76:	49 5d       	subi	r20, 0xD9	; 217
  78:	31 fd       	sbrc	r19, 1
  7a:	40 52       	subi	r20, 0x20	; 32
  7c:	41 93       	st	Z+, r20
  7e:	00 d0       	rcall	.+0      	; 0x80 <__ultoa_invert+0x80>
  80:	01 f4       	brne	.+0      	; 0x82 <__ultoa_invert+0x82>
  82:	00 c0       	rjmp	.+0      	; 0x84 <__ultoa_invert+0x84>
  84:	b4 e0       	ldi	r27, 0x04	; 4
  86:	a6 95       	lsr	r26
  88:	97 95       	ror	r25
  8a:	87 95       	ror	r24
  8c:	77 95       	ror	r23
  8e:	67 95       	ror	r22
  90:	ba 95       	dec	r27
  92:	01 f4       	brne	.+0      	; 0x94 <__ultoa_invert+0x94>
  94:	00 97       	sbiw	r24, 0x00	; 0
  96:	61 05       	cpc	r22, r1
  98:	71 05       	cpc	r23, r1
  9a:	08 95       	ret
  9c:	9b 01       	movw	r18, r22
  9e:	ac 01       	movw	r20, r24
  a0:	0a 2e       	mov	r0, r26
  a2:	06 94       	lsr	r0
  a4:	57 95       	ror	r21
  a6:	47 95       	ror	r20
  a8:	37 95       	ror	r19
  aa:	27 95       	ror	r18
  ac:	ba 95       	dec	r27
  ae:	01 f4       	brne	.+0      	; 0xb0 <__ultoa_invert+0xb0>
  b0:	62 0f       	add	r22, r18
  b2:	73 1f       	adc	r23, r19
  b4:	84 1f       	adc	r24, r20
  b6:	95 1f       	adc	r25, r21
  b8:	a0 1d       	adc	r26, r0
  ba:	08 95       	ret

acos.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <acos>:
   0:	9f 93       	push	r25
   2:	9f 77       	andi	r25, 0x7F	; 127
   4:	0e 94 00 00 	call	0	; 0x0 <acos>
   8:	0f 90       	pop	r0
   a:	00 20       	and	r0, r0
   c:	02 f4       	brpl	.+0      	; 0xe <acos+0xe>
   e:	90 58       	subi	r25, 0x80	; 128
  10:	a2 ea       	ldi	r26, 0xA2	; 162
  12:	2a ed       	ldi	r18, 0xDA	; 218
  14:	3f e0       	ldi	r19, 0x0F	; 15
  16:	49 e4       	ldi	r20, 0x49	; 73
  18:	50 e4       	ldi	r21, 0x40	; 64
  1a:	0e 94 00 00 	call	0	; 0x0 <acos>
  1e:	0c 94 00 00 	jmp	0	; 0x0 <acos>

addsf3.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__subsf3>:
   0:	50 58       	subi	r21, 0x80	; 128

00000002 <__addsf3>:
   2:	bb 27       	eor	r27, r27
   4:	aa 27       	eor	r26, r26
   6:	0e 94 00 00 	call	0	; 0x0 <__subsf3>
   a:	0c 94 00 00 	jmp	0	; 0x0 <__subsf3>

addsf3x.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__addsf3x-0x22>:
   0:	0e 94 00 00 	call	0	; 0x0 <__addsf3x-0x22>
   4:	00 f0       	brcs	.+0      	; 0x6 <__addsf3x-0x1c>
   6:	0e 94 00 00 	call	0	; 0x0 <__addsf3x-0x22>
   a:	00 f0       	brcs	.+0      	; 0xc <__addsf3x-0x16>
   c:	01 f4       	brne	.+0      	; 0xe <__addsf3x-0x14>
   e:	9f 3f       	cpi	r25, 0xFF	; 255
  10:	01 f4       	brne	.+0      	; 0x12 <__addsf3x-0x10>
  12:	06 f4       	brtc	.+0      	; 0x14 <__addsf3x-0xe>
  14:	0c 94 00 00 	jmp	0	; 0x0 <__addsf3x-0x22>
  18:	06 f4       	brtc	.+0      	; 0x1a <__addsf3x-0x8>
  1a:	e0 95       	com	r30
  1c:	e7 fb       	bst	r30, 7
  1e:	0c 94 00 00 	jmp	0	; 0x0 <__addsf3x-0x22>

00000022 <__addsf3x>:
  22:	e9 2f       	mov	r30, r25
  24:	0e 94 00 00 	call	0	; 0x0 <__addsf3x-0x22>
  28:	00 f0       	brcs	.+0      	; 0x2a <__addsf3x+0x8>
  2a:	ba 17       	cp	r27, r26
  2c:	62 07       	cpc	r22, r18
  2e:	73 07       	cpc	r23, r19
  30:	84 07       	cpc	r24, r20
  32:	95 07       	cpc	r25, r21
  34:	00 f0       	brcs	.+0      	; 0x36 <__addsf3x+0x14>
  36:	01 f4       	brne	.+0      	; 0x38 <__addsf3x+0x16>
  38:	06 f4       	brtc	.+0      	; 0x3a <__addsf3x+0x18>
  3a:	0c 94 00 00 	jmp	0	; 0x0 <__addsf3x-0x22>
  3e:	06 f4       	brtc	.+0      	; 0x40 <__addsf3x+0x1e>
  40:	e0 95       	com	r30
  42:	0b 2e       	mov	r0, r27
  44:	ba 2f       	mov	r27, r26
  46:	a0 2d       	mov	r26, r0
  48:	0b 01       	movw	r0, r22
  4a:	b9 01       	movw	r22, r18
  4c:	90 01       	movw	r18, r0
  4e:	0c 01       	movw	r0, r24
  50:	ca 01       	movw	r24, r20
  52:	a0 01       	movw	r20, r0
  54:	11 24       	eor	r1, r1
  56:	ff 27       	eor	r31, r31
  58:	59 1b       	sub	r21, r25
  5a:	01 f0       	breq	.+0      	; 0x5c <__addsf3x+0x3a>
  5c:	59 3f       	cpi	r21, 0xF9	; 249
  5e:	00 f4       	brcc	.+0      	; 0x60 <__addsf3x+0x3e>
  60:	50 3e       	cpi	r21, 0xE0	; 224
  62:	00 f0       	brcs	.+0      	; 0x64 <__addsf3x+0x42>
  64:	1a 16       	cp	r1, r26
  66:	f0 40       	sbci	r31, 0x00	; 0
  68:	a2 2f       	mov	r26, r18
  6a:	23 2f       	mov	r18, r19
  6c:	34 2f       	mov	r19, r20
  6e:	44 27       	eor	r20, r20
  70:	58 5f       	subi	r21, 0xF8	; 248
  72:	00 c0       	rjmp	.+0      	; 0x74 <__addsf3x+0x52>
  74:	46 95       	lsr	r20
  76:	37 95       	ror	r19
  78:	27 95       	ror	r18
  7a:	a7 95       	ror	r26
  7c:	f0 40       	sbci	r31, 0x00	; 0
  7e:	53 95       	inc	r21
  80:	01 f4       	brne	.+0      	; 0x82 <__addsf3x+0x60>
  82:	06 f4       	brtc	.+0      	; 0x84 <__addsf3x+0x62>
  84:	1f 16       	cp	r1, r31
  86:	ba 0b       	sbc	r27, r26
  88:	62 0b       	sbc	r22, r18
  8a:	73 0b       	sbc	r23, r19
  8c:	84 0b       	sbc	r24, r20
  8e:	02 f0       	brmi	.+0      	; 0x90 <__addsf3x+0x6e>
  90:	91 50       	subi	r25, 0x01	; 1
  92:	01 f0       	breq	.+0      	; 0x94 <__addsf3x+0x72>
  94:	ff 0f       	add	r31, r31
  96:	bb 1f       	adc	r27, r27
  98:	66 1f       	adc	r22, r22
  9a:	77 1f       	adc	r23, r23
  9c:	88 1f       	adc	r24, r24
  9e:	02 f4       	brpl	.+0      	; 0xa0 <__addsf3x+0x7e>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <__addsf3x+0x80>
  a2:	ba 0f       	add	r27, r26
  a4:	62 1f       	adc	r22, r18
  a6:	73 1f       	adc	r23, r19
  a8:	84 1f       	adc	r24, r20
  aa:	00 f4       	brcc	.+0      	; 0xac <__addsf3x+0x8a>
  ac:	87 95       	ror	r24
  ae:	77 95       	ror	r23
  b0:	67 95       	ror	r22
  b2:	b7 95       	ror	r27
  b4:	f7 95       	ror	r31
  b6:	9e 3f       	cpi	r25, 0xFE	; 254
  b8:	00 f0       	brcs	.+0      	; 0xba <__addsf3x+0x98>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <__addsf3x+0x9a>
  bc:	93 95       	inc	r25
  be:	88 0f       	add	r24, r24
  c0:	00 f0       	brcs	.+0      	; 0xc2 <__addsf3x+0xa0>
  c2:	99 27       	eor	r25, r25
  c4:	ee 0f       	add	r30, r30
  c6:	97 95       	ror	r25
  c8:	87 95       	ror	r24
  ca:	08 95       	ret

asin.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <asin>:
   0:	9f 93       	push	r25
   2:	9f 77       	andi	r25, 0x7F	; 127
   4:	ee e3       	ldi	r30, 0x3E	; 62
   6:	89 37       	cpi	r24, 0x79	; 121
   8:	9e 07       	cpc	r25, r30
   a:	00 f4       	brcc	.+0      	; 0xc <asin+0xc>
   c:	e0 e0       	ldi	r30, 0x00	; 0
   e:	f0 e0       	ldi	r31, 0x00	; 0
  10:	0e 94 00 00 	call	0	; 0x0 <asin>
  14:	00 c0       	rjmp	.+0      	; 0x16 <asin+0x16>
  16:	0e 94 00 00 	call	0	; 0x0 <asin>
  1a:	90 58       	subi	r25, 0x80	; 128
  1c:	a2 ea       	ldi	r26, 0xA2	; 162
  1e:	2a ed       	ldi	r18, 0xDA	; 218
  20:	3f e0       	ldi	r19, 0x0F	; 15
  22:	49 ec       	ldi	r20, 0xC9	; 201
  24:	5f e3       	ldi	r21, 0x3F	; 63
  26:	0e 94 00 00 	call	0	; 0x0 <asin>
  2a:	0e 94 00 00 	call	0	; 0x0 <asin>
  2e:	0f 90       	pop	r0
  30:	07 fc       	sbrc	r0, 7
  32:	90 58       	subi	r25, 0x80	; 128
  34:	08 95       	ret

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	03 6e       	ori	r16, 0xE3	; 227
   2:	db 36       	cpi	r29, 0x6B	; 107
   4:	3d 9a       	sbi	0x07, 5	; 7
   6:	99 99       	sbic	0x13, 1	; 19
   8:	99 3d       	cpi	r25, 0xD9	; 217
   a:	ab aa       	std	Y+51, r10	; 0x33
   c:	aa 2a       	or	r10, r26
   e:	3e 00       	.word	0x003e	; ????
  10:	00 00       	nop
  12:	80 3f       	cpi	r24, 0xF0	; 240

atan2.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <atan2-0x26>:
   0:	0e 94 00 00 	call	0	; 0x0 <atan2-0x26>
   4:	00 f0       	brcs	.+0      	; 0x6 <atan2-0x20>
   6:	80 e8       	ldi	r24, 0x80	; 128
   8:	91 e0       	ldi	r25, 0x01	; 1
   a:	01 f4       	brne	.+0      	; 0xc <atan2-0x1a>
   c:	9e ef       	ldi	r25, 0xFE	; 254
   e:	0e 94 00 00 	call	0	; 0x0 <atan2-0x26>
  12:	00 f0       	brcs	.+0      	; 0x14 <atan2-0x12>
  14:	40 e8       	ldi	r20, 0x80	; 128
  16:	51 e0       	ldi	r21, 0x01	; 1
  18:	01 f4       	brne	.+0      	; 0x1a <atan2-0xc>
  1a:	5e ef       	ldi	r21, 0xFE	; 254
  1c:	00 c0       	rjmp	.+0      	; 0x1e <atan2-0x8>
  1e:	0c 94 00 00 	jmp	0	; 0x0 <atan2-0x26>
  22:	0c 94 00 00 	jmp	0	; 0x0 <atan2-0x26>

00000026 <atan2>:
  26:	e9 2f       	mov	r30, r25
  28:	e0 78       	andi	r30, 0x80	; 128
  2a:	0e 94 00 00 	call	0	; 0x0 <atan2-0x26>
  2e:	00 f0       	brcs	.+0      	; 0x30 <atan2+0xa>
  30:	09 2e       	mov	r0, r25
  32:	05 2a       	or	r0, r21
  34:	01 f0       	breq	.+0      	; 0x36 <atan2+0x10>
  36:	26 17       	cp	r18, r22
  38:	37 07       	cpc	r19, r23
  3a:	48 07       	cpc	r20, r24
  3c:	59 07       	cpc	r21, r25
  3e:	00 f0       	brcs	.+0      	; 0x40 <atan2+0x1a>
  40:	0e 2e       	mov	r0, r30
  42:	07 f8       	bld	r0, 7
  44:	e0 25       	eor	r30, r0
  46:	01 f0       	breq	.+0      	; 0x48 <atan2+0x22>
  48:	e0 25       	eor	r30, r0
  4a:	e0 64       	ori	r30, 0x40	; 64
  4c:	00 c0       	rjmp	.+0      	; 0x4e <atan2+0x28>
  4e:	ef 63       	ori	r30, 0x3F	; 63
  50:	07 f8       	bld	r0, 7
  52:	00 94       	com	r0
  54:	07 fa       	bst	r0, 7
  56:	db 01       	movw	r26, r22
  58:	b9 01       	movw	r22, r18
  5a:	9d 01       	movw	r18, r26
  5c:	dc 01       	movw	r26, r24
  5e:	ca 01       	movw	r24, r20
  60:	ad 01       	movw	r20, r26
  62:	ef 93       	push	r30
  64:	0e 94 00 00 	call	0	; 0x0 <atan2-0x26>
  68:	0e 94 00 00 	call	0	; 0x0 <atan2-0x26>
  6c:	0e 94 00 00 	call	0	; 0x0 <atan2-0x26>
  70:	5f 91       	pop	r21
  72:	55 23       	and	r21, r21
  74:	01 f0       	breq	.+0      	; 0x76 <atan2+0x50>
  76:	2b ed       	ldi	r18, 0xDB	; 219
  78:	3f e0       	ldi	r19, 0x0F	; 15
  7a:	49 e4       	ldi	r20, 0x49	; 73
  7c:	50 fd       	sbrc	r21, 0
  7e:	49 ec       	ldi	r20, 0xC9	; 201
  80:	0c 94 00 00 	jmp	0	; 0x0 <atan2-0x26>
  84:	08 95       	ret

atan.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <atan>:
   0:	df 93       	push	r29
   2:	dd 27       	eor	r29, r29
   4:	b9 2f       	mov	r27, r25
   6:	bf 77       	andi	r27, 0x7F	; 127
   8:	40 e8       	ldi	r20, 0x80	; 128
   a:	5f e3       	ldi	r21, 0x3F	; 63
   c:	16 16       	cp	r1, r22
   e:	17 06       	cpc	r1, r23
  10:	48 07       	cpc	r20, r24
  12:	5b 07       	cpc	r21, r27
  14:	00 f4       	brcc	.+0      	; 0x16 <atan+0x16>
  16:	d9 2f       	mov	r29, r25
  18:	0e 94 00 00 	call	0	; 0x0 <atan>
  1c:	9f 93       	push	r25
  1e:	8f 93       	push	r24
  20:	7f 93       	push	r23
  22:	6f 93       	push	r22
  24:	0e 94 00 00 	call	0	; 0x0 <atan>
  28:	e0 e0       	ldi	r30, 0x00	; 0
  2a:	f0 e0       	ldi	r31, 0x00	; 0
  2c:	0e 94 00 00 	call	0	; 0x0 <atan>
  30:	0e 94 00 00 	call	0	; 0x0 <atan>
  34:	2f 91       	pop	r18
  36:	3f 91       	pop	r19
  38:	4f 91       	pop	r20
  3a:	5f 91       	pop	r21
  3c:	0e 94 00 00 	call	0	; 0x0 <atan>
  40:	dd 23       	and	r29, r29
  42:	01 f0       	breq	.+0      	; 0x44 <atan+0x44>
  44:	90 58       	subi	r25, 0x80	; 128
  46:	a2 ea       	ldi	r26, 0xA2	; 162
  48:	2a ed       	ldi	r18, 0xDA	; 218
  4a:	3f e0       	ldi	r19, 0x0F	; 15
  4c:	49 ec       	ldi	r20, 0xC9	; 201
  4e:	5f e3       	ldi	r21, 0x3F	; 63
  50:	d0 78       	andi	r29, 0x80	; 128
  52:	5d 27       	eor	r21, r29
  54:	0e 94 00 00 	call	0	; 0x0 <atan>
  58:	df 91       	pop	r29
  5a:	0c 94 00 00 	jmp	0	; 0x0 <atan>

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	08 4a       	sbci	r16, 0xA8	; 168
   2:	d7 3b       	cpi	r29, 0xB7	; 183
   4:	3b ce       	rjmp	.-906    	; 0xfffffc7c <atan+0xfffffc7c>
   6:	01 6e       	ori	r16, 0xE1	; 225
   8:	84 bc       	out	0x24, r8	; 36
   a:	bf fd       	.word	0xfdbf	; ????
   c:	c1 2f       	mov	r28, r17
   e:	3d 6c       	ori	r19, 0xCD	; 205
  10:	74 31       	cpi	r23, 0x14	; 20
  12:	9a bd       	out	0x2a, r25	; 42
  14:	56 83       	std	Z+6, r21	; 0x06
  16:	3d da       	rcall	.-2950   	; 0xfffff492 <atan+0xfffff492>
  18:	3d 00       	.word	0x003d	; ????
  1a:	c7 7f       	andi	r28, 0xF7	; 247
  1c:	11 be       	out	0x31, r1	; 49
  1e:	d9 e4       	ldi	r29, 0x49	; 73
  20:	bb 4c       	sbci	r27, 0xCB	; 203
  22:	3e 91       	ld	r19, -X
  24:	6b aa       	std	Y+51, r6	; 0x33
  26:	aa be       	out	0x3a, r10	; 58
  28:	00 00       	nop
  2a:	00 80       	ld	r0, Z
  2c:	3f ef       	Address 0x000000000000002c is out of bounds.
.word	0xffff	; ????

cbrt.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <cbrt-0x18>:
   0:	49 2f       	mov	r20, r25
   2:	e5 e5       	ldi	r30, 0x55	; 85
   4:	93 95       	inc	r25
   6:	9e 9f       	mul	r25, r30
   8:	91 2d       	mov	r25, r1
   a:	e3 e0       	ldi	r30, 0x03	; 3
   c:	e9 9f       	mul	r30, r25
   e:	40 19       	sub	r20, r0
  10:	ee 27       	eor	r30, r30
  12:	08 95       	ret
  14:	0c 94 00 00 	jmp	0	; 0x0 <cbrt-0x18>

00000018 <cbrt>:
  18:	0e 94 00 00 	call	0	; 0x0 <cbrt-0x18>
  1c:	00 f0       	brcs	.+0      	; 0x1e <cbrt+0x6>
  1e:	99 23       	and	r25, r25
  20:	01 f0       	breq	.+0      	; 0x22 <cbrt+0xa>
  22:	df 93       	push	r29
  24:	cf 93       	push	r28
  26:	1f 93       	push	r17
  28:	0f 93       	push	r16
  2a:	ff 92       	push	r15
  2c:	ef 92       	push	r14
  2e:	df 92       	push	r13
  30:	cf 92       	push	r12
  32:	bf 92       	push	r11
  34:	af 92       	push	r10
  36:	9f 92       	push	r9
  38:	8f 92       	push	r8
  3a:	9f 57       	subi	r25, 0x7F	; 127
  3c:	00 f4       	brcc	.+0      	; 0x3e <cbrt+0x26>
  3e:	91 95       	neg	r25
  40:	88 23       	and	r24, r24
  42:	02 f0       	brmi	.+0      	; 0x44 <cbrt+0x2c>
  44:	93 95       	inc	r25
  46:	66 0f       	add	r22, r22
  48:	77 1f       	adc	r23, r23
  4a:	88 1f       	adc	r24, r24
  4c:	02 f4       	brpl	.+0      	; 0x4e <cbrt+0x36>
  4e:	00 d0       	rcall	.+0      	; 0x50 <cbrt+0x38>
  50:	4a 95       	dec	r20
  52:	02 f0       	brmi	.+0      	; 0x54 <cbrt+0x3c>
  54:	01 f4       	brne	.+0      	; 0x56 <cbrt+0x3e>
  56:	4e 5f       	subi	r20, 0xFE	; 254
  58:	93 95       	inc	r25
  5a:	91 95       	neg	r25
  5c:	00 c0       	rjmp	.+0      	; 0x5e <cbrt+0x46>
  5e:	00 d0       	rcall	.+0      	; 0x60 <cbrt+0x48>
  60:	91 58       	subi	r25, 0x81	; 129
  62:	9f 93       	push	r25
  64:	ff 27       	eor	r31, r31
  66:	ff 24       	eor	r15, r15
  68:	8f 01       	movw	r16, r30
  6a:	9f 01       	movw	r18, r30
  6c:	4f 01       	movw	r8, r30
  6e:	df 01       	movw	r26, r30
  70:	ef 01       	movw	r28, r30
  72:	66 0f       	add	r22, r22
  74:	77 1f       	adc	r23, r23
  76:	88 1f       	adc	r24, r24
  78:	aa 1f       	adc	r26, r26
  7a:	4a 95       	dec	r20
  7c:	02 f4       	brpl	.+0      	; 0x7e <cbrt+0x66>
  7e:	98 e0       	ldi	r25, 0x08	; 8
  80:	00 0f       	add	r16, r16
  82:	11 1f       	adc	r17, r17
  84:	00 0f       	add	r16, r16
  86:	11 1f       	adc	r17, r17
  88:	ee 0f       	add	r30, r30
  8a:	a8 01       	movw	r20, r16
  8c:	aa 24       	eor	r10, r10
  8e:	4e 0f       	add	r20, r30
  90:	51 1d       	adc	r21, r1
  92:	a1 1c       	adc	r10, r1
  94:	6a 01       	movw	r12, r20
  96:	ea 2c       	mov	r14, r10
  98:	44 0f       	add	r20, r20
  9a:	55 1f       	adc	r21, r21
  9c:	aa 1c       	adc	r10, r10
  9e:	4c 0d       	add	r20, r12
  a0:	5d 1d       	adc	r21, r13
  a2:	ae 1c       	adc	r10, r14
  a4:	41 60       	ori	r20, 0x01	; 1
  a6:	a4 1b       	sub	r26, r20
  a8:	b5 0b       	sbc	r27, r21
  aa:	ca 09       	sbc	r28, r10
  ac:	00 f4       	brcc	.+0      	; 0xae <cbrt+0x96>
  ae:	a4 0f       	add	r26, r20
  b0:	b5 1f       	adc	r27, r21
  b2:	ca 1d       	adc	r28, r10
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <cbrt+0x9e>
  b6:	af 01       	movw	r20, r30
  b8:	44 0f       	add	r20, r20
  ba:	55 1f       	adc	r21, r21
  bc:	04 0f       	add	r16, r20
  be:	15 1f       	adc	r17, r21
  c0:	01 60       	ori	r16, 0x01	; 1
  c2:	e1 60       	ori	r30, 0x01	; 1
  c4:	43 e0       	ldi	r20, 0x03	; 3
  c6:	66 0f       	add	r22, r22
  c8:	77 1f       	adc	r23, r23
  ca:	88 1f       	adc	r24, r24
  cc:	aa 1f       	adc	r26, r26
  ce:	bb 1f       	adc	r27, r27
  d0:	cc 1f       	adc	r28, r28
  d2:	4a 95       	dec	r20
  d4:	01 f4       	brne	.+0      	; 0xd6 <cbrt+0xbe>
  d6:	9a 95       	dec	r25
  d8:	01 f4       	brne	.+0      	; 0xda <cbrt+0xc2>
  da:	90 e1       	ldi	r25, 0x10	; 16
  dc:	00 0f       	add	r16, r16
  de:	11 1f       	adc	r17, r17
  e0:	22 1f       	adc	r18, r18
  e2:	33 1f       	adc	r19, r19
  e4:	88 1c       	adc	r8, r8
  e6:	99 1c       	adc	r9, r9
  e8:	10 94       	com	r1
  ea:	01 f4       	brne	.+0      	; 0xec <cbrt+0xd4>
  ec:	ee 0f       	add	r30, r30
  ee:	ff 1f       	adc	r31, r31
  f0:	ff 1c       	adc	r15, r15
  f2:	00 24       	eor	r0, r0
  f4:	a0 01       	movw	r20, r0
  f6:	50 01       	movw	r10, r0
  f8:	60 01       	movw	r12, r0
  fa:	ee 24       	eor	r14, r14
  fc:	40 0f       	add	r20, r16
  fe:	51 1f       	adc	r21, r17
 100:	a2 1e       	adc	r10, r18
 102:	b3 1e       	adc	r11, r19
 104:	c8 1c       	adc	r12, r8
 106:	d9 1c       	adc	r13, r9
 108:	e1 1c       	adc	r14, r1
 10a:	4e 0f       	add	r20, r30
 10c:	5f 1f       	adc	r21, r31
 10e:	af 1c       	adc	r10, r15
 110:	b1 1c       	adc	r11, r1
 112:	c1 1c       	adc	r12, r1
 114:	d1 1c       	adc	r13, r1
 116:	e1 1c       	adc	r14, r1
 118:	00 94       	com	r0
 11a:	01 f0       	breq	.+0      	; 0x11c <cbrt+0x104>
 11c:	44 0f       	add	r20, r20
 11e:	55 1f       	adc	r21, r21
 120:	aa 1c       	adc	r10, r10
 122:	bb 1c       	adc	r11, r11
 124:	cc 1c       	adc	r12, r12
 126:	dd 1c       	adc	r13, r13
 128:	ee 1c       	adc	r14, r14
 12a:	00 c0       	rjmp	.+0      	; 0x12c <cbrt+0x114>
 12c:	a4 1b       	sub	r26, r20
 12e:	b5 0b       	sbc	r27, r21
 130:	ca 09       	sbc	r28, r10
 132:	db 09       	sbc	r29, r11
 134:	6c 09       	sbc	r22, r12
 136:	7d 09       	sbc	r23, r13
 138:	8e 09       	sbc	r24, r14
 13a:	00 f4       	brcc	.+0      	; 0x13c <cbrt+0x124>
 13c:	a4 0f       	add	r26, r20
 13e:	b5 1f       	adc	r27, r21
 140:	ca 1d       	adc	r28, r10
 142:	db 1d       	adc	r29, r11
 144:	6c 1d       	adc	r22, r12
 146:	7d 1d       	adc	r23, r13
 148:	8e 1d       	adc	r24, r14
 14a:	00 c0       	rjmp	.+0      	; 0x14c <cbrt+0x134>
 14c:	0e 0f       	add	r16, r30
 14e:	1f 1f       	adc	r17, r31
 150:	2f 1d       	adc	r18, r15
 152:	31 1d       	adc	r19, r1
 154:	81 1c       	adc	r8, r1
 156:	91 1c       	adc	r9, r1
 158:	00 94       	com	r0
 15a:	01 f4       	brne	.+0      	; 0x15c <cbrt+0x144>
 15c:	01 60       	ori	r16, 0x01	; 1
 15e:	e1 60       	ori	r30, 0x01	; 1
 160:	43 e0       	ldi	r20, 0x03	; 3
 162:	aa 0f       	add	r26, r26
 164:	bb 1f       	adc	r27, r27
 166:	cc 1f       	adc	r28, r28
 168:	dd 1f       	adc	r29, r29
 16a:	66 1f       	adc	r22, r22
 16c:	77 1f       	adc	r23, r23
 16e:	88 1f       	adc	r24, r24
 170:	4a 95       	dec	r20
 172:	01 f4       	brne	.+0      	; 0x174 <cbrt+0x15c>
 174:	9a 95       	dec	r25
 176:	01 f0       	breq	.+0      	; 0x178 <cbrt+0x160>
 178:	00 c0       	rjmp	.+0      	; 0x17a <cbrt+0x162>
 17a:	bf 01       	movw	r22, r30
 17c:	8f 2d       	mov	r24, r15
 17e:	9f 91       	pop	r25
 180:	88 0f       	add	r24, r24
 182:	96 95       	lsr	r25
 184:	87 95       	ror	r24
 186:	97 f9       	bld	r25, 7
 188:	8f 90       	pop	r8
 18a:	9f 90       	pop	r9
 18c:	af 90       	pop	r10
 18e:	bf 90       	pop	r11
 190:	cf 90       	pop	r12
 192:	df 90       	pop	r13
 194:	ef 90       	pop	r14
 196:	ff 90       	pop	r15
 198:	0f 91       	pop	r16
 19a:	1f 91       	pop	r17
 19c:	cf 91       	pop	r28
 19e:	df 91       	pop	r29
 1a0:	08 95       	ret

ceil.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <ceil>:
   0:	0e 94 00 00 	call	0	; 0x0 <ceil>
   4:	00 f0       	brcs	.+0      	; 0x6 <ceil+0x6>
   6:	9f 37       	cpi	r25, 0x7F	; 127
   8:	00 f4       	brcc	.+0      	; 0xa <ceil+0xa>
   a:	91 11       	cpse	r25, r1
   c:	06 f4       	brtc	.+0      	; 0xe <ceil+0xe>
   e:	0c 94 00 00 	jmp	0	; 0x0 <ceil>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e0       	ldi	r23, 0x00	; 0
  16:	80 e8       	ldi	r24, 0x80	; 128
  18:	9f e3       	ldi	r25, 0x3F	; 63
  1a:	08 95       	ret
  1c:	06 f0       	brts	.+0      	; 0x1e <ceil+0x1e>
  1e:	1b 16       	cp	r1, r27
  20:	61 1d       	adc	r22, r1
  22:	71 1d       	adc	r23, r1
  24:	81 1d       	adc	r24, r1
  26:	0c 94 00 00 	jmp	0	; 0x0 <ceil>
  2a:	0c 94 00 00 	jmp	0	; 0x0 <ceil>

cmpsf2.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__cmpsf2>:
   0:	0e 94 00 00 	call	0	; 0x0 <__cmpsf2>
   4:	00 f4       	brcc	.+0      	; 0x6 <__cmpsf2+0x6>
   6:	81 e0       	ldi	r24, 0x01	; 1
   8:	08 95       	ret

copysign.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <copysign>:
   0:	57 fb       	bst	r21, 7
   2:	97 f9       	bld	r25, 7
   4:	08 95       	ret

cosh.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <cosh>:
   0:	90 68       	ori	r25, 0x80	; 128
   2:	0e 94 00 00 	call	0	; 0x0 <cosh>
   6:	4f ef       	ldi	r20, 0xFF	; 255
   8:	5f ef       	ldi	r21, 0xFF	; 255
   a:	0e 94 00 00 	call	0	; 0x0 <cosh>
   e:	9f 93       	push	r25
  10:	8f 93       	push	r24
  12:	7f 93       	push	r23
  14:	6f 93       	push	r22
  16:	42 e0       	ldi	r20, 0x02	; 2
  18:	50 e0       	ldi	r21, 0x00	; 0
  1a:	0e 94 00 00 	call	0	; 0x0 <cosh>
  1e:	0e 94 00 00 	call	0	; 0x0 <cosh>
  22:	2f 91       	pop	r18
  24:	3f 91       	pop	r19
  26:	4f 91       	pop	r20
  28:	5f 91       	pop	r21
  2a:	0c 94 00 00 	jmp	0	; 0x0 <cosh>

cos.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <cos>:
   0:	0e 94 00 00 	call	0	; 0x0 <cos>
   4:	e3 95       	inc	r30
   6:	0c 94 00 00 	jmp	0	; 0x0 <cos>

divsf3.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__divsf3>:
   0:	0e 94 00 00 	call	0	; 0x0 <__divsf3>
   4:	0c 94 00 00 	jmp	0	; 0x0 <__divsf3>

divsf3x.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__divsf3x-0x20>:
   0:	0e 94 00 00 	call	0	; 0x0 <__divsf3x-0x20>
   4:	00 f0       	brcs	.+0      	; 0x6 <__divsf3x-0x1a>
   6:	0e 94 00 00 	call	0	; 0x0 <__divsf3x-0x20>
   a:	00 f0       	brcs	.+0      	; 0xc <__divsf3x-0x14>
   c:	01 f4       	brne	.+0      	; 0xe <__divsf3x-0x12>
   e:	5f 3f       	cpi	r21, 0xFF	; 255
  10:	01 f0       	breq	.+0      	; 0x12 <__divsf3x-0xe>
  12:	0c 94 00 00 	jmp	0	; 0x0 <__divsf3x-0x20>
  16:	51 11       	cpse	r21, r1
  18:	0c 94 00 00 	jmp	0	; 0x0 <__divsf3x-0x20>
  1c:	0c 94 00 00 	jmp	0	; 0x0 <__divsf3x-0x20>

00000020 <__divsf3x>:
  20:	0e 94 00 00 	call	0	; 0x0 <__divsf3x-0x20>
  24:	00 f0       	brcs	.+0      	; 0x26 <__divsf3_pse>

00000026 <__divsf3_pse>:
  26:	99 23       	and	r25, r25
  28:	01 f0       	breq	.+0      	; 0x2a <__divsf3_pse+0x4>
  2a:	55 23       	and	r21, r21
  2c:	01 f0       	breq	.+0      	; 0x2e <__divsf3_pse+0x8>
  2e:	95 1b       	sub	r25, r21
  30:	55 0b       	sbc	r21, r21
  32:	bb 27       	eor	r27, r27
  34:	aa 27       	eor	r26, r26
  36:	62 17       	cp	r22, r18
  38:	73 07       	cpc	r23, r19
  3a:	84 07       	cpc	r24, r20
  3c:	00 f0       	brcs	.+0      	; 0x3e <__divsf3_pse+0x18>
  3e:	9f 5f       	subi	r25, 0xFF	; 255
  40:	5f 4f       	sbci	r21, 0xFF	; 255
  42:	22 0f       	add	r18, r18
  44:	33 1f       	adc	r19, r19
  46:	44 1f       	adc	r20, r20
  48:	aa 1f       	adc	r26, r26
  4a:	01 f0       	breq	.+0      	; 0x4c <__divsf3_pse+0x26>
  4c:	00 d0       	rcall	.+0      	; 0x4e <__divsf3_pse+0x28>
  4e:	0e 2e       	mov	r0, r30
  50:	02 f0       	brmi	.+0      	; 0x52 <__divsf3_pse+0x2c>
  52:	e0 e8       	ldi	r30, 0x80	; 128
  54:	00 d0       	rcall	.+0      	; 0x56 <__divsf3_pse+0x30>
  56:	91 50       	subi	r25, 0x01	; 1
  58:	50 40       	sbci	r21, 0x00	; 0
  5a:	e6 95       	lsr	r30
  5c:	00 1c       	adc	r0, r0
  5e:	02 f4       	brpl	.+0      	; 0x60 <__divsf3_pse+0x3a>
  60:	00 d0       	rcall	.+0      	; 0x62 <__divsf3_pse+0x3c>
  62:	fe 2f       	mov	r31, r30
  64:	00 d0       	rcall	.+0      	; 0x66 <__divsf3_pse+0x40>
  66:	66 0f       	add	r22, r22
  68:	77 1f       	adc	r23, r23
  6a:	88 1f       	adc	r24, r24
  6c:	bb 1f       	adc	r27, r27
  6e:	26 17       	cp	r18, r22
  70:	37 07       	cpc	r19, r23
  72:	48 07       	cpc	r20, r24
  74:	ab 07       	cpc	r26, r27
  76:	b0 e8       	ldi	r27, 0x80	; 128
  78:	01 f0       	breq	.+0      	; 0x7a <__divsf3_pse+0x54>
  7a:	bb 0b       	sbc	r27, r27
  7c:	80 2d       	mov	r24, r0
  7e:	bf 01       	movw	r22, r30
  80:	ff 27       	eor	r31, r31
  82:	93 58       	subi	r25, 0x83	; 131
  84:	5f 4f       	sbci	r21, 0xFF	; 255
  86:	02 f0       	brmi	.+0      	; 0x88 <__divsf3_pse+0x62>
  88:	9e 3f       	cpi	r25, 0xFE	; 254
  8a:	51 05       	cpc	r21, r1
  8c:	00 f0       	brcs	.+0      	; 0x8e <__divsf3_pse+0x68>
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__divsf3x-0x20>
  92:	0c 94 00 00 	jmp	0	; 0x0 <__divsf3x-0x20>
  96:	5f 3f       	cpi	r21, 0xFF	; 255
  98:	04 f0       	brlt	.+0      	; 0x9a <__divsf3_pse+0x74>
  9a:	98 3e       	cpi	r25, 0xE8	; 232
  9c:	04 f0       	brlt	.+0      	; 0x9e <__divsf3_pse+0x78>
  9e:	86 95       	lsr	r24
  a0:	77 95       	ror	r23
  a2:	67 95       	ror	r22
  a4:	b7 95       	ror	r27
  a6:	f7 95       	ror	r31
  a8:	9f 5f       	subi	r25, 0xFF	; 255
  aa:	01 f4       	brne	.+0      	; 0xac <__divsf3_pse+0x86>
  ac:	88 0f       	add	r24, r24
  ae:	91 1d       	adc	r25, r1
  b0:	96 95       	lsr	r25
  b2:	87 95       	ror	r24
  b4:	97 f9       	bld	r25, 7
  b6:	08 95       	ret
  b8:	e1 e0       	ldi	r30, 0x01	; 1
  ba:	66 0f       	add	r22, r22
  bc:	77 1f       	adc	r23, r23
  be:	88 1f       	adc	r24, r24
  c0:	bb 1f       	adc	r27, r27
  c2:	62 17       	cp	r22, r18
  c4:	73 07       	cpc	r23, r19
  c6:	84 07       	cpc	r24, r20
  c8:	ba 07       	cpc	r27, r26
  ca:	00 f0       	brcs	.+0      	; 0xcc <__divsf3_pse+0xa6>
  cc:	62 1b       	sub	r22, r18
  ce:	73 0b       	sbc	r23, r19
  d0:	84 0b       	sbc	r24, r20
  d2:	ba 0b       	sbc	r27, r26
  d4:	ee 1f       	adc	r30, r30
  d6:	00 f4       	brcc	.+0      	; 0xd8 <__divsf3_pse+0xb2>
  d8:	e0 95       	com	r30
  da:	08 95       	ret

exp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <exp-0x10>:
   0:	01 f4       	brne	.+0      	; 0x2 <exp-0xe>
   2:	06 f0       	brts	.+0      	; 0x4 <exp-0xc>
   4:	0c 94 00 00 	jmp	0	; 0x0 <exp-0x10>
   8:	0c 94 00 00 	jmp	0	; 0x0 <exp-0x10>
   c:	0c 94 00 00 	jmp	0	; 0x0 <exp-0x10>

00000010 <exp>:
  10:	0e 94 00 00 	call	0	; 0x0 <exp-0x10>
  14:	00 f0       	brcs	.+0      	; 0x16 <exp+0x6>
  16:	96 38       	cpi	r25, 0x86	; 134
  18:	00 f4       	brcc	.+0      	; 0x1a <exp+0xa>
  1a:	07 f8       	bld	r0, 7
  1c:	0f 92       	push	r0
  1e:	e8 94       	clt
  20:	2b e3       	ldi	r18, 0x3B	; 59
  22:	3a ea       	ldi	r19, 0xAA	; 170
  24:	48 eb       	ldi	r20, 0xB8	; 184
  26:	5f e7       	ldi	r21, 0x7F	; 127
  28:	0e 94 00 00 	call	0	; 0x0 <exp-0x10>
  2c:	0f 92       	push	r0
  2e:	0f 92       	push	r0
  30:	0f 92       	push	r0
  32:	4d b7       	in	r20, 0x3d	; 61
  34:	5e b7       	in	r21, 0x3e	; 62
  36:	0f 92       	push	r0
  38:	0e 94 00 00 	call	0	; 0x0 <exp-0x10>
  3c:	e0 e0       	ldi	r30, 0x00	; 0
  3e:	f0 e0       	ldi	r31, 0x00	; 0
  40:	0e 94 00 00 	call	0	; 0x0 <exp-0x10>
  44:	4f 91       	pop	r20
  46:	5f 91       	pop	r21
  48:	ef 91       	pop	r30
  4a:	ff 91       	pop	r31
  4c:	e5 95       	asr	r30
  4e:	ee 1f       	adc	r30, r30
  50:	ff 1f       	adc	r31, r31
  52:	01 f0       	breq	.+0      	; 0x54 <exp+0x44>
  54:	fe 57       	subi	r31, 0x7E	; 126
  56:	e0 68       	ori	r30, 0x80	; 128
  58:	44 27       	eor	r20, r20
  5a:	ee 0f       	add	r30, r30
  5c:	44 1f       	adc	r20, r20
  5e:	fa 95       	dec	r31
  60:	01 f4       	brne	.+0      	; 0x62 <exp+0x52>
  62:	41 95       	neg	r20
  64:	55 0b       	sbc	r21, r21
  66:	0e 94 00 00 	call	0	; 0x0 <exp-0x10>
  6a:	0f 90       	pop	r0
  6c:	07 fe       	sbrs	r0, 7
  6e:	0c 94 00 00 	jmp	0	; 0x0 <exp-0x10>
  72:	08 95       	ret

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	07 63       	ori	r16, 0x37	; 55
   2:	42 36       	cpi	r20, 0x62	; 98
   4:	b7 9b       	sbis	0x16, 7	; 22
   6:	d8 a7       	std	Y+40, r29	; 0x28
   8:	1a 39       	cpi	r17, 0x9A	; 154
   a:	68 56       	subi	r22, 0x68	; 104
   c:	18 ae       	std	Y+56, r1	; 0x38
   e:	ba ab       	std	Y+50, r27	; 0x32
  10:	55 8c       	ldd	r5, Z+29	; 0x1d
  12:	1d 3c       	cpi	r17, 0xCD	; 205
  14:	b7 cc       	rjmp	.-1682   	; 0xfffff984 <exp+0xfffff974>
  16:	57 63       	ori	r21, 0x37	; 55
  18:	bd 6d       	ori	r27, 0xDD	; 221
  1a:	ed fd       	.word	0xfded	; ????
  1c:	75 3e       	cpi	r23, 0xE5	; 229
  1e:	f6 17       	cp	r31, r22
  20:	72 31       	cpi	r23, 0x12	; 18
  22:	bf 00       	.word	0x00bf	; ????
  24:	00 00       	nop
  26:	80 3f       	cpi	r24, 0xF0	; 240

fixsfdi.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fixsfdi>:
   0:	be e3       	ldi	r27, 0x3E	; 62
   2:	00 d0       	rcall	.+0      	; 0x4 <__fixsfdi+0x4>
   4:	00 f4       	brcc	.+0      	; 0x6 <__fixsfdi+0x6>
   6:	90 e8       	ldi	r25, 0x80	; 128
   8:	08 95       	ret

0000000a <__fixunssfdi>:
   a:	bf e3       	ldi	r27, 0x3F	; 63
   c:	22 27       	eor	r18, r18
   e:	33 27       	eor	r19, r19
  10:	a9 01       	movw	r20, r18
  12:	0e 94 00 00 	call	0	; 0x0 <__fixsfdi>
  16:	00 f0       	brcs	.+0      	; 0x18 <__fixunssfdi+0xe>
  18:	9f 57       	subi	r25, 0x7F	; 127
  1a:	00 f0       	brcs	.+0      	; 0x1c <__fixunssfdi+0x12>
  1c:	b9 17       	cp	r27, r25
  1e:	00 f0       	brcs	.+0      	; 0x20 <__fixunssfdi+0x16>
  20:	bf e3       	ldi	r27, 0x3F	; 63
  22:	b9 1b       	sub	r27, r25
  24:	99 27       	eor	r25, r25
  26:	b8 50       	subi	r27, 0x08	; 8
  28:	02 f4       	brpl	.+0      	; 0x2a <__fixunssfdi+0x20>
  2a:	66 0f       	add	r22, r22
  2c:	77 1f       	adc	r23, r23
  2e:	88 1f       	adc	r24, r24
  30:	99 1f       	adc	r25, r25
  32:	b3 95       	inc	r27
  34:	02 f0       	brmi	.+0      	; 0x36 <__fixunssfdi+0x2c>
  36:	00 c0       	rjmp	.+0      	; 0x38 <__fixunssfdi+0x2e>
  38:	b8 50       	subi	r27, 0x08	; 8
  3a:	02 f0       	brmi	.+0      	; 0x3c <__fixunssfdi+0x32>
  3c:	23 2f       	mov	r18, r19
  3e:	34 2f       	mov	r19, r20
  40:	45 2f       	mov	r20, r21
  42:	56 2f       	mov	r21, r22
  44:	67 2f       	mov	r22, r23
  46:	78 2f       	mov	r23, r24
  48:	88 27       	eor	r24, r24
  4a:	b8 50       	subi	r27, 0x08	; 8
  4c:	02 f4       	brpl	.+0      	; 0x4e <__fixunssfdi+0x44>
  4e:	b8 5f       	subi	r27, 0xF8	; 248
  50:	01 f0       	breq	.+0      	; 0x52 <__fixunssfdi+0x48>
  52:	86 95       	lsr	r24
  54:	77 95       	ror	r23
  56:	67 95       	ror	r22
  58:	57 95       	ror	r21
  5a:	47 95       	ror	r20
  5c:	37 95       	ror	r19
  5e:	27 95       	ror	r18
  60:	ba 95       	dec	r27
  62:	01 f4       	brne	.+0      	; 0x64 <__fixunssfdi+0x5a>
  64:	06 f4       	brtc	.+0      	; 0x66 <__fixunssfdi+0x5c>
  66:	0e 94 00 00 	call	0	; 0x0 <__fixsfdi>
  6a:	88 94       	clc
  6c:	08 95       	ret
  6e:	88 94       	clc
  70:	60 e0       	ldi	r22, 0x00	; 0
  72:	70 e0       	ldi	r23, 0x00	; 0
  74:	cb 01       	movw	r24, r22
  76:	08 95       	ret

fixsfsi.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fixsfsi>:
   0:	0e 94 00 00 	call	0	; 0x0 <__fixsfsi>
   4:	68 94       	set
   6:	b1 11       	cpse	r27, r1
   8:	0c 94 00 00 	jmp	0	; 0x0 <__fixsfsi>
   c:	08 95       	ret

fixunssfsi.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fixunssfsi>:
   0:	0e 94 00 00 	call	0	; 0x0 <__fixunssfsi>
   4:	00 f0       	brcs	.+0      	; 0x6 <__fixunssfsi+0x6>
   6:	9f 57       	subi	r25, 0x7F	; 127
   8:	00 f0       	brcs	.+0      	; 0xa <__fixunssfsi+0xa>
   a:	b9 2f       	mov	r27, r25
   c:	99 27       	eor	r25, r25
   e:	b7 51       	subi	r27, 0x17	; 23
  10:	00 f0       	brcs	.+0      	; 0x12 <__fixunssfsi+0x12>
  12:	01 f0       	breq	.+0      	; 0x14 <__fixunssfsi+0x14>
  14:	66 0f       	add	r22, r22
  16:	77 1f       	adc	r23, r23
  18:	88 1f       	adc	r24, r24
  1a:	99 1f       	adc	r25, r25
  1c:	02 f0       	brmi	.+0      	; 0x1e <__fixunssfsi+0x1e>
  1e:	ba 95       	dec	r27
  20:	01 f4       	brne	.+0      	; 0x22 <__fixunssfsi+0x22>
  22:	00 c0       	rjmp	.+0      	; 0x24 <__fixunssfsi+0x24>
  24:	b1 30       	cpi	r27, 0x01	; 1
  26:	01 f0       	breq	.+0      	; 0x28 <__fixunssfsi+0x28>
  28:	0e 94 00 00 	call	0	; 0x0 <__fixunssfsi>
  2c:	b1 e0       	ldi	r27, 0x01	; 1
  2e:	08 95       	ret
  30:	0c 94 00 00 	jmp	0	; 0x0 <__fixunssfsi>
  34:	67 2f       	mov	r22, r23
  36:	78 2f       	mov	r23, r24
  38:	88 27       	eor	r24, r24
  3a:	b8 5f       	subi	r27, 0xF8	; 248
  3c:	01 f0       	breq	.+0      	; 0x3e <__fixunssfsi+0x3e>
  3e:	b9 3f       	cpi	r27, 0xF9	; 249
  40:	04 f0       	brlt	.+0      	; 0x42 <__fixunssfsi+0x42>
  42:	86 95       	lsr	r24
  44:	77 95       	ror	r23
  46:	67 95       	ror	r22
  48:	b3 95       	inc	r27
  4a:	01 f4       	brne	.+0      	; 0x4c <__fixunssfsi+0x4c>
  4c:	06 f4       	brtc	.+0      	; 0x4e <__fixunssfsi+0x4e>
  4e:	90 95       	com	r25
  50:	80 95       	com	r24
  52:	70 95       	com	r23
  54:	61 95       	neg	r22
  56:	7f 4f       	sbci	r23, 0xFF	; 255
  58:	8f 4f       	sbci	r24, 0xFF	; 255
  5a:	9f 4f       	sbci	r25, 0xFF	; 255
  5c:	08 95       	ret

floatdisf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__floatdisf>:
   0:	97 fb       	bst	r25, 7
   2:	06 f4       	brtc	.+0      	; 0x4 <__floatdisf+0x4>
   4:	0e 94 00 00 	call	0	; 0x0 <__floatdisf>
   8:	0c 94 00 00 	jmp	0	; 0x0 <__floatdisf>

floatsisf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__floatunsisf>:
   0:	e8 94       	clt
   2:	00 c0       	rjmp	.+0      	; 0x4 <__floatsisf>

00000004 <__floatsisf>:
   4:	97 fb       	bst	r25, 7
   6:	06 f4       	brtc	.+0      	; 0x8 <__floatsisf+0x4>
   8:	90 95       	com	r25
   a:	80 95       	com	r24
   c:	70 95       	com	r23
   e:	61 95       	neg	r22
  10:	7f 4f       	sbci	r23, 0xFF	; 255
  12:	8f 4f       	sbci	r24, 0xFF	; 255
  14:	9f 4f       	sbci	r25, 0xFF	; 255
  16:	99 23       	and	r25, r25
  18:	01 f0       	breq	.+0      	; 0x1a <__floatsisf+0x16>
  1a:	f9 2f       	mov	r31, r25
  1c:	96 e9       	ldi	r25, 0x96	; 150
  1e:	bb 27       	eor	r27, r27
  20:	93 95       	inc	r25
  22:	f6 95       	lsr	r31
  24:	87 95       	ror	r24
  26:	77 95       	ror	r23
  28:	67 95       	ror	r22
  2a:	b7 95       	ror	r27
  2c:	f1 11       	cpse	r31, r1
  2e:	00 c0       	rjmp	.+0      	; 0x30 <__floatsisf+0x2c>
  30:	02 f4       	brpl	.+0      	; 0x32 <__floatsisf+0x2e>
  32:	bb 0f       	add	r27, r27
  34:	01 f4       	brne	.+0      	; 0x36 <__floatsisf+0x32>
  36:	60 ff       	sbrs	r22, 0
  38:	00 c0       	rjmp	.+0      	; 0x3a <__floatsisf+0x36>
  3a:	6f 5f       	subi	r22, 0xFF	; 255
  3c:	7f 4f       	sbci	r23, 0xFF	; 255
  3e:	8f 4f       	sbci	r24, 0xFF	; 255
  40:	9f 4f       	sbci	r25, 0xFF	; 255
  42:	00 c0       	rjmp	.+0      	; 0x44 <__floatsisf+0x40>
  44:	88 23       	and	r24, r24
  46:	01 f0       	breq	.+0      	; 0x48 <__floatsisf+0x44>
  48:	96 e9       	ldi	r25, 0x96	; 150
  4a:	00 c0       	rjmp	.+0      	; 0x4c <__floatsisf+0x48>
  4c:	77 23       	and	r23, r23
  4e:	01 f0       	breq	.+0      	; 0x50 <__floatsisf+0x4c>
  50:	9e e8       	ldi	r25, 0x8E	; 142
  52:	87 2f       	mov	r24, r23
  54:	76 2f       	mov	r23, r22
  56:	00 c0       	rjmp	.+0      	; 0x58 <__floatsisf+0x54>
  58:	66 23       	and	r22, r22
  5a:	01 f0       	breq	.+0      	; 0x5c <__floatsisf+0x58>
  5c:	96 e8       	ldi	r25, 0x86	; 134
  5e:	86 2f       	mov	r24, r22
  60:	70 e0       	ldi	r23, 0x00	; 0
  62:	60 e0       	ldi	r22, 0x00	; 0
  64:	02 f0       	brmi	.+0      	; 0x66 <__floatsisf+0x62>
  66:	9a 95       	dec	r25
  68:	66 0f       	add	r22, r22
  6a:	77 1f       	adc	r23, r23
  6c:	88 1f       	adc	r24, r24
  6e:	02 f4       	brpl	.+0      	; 0x70 <__floatsisf+0x6c>
  70:	88 0f       	add	r24, r24
  72:	96 95       	lsr	r25
  74:	87 95       	ror	r24
  76:	97 f9       	bld	r25, 7
  78:	08 95       	ret

floatundisf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__floatundisf>:
   0:	e8 94       	clt

00000002 <__fp_di2sf>:
   2:	f9 2f       	mov	r31, r25
   4:	96 eb       	ldi	r25, 0xB6	; 182
   6:	ff 23       	and	r31, r31
   8:	01 f0       	breq	.+0      	; 0xa <__fp_di2sf+0x8>
   a:	12 16       	cp	r1, r18
   c:	13 06       	cpc	r1, r19
   e:	14 06       	cpc	r1, r20
  10:	44 0b       	sbc	r20, r20
  12:	93 95       	inc	r25
  14:	f6 95       	lsr	r31
  16:	87 95       	ror	r24
  18:	77 95       	ror	r23
  1a:	67 95       	ror	r22
  1c:	57 95       	ror	r21
  1e:	40 40       	sbci	r20, 0x00	; 0
  20:	ff 23       	and	r31, r31
  22:	01 f4       	brne	.+0      	; 0x24 <__fp_di2sf+0x22>
  24:	00 c0       	rjmp	.+0      	; 0x26 <__fp_di2sf+0x24>
  26:	99 27       	eor	r25, r25
  28:	08 95       	ret
  2a:	88 23       	and	r24, r24
  2c:	01 f4       	brne	.+0      	; 0x2e <__fp_di2sf+0x2c>
  2e:	98 50       	subi	r25, 0x08	; 8
  30:	02 f4       	brpl	.+0      	; 0x32 <__fp_di2sf+0x30>
  32:	87 2b       	or	r24, r23
  34:	76 2f       	mov	r23, r22
  36:	65 2f       	mov	r22, r21
  38:	54 2f       	mov	r21, r20
  3a:	43 2f       	mov	r20, r19
  3c:	32 2f       	mov	r19, r18
  3e:	20 e0       	ldi	r18, 0x00	; 0
  40:	01 f0       	breq	.+0      	; 0x42 <__fp_di2sf+0x40>
  42:	12 16       	cp	r1, r18
  44:	13 06       	cpc	r1, r19
  46:	14 06       	cpc	r1, r20
  48:	44 0b       	sbc	r20, r20
  4a:	88 23       	and	r24, r24
  4c:	02 f0       	brmi	.+0      	; 0x4e <__fp_di2sf+0x4c>
  4e:	9a 95       	dec	r25
  50:	44 0f       	add	r20, r20
  52:	55 1f       	adc	r21, r21
  54:	66 1f       	adc	r22, r22
  56:	77 1f       	adc	r23, r23
  58:	88 1f       	adc	r24, r24
  5a:	02 f4       	brpl	.+0      	; 0x5c <__fp_di2sf+0x5a>
  5c:	55 23       	and	r21, r21
  5e:	02 f4       	brpl	.+0      	; 0x60 <__fp_di2sf+0x5e>
  60:	44 0f       	add	r20, r20
  62:	55 1f       	adc	r21, r21
  64:	01 f4       	brne	.+0      	; 0x66 <__fp_di2sf+0x64>
  66:	60 ff       	sbrs	r22, 0
  68:	00 c0       	rjmp	.+0      	; 0x6a <__fp_di2sf+0x68>
  6a:	6f 5f       	subi	r22, 0xFF	; 255
  6c:	7f 4f       	sbci	r23, 0xFF	; 255
  6e:	8f 4f       	sbci	r24, 0xFF	; 255
  70:	9f 4f       	sbci	r25, 0xFF	; 255
  72:	88 0f       	add	r24, r24
  74:	96 95       	lsr	r25
  76:	87 95       	ror	r24
  78:	97 f9       	bld	r25, 7
  7a:	08 95       	ret

fdim.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <fdim>:
   0:	09 2e       	mov	r0, r25
   2:	05 2a       	or	r0, r21
   4:	02 f0       	brmi	.+0      	; 0x6 <fdim+0x6>
   6:	62 17       	cp	r22, r18
   8:	73 07       	cpc	r23, r19
   a:	84 07       	cpc	r24, r20
   c:	95 07       	cpc	r25, r21
   e:	00 f0       	brcs	.+0      	; 0x10 <fdim+0x10>
  10:	0c 94 00 00 	jmp	0	; 0x0 <fdim>
  14:	26 17       	cp	r18, r22
  16:	37 07       	cpc	r19, r23
  18:	48 07       	cpc	r20, r24
  1a:	59 07       	cpc	r21, r25
  1c:	00 f4       	brcc	.+0      	; 0x1e <fdim+0x1e>
  1e:	e0 e8       	ldi	r30, 0x80	; 128
  20:	fe ef       	ldi	r31, 0xFE	; 254
  22:	99 0f       	add	r25, r25
  24:	16 16       	cp	r1, r22
  26:	17 06       	cpc	r1, r23
  28:	e8 07       	cpc	r30, r24
  2a:	f9 07       	cpc	r31, r25
  2c:	00 f0       	brcs	.+0      	; 0x2e <fdim+0x2e>
  2e:	55 0f       	add	r21, r21
  30:	12 16       	cp	r1, r18
  32:	13 06       	cpc	r1, r19
  34:	e4 07       	cpc	r30, r20
  36:	f5 07       	cpc	r31, r21
  38:	00 f0       	brcs	.+0      	; 0x3a <fdim+0x3a>
  3a:	0c 94 00 00 	jmp	0	; 0x0 <fdim>
  3e:	0c 94 00 00 	jmp	0	; 0x0 <fdim>

floor.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <floor>:
   0:	0e 94 00 00 	call	0	; 0x0 <floor>
   4:	00 f0       	brcs	.+0      	; 0x6 <floor+0x6>
   6:	9f 37       	cpi	r25, 0x7F	; 127
   8:	00 f4       	brcc	.+0      	; 0xa <floor+0xa>
   a:	91 11       	cpse	r25, r1
   c:	06 f0       	brts	.+0      	; 0xe <floor+0xe>
   e:	0c 94 00 00 	jmp	0	; 0x0 <floor>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e0       	ldi	r23, 0x00	; 0
  16:	80 e8       	ldi	r24, 0x80	; 128
  18:	9f eb       	ldi	r25, 0xBF	; 191
  1a:	08 95       	ret
  1c:	06 f4       	brtc	.+0      	; 0x1e <floor+0x1e>
  1e:	1b 16       	cp	r1, r27
  20:	61 1d       	adc	r22, r1
  22:	71 1d       	adc	r23, r1
  24:	81 1d       	adc	r24, r1
  26:	0c 94 00 00 	jmp	0	; 0x0 <floor>
  2a:	0c 94 00 00 	jmp	0	; 0x0 <floor>

fma.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <fma>:
   0:	0e 94 00 00 	call	0	; 0x0 <fma>
   4:	97 01       	movw	r18, r14
   6:	a8 01       	movw	r20, r16
   8:	aa 27       	eor	r26, r26
   a:	0e 94 00 00 	call	0	; 0x0 <fma>
   e:	0c 94 00 00 	jmp	0	; 0x0 <fma>

fmax.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <fmax>:
   0:	99 0f       	add	r25, r25
   2:	bb 0b       	sbc	r27, r27
   4:	55 0f       	add	r21, r21
   6:	aa 0b       	sbc	r26, r26
   8:	e0 e8       	ldi	r30, 0x80	; 128
   a:	fe ef       	ldi	r31, 0xFE	; 254
   c:	16 16       	cp	r1, r22
   e:	17 06       	cpc	r1, r23
  10:	e8 07       	cpc	r30, r24
  12:	f9 07       	cpc	r31, r25
  14:	00 f0       	brcs	.+0      	; 0x16 <fmax+0x16>
  16:	12 16       	cp	r1, r18
  18:	13 06       	cpc	r1, r19
  1a:	e4 07       	cpc	r30, r20
  1c:	f5 07       	cpc	r31, r21
  1e:	00 f0       	brcs	.+0      	; 0x20 <fmax+0x20>
  20:	ba 17       	cp	r27, r26
  22:	04 f0       	brlt	.+0      	; 0x24 <fmax+0x24>
  24:	01 f4       	brne	.+0      	; 0x26 <fmax+0x26>
  26:	62 17       	cp	r22, r18
  28:	73 07       	cpc	r23, r19
  2a:	84 07       	cpc	r24, r20
  2c:	95 07       	cpc	r25, r21
  2e:	a7 95       	ror	r26
  30:	03 f4       	brvc	.+0      	; 0x32 <fmax+0x32>
  32:	b9 01       	movw	r22, r18
  34:	ca 01       	movw	r24, r20
  36:	ba 2f       	mov	r27, r26
  38:	b6 95       	lsr	r27
  3a:	97 95       	ror	r25
  3c:	08 95       	ret

fmin.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <fmin>:
   0:	99 0f       	add	r25, r25
   2:	bb 0b       	sbc	r27, r27
   4:	55 0f       	add	r21, r21
   6:	aa 0b       	sbc	r26, r26
   8:	e0 e8       	ldi	r30, 0x80	; 128
   a:	fe ef       	ldi	r31, 0xFE	; 254
   c:	16 16       	cp	r1, r22
   e:	17 06       	cpc	r1, r23
  10:	e8 07       	cpc	r30, r24
  12:	f9 07       	cpc	r31, r25
  14:	00 f0       	brcs	.+0      	; 0x16 <fmin+0x16>
  16:	12 16       	cp	r1, r18
  18:	13 06       	cpc	r1, r19
  1a:	e4 07       	cpc	r30, r20
  1c:	f5 07       	cpc	r31, r21
  1e:	00 f0       	brcs	.+0      	; 0x20 <fmin+0x20>
  20:	ba 17       	cp	r27, r26
  22:	04 f0       	brlt	.+0      	; 0x24 <fmin+0x24>
  24:	01 f4       	brne	.+0      	; 0x26 <fmin+0x26>
  26:	26 17       	cp	r18, r22
  28:	37 07       	cpc	r19, r23
  2a:	48 07       	cpc	r20, r24
  2c:	59 07       	cpc	r21, r25
  2e:	a7 95       	ror	r26
  30:	03 f4       	brvc	.+0      	; 0x32 <fmin+0x32>
  32:	b9 01       	movw	r22, r18
  34:	ca 01       	movw	r24, r20
  36:	ba 2f       	mov	r27, r26
  38:	b6 95       	lsr	r27
  3a:	97 95       	ror	r25
  3c:	08 95       	ret

fmod.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <fmod-0x16>:
   0:	0e 94 00 00 	call	0	; 0x0 <fmod-0x16>
   4:	00 f0       	brcs	.+0      	; 0x6 <fmod-0x10>
   6:	01 f0       	breq	.+0      	; 0x8 <fmod-0xe>
   8:	0e 94 00 00 	call	0	; 0x0 <fmod-0x16>
   c:	00 f4       	brcc	.+0      	; 0xe <fmod-0x8>
   e:	0c 94 00 00 	jmp	0	; 0x0 <fmod-0x16>
  12:	0c 94 00 00 	jmp	0	; 0x0 <fmod-0x16>

00000016 <fmod>:
  16:	e9 2f       	mov	r30, r25
  18:	0e 94 00 00 	call	0	; 0x0 <fmod-0x16>
  1c:	00 f0       	brcs	.+0      	; 0x1e <fmod+0x8>
  1e:	55 23       	and	r21, r21
  20:	01 f0       	breq	.+0      	; 0x22 <fmod+0xc>
  22:	e7 fb       	bst	r30, 7
  24:	62 17       	cp	r22, r18
  26:	73 07       	cpc	r23, r19
  28:	84 07       	cpc	r24, r20
  2a:	95 07       	cpc	r25, r21
  2c:	00 f0       	brcs	.+0      	; 0x2e <fmod+0x18>
  2e:	01 f0       	breq	.+0      	; 0x30 <fmod+0x1a>
  30:	e9 2f       	mov	r30, r25
  32:	ff 27       	eor	r31, r31
  34:	88 23       	and	r24, r24
  36:	02 f0       	brmi	.+0      	; 0x38 <fmod+0x22>
  38:	31 97       	sbiw	r30, 0x01	; 1
  3a:	66 0f       	add	r22, r22
  3c:	77 1f       	adc	r23, r23
  3e:	88 1f       	adc	r24, r24
  40:	02 f4       	brpl	.+0      	; 0x42 <fmod+0x2c>
  42:	95 2f       	mov	r25, r21
  44:	55 27       	eor	r21, r21
  46:	44 23       	and	r20, r20
  48:	02 f0       	brmi	.+0      	; 0x4a <fmod+0x34>
  4a:	91 50       	subi	r25, 0x01	; 1
  4c:	50 40       	sbci	r21, 0x00	; 0
  4e:	22 0f       	add	r18, r18
  50:	33 1f       	adc	r19, r19
  52:	44 1f       	adc	r20, r20
  54:	02 f4       	brpl	.+0      	; 0x56 <fmod+0x40>
  56:	bb 27       	eor	r27, r27
  58:	e9 1b       	sub	r30, r25
  5a:	f5 0b       	sbc	r31, r21
  5c:	62 1b       	sub	r22, r18
  5e:	73 0b       	sbc	r23, r19
  60:	84 0b       	sbc	r24, r20
  62:	b1 09       	sbc	r27, r1
  64:	01 f0       	breq	.+0      	; 0x66 <fmod+0x50>
  66:	02 f4       	brpl	.+0      	; 0x68 <fmod+0x52>
  68:	62 0f       	add	r22, r18
  6a:	73 1f       	adc	r23, r19
  6c:	84 1f       	adc	r24, r20
  6e:	b1 1d       	adc	r27, r1
  70:	31 97       	sbiw	r30, 0x01	; 1
  72:	02 f0       	brmi	.+0      	; 0x74 <fmod+0x5e>
  74:	66 0f       	add	r22, r22
  76:	77 1f       	adc	r23, r23
  78:	88 1f       	adc	r24, r24
  7a:	bb 1f       	adc	r27, r27
  7c:	00 c0       	rjmp	.+0      	; 0x7e <fmod+0x68>
  7e:	91 50       	subi	r25, 0x01	; 1
  80:	50 40       	sbci	r21, 0x00	; 0
  82:	02 f0       	brmi	.+0      	; 0x84 <fmod+0x6e>
  84:	01 f0       	breq	.+0      	; 0x86 <fmod+0x70>
  86:	88 23       	and	r24, r24
  88:	02 f0       	brmi	.+0      	; 0x8a <fmod+0x74>
  8a:	66 0f       	add	r22, r22
  8c:	77 1f       	adc	r23, r23
  8e:	88 1f       	adc	r24, r24
  90:	91 50       	subi	r25, 0x01	; 1
  92:	50 40       	sbci	r21, 0x00	; 0
  94:	01 f4       	brne	.+0      	; 0x96 <fmod+0x80>
  96:	93 95       	inc	r25
  98:	0c 94 00 00 	jmp	0	; 0x0 <fmod-0x16>
  9c:	86 95       	lsr	r24
  9e:	77 95       	ror	r23
  a0:	67 95       	ror	r22
  a2:	9f 5f       	subi	r25, 0xFF	; 255
  a4:	01 f4       	brne	.+0      	; 0xa6 <fmod+0x90>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <fmod+0x92>

fp_arccos.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_arccos>:
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	1f 93       	push	r17
   6:	0f 93       	push	r16
   8:	8b 01       	movw	r16, r22
   a:	ec 01       	movw	r28, r24
   c:	e0 e0       	ldi	r30, 0x00	; 0
   e:	f0 e0       	ldi	r31, 0x00	; 0
  10:	0e 94 00 00 	call	0	; 0x0 <__fp_arccos>
  14:	0e 94 00 00 	call	0	; 0x0 <__fp_arccos>
  18:	98 01       	movw	r18, r16
  1a:	ae 01       	movw	r20, r28
  1c:	8b 01       	movw	r16, r22
  1e:	ec 01       	movw	r28, r24
  20:	60 e0       	ldi	r22, 0x00	; 0
  22:	70 e0       	ldi	r23, 0x00	; 0
  24:	80 e8       	ldi	r24, 0x80	; 128
  26:	9f e3       	ldi	r25, 0x3F	; 63
  28:	0e 94 00 00 	call	0	; 0x0 <__fp_arccos>
  2c:	0e 94 00 00 	call	0	; 0x0 <__fp_arccos>
  30:	98 01       	movw	r18, r16
  32:	ae 01       	movw	r20, r28
  34:	0f 91       	pop	r16
  36:	1f 91       	pop	r17
  38:	cf 91       	pop	r28
  3a:	df 91       	pop	r29
  3c:	0c 94 00 00 	jmp	0	; 0x0 <__fp_arccos>

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	07 2c       	mov	r0, r7
   2:	7a a5       	ldd	r23, Y+42	; 0x2a
   4:	ba 6c       	ori	r27, 0xCA	; 202
   6:	c5 90       	lpm	r12, Z+
   8:	da 3b       	cpi	r29, 0xBA	; 186
   a:	93 65       	ori	r25, 0x53	; 83
   c:	fc 8b       	std	Y+20, r31	; 0x14
   e:	bc 53       	subi	r27, 0x3C	; 60
  10:	f8 10       	cpse	r15, r8
  12:	fd 3c       	cpi	r31, 0xCD	; 205
  14:	56 92       	lac	Z, r5
  16:	83 4d       	sbci	r24, 0xD3	; 211
  18:	bd 87       	std	Y+13, r27	; 0x0d
  1a:	9d 3a       	cpi	r25, 0xAD	; 173
  1c:	b6 3d       	cpi	r27, 0xD6	; 214
  1e:	cb c9       	rjmp	.-3178   	; 0xfffff3b6 <__fp_arccos+0xfffff3b6>
  20:	bf 5b       	subi	r27, 0xBF	; 191
  22:	be 73       	andi	r27, 0x3E	; 62
  24:	da 0f       	add	r29, r26
  26:	c9 3f       	cpi	r28, 0xF9	; 249

fp_cmp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_cmp>:
   0:	99 0f       	add	r25, r25
   2:	00 08       	sbc	r0, r0
   4:	55 0f       	add	r21, r21
   6:	aa 0b       	sbc	r26, r26
   8:	e0 e8       	ldi	r30, 0x80	; 128
   a:	fe ef       	ldi	r31, 0xFE	; 254
   c:	16 16       	cp	r1, r22
   e:	17 06       	cpc	r1, r23
  10:	e8 07       	cpc	r30, r24
  12:	f9 07       	cpc	r31, r25
  14:	00 f0       	brcs	.+0      	; 0x16 <__fp_cmp+0x16>
  16:	12 16       	cp	r1, r18
  18:	13 06       	cpc	r1, r19
  1a:	e4 07       	cpc	r30, r20
  1c:	f5 07       	cpc	r31, r21
  1e:	00 f0       	brcs	.+0      	; 0x20 <__fp_cmp+0x20>
  20:	62 1b       	sub	r22, r18
  22:	73 0b       	sbc	r23, r19
  24:	84 0b       	sbc	r24, r20
  26:	95 0b       	sbc	r25, r21
  28:	01 f4       	brne	.+0      	; 0x2a <__fp_cmp+0x2a>
  2a:	0a 26       	eor	r0, r26
  2c:	01 f0       	breq	.+0      	; 0x2e <__fp_cmp+0x2e>
  2e:	23 2b       	or	r18, r19
  30:	24 2b       	or	r18, r20
  32:	25 2b       	or	r18, r21
  34:	01 f4       	brne	.+0      	; 0x36 <__fp_cmp+0x36>
  36:	08 95       	ret
  38:	0a 26       	eor	r0, r26
  3a:	01 f4       	brne	.+0      	; 0x3c <__fp_cmp+0x3c>
  3c:	a1 40       	sbci	r26, 0x01	; 1
  3e:	a6 95       	lsr	r26
  40:	8f ef       	ldi	r24, 0xFF	; 255
  42:	81 1d       	adc	r24, r1
  44:	81 1d       	adc	r24, r1
  46:	08 95       	ret

fp_inf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_inf>:
   0:	97 f9       	bld	r25, 7
   2:	9f 67       	ori	r25, 0x7F	; 127
   4:	80 e8       	ldi	r24, 0x80	; 128
   6:	70 e0       	ldi	r23, 0x00	; 0
   8:	60 e0       	ldi	r22, 0x00	; 0
   a:	08 95       	ret

fp_mintl.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_mintl>:
   0:	88 23       	and	r24, r24
   2:	01 f4       	brne	.+0      	; 0x4 <__fp_mintl+0x4>
   4:	77 23       	and	r23, r23
   6:	01 f0       	breq	.+0      	; 0x8 <__fp_mintl+0x8>
   8:	98 50       	subi	r25, 0x08	; 8
   a:	87 2b       	or	r24, r23
   c:	76 2f       	mov	r23, r22
   e:	00 c0       	rjmp	.+0      	; 0x10 <__fp_mintl+0x10>
  10:	66 23       	and	r22, r22
  12:	01 f4       	brne	.+0      	; 0x14 <__fp_mintl+0x14>
  14:	99 27       	eor	r25, r25
  16:	00 c0       	rjmp	.+0      	; 0x18 <__fp_mintl+0x18>
  18:	90 51       	subi	r25, 0x10	; 16
  1a:	86 2b       	or	r24, r22
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	60 e0       	ldi	r22, 0x00	; 0
  20:	02 f0       	brmi	.+0      	; 0x22 <__fp_mintl+0x22>
  22:	9a 95       	dec	r25
  24:	66 0f       	add	r22, r22
  26:	77 1f       	adc	r23, r23
  28:	88 1f       	adc	r24, r24
  2a:	02 f4       	brpl	.+0      	; 0x2c <__fp_mintl+0x2c>
  2c:	88 0f       	add	r24, r24
  2e:	96 95       	lsr	r25
  30:	87 95       	ror	r24
  32:	97 f9       	bld	r25, 7
  34:	08 95       	ret

fp_mpack.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_mpack>:
   0:	9f 3f       	cpi	r25, 0xFF	; 255
   2:	01 f0       	breq	.+0      	; 0x4 <__fp_mpack_finite>

00000004 <__fp_mpack_finite>:
   4:	91 50       	subi	r25, 0x01	; 1
   6:	00 f4       	brcc	.+0      	; 0x8 <__fp_mpack_finite+0x4>
   8:	87 95       	ror	r24
   a:	77 95       	ror	r23
   c:	67 95       	ror	r22
   e:	b7 95       	ror	r27
  10:	88 0f       	add	r24, r24
  12:	91 1d       	adc	r25, r1
  14:	96 95       	lsr	r25
  16:	87 95       	ror	r24
  18:	97 f9       	bld	r25, 7
  1a:	08 95       	ret

fp_nan.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_nan>:
   0:	9f ef       	ldi	r25, 0xFF	; 255
   2:	80 ec       	ldi	r24, 0xC0	; 192
   4:	08 95       	ret

fp_negdi.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_negdi>:
   0:	90 95       	com	r25
   2:	80 95       	com	r24
   4:	70 95       	com	r23
   6:	60 95       	com	r22
   8:	50 95       	com	r21
   a:	40 95       	com	r20
   c:	30 95       	com	r19
   e:	21 95       	neg	r18
  10:	3f 4f       	sbci	r19, 0xFF	; 255
  12:	4f 4f       	sbci	r20, 0xFF	; 255
  14:	5f 4f       	sbci	r21, 0xFF	; 255
  16:	6f 4f       	sbci	r22, 0xFF	; 255
  18:	7f 4f       	sbci	r23, 0xFF	; 255
  1a:	8f 4f       	sbci	r24, 0xFF	; 255
  1c:	9f 4f       	sbci	r25, 0xFF	; 255
  1e:	08 95       	ret

fp_norm2.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_norm2>:
   0:	91 50       	subi	r25, 0x01	; 1
   2:	50 40       	sbci	r21, 0x00	; 0
   4:	66 0f       	add	r22, r22
   6:	77 1f       	adc	r23, r23
   8:	88 1f       	adc	r24, r24
   a:	02 f4       	brpl	.+0      	; 0xc <__fp_norm2+0xc>
   c:	08 95       	ret

fp_powser.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_powser>:
   0:	df 93       	push	r29
   2:	cf 93       	push	r28
   4:	1f 93       	push	r17
   6:	0f 93       	push	r16
   8:	ff 92       	push	r15
   a:	ef 92       	push	r14
   c:	df 92       	push	r13
   e:	7b 01       	movw	r14, r22
  10:	8c 01       	movw	r16, r24
  12:	68 94       	set
  14:	00 c0       	rjmp	.+0      	; 0x16 <__fp_powser+0x16>
  16:	da 2e       	mov	r13, r26
  18:	ef 01       	movw	r28, r30
  1a:	0e 94 00 00 	call	0	; 0x0 <__fp_powser>
  1e:	fe 01       	movw	r30, r28
  20:	e8 94       	clt
  22:	a5 91       	lpm	r26, Z+
  24:	25 91       	lpm	r18, Z+
  26:	35 91       	lpm	r19, Z+
  28:	45 91       	lpm	r20, Z+
  2a:	55 91       	lpm	r21, Z+
  2c:	06 f0       	brts	.+0      	; 0x2e <__fp_powser+0x2e>
  2e:	ef 01       	movw	r28, r30
  30:	0e 94 00 00 	call	0	; 0x0 <__fp_powser>
  34:	fe 01       	movw	r30, r28
  36:	97 01       	movw	r18, r14
  38:	a8 01       	movw	r20, r16
  3a:	da 94       	dec	r13
  3c:	01 f4       	brne	.+0      	; 0x3e <__fp_powser+0x3e>
  3e:	df 90       	pop	r13
  40:	ef 90       	pop	r14
  42:	ff 90       	pop	r15
  44:	0f 91       	pop	r16
  46:	1f 91       	pop	r17
  48:	cf 91       	pop	r28
  4a:	df 91       	pop	r29
  4c:	08 95       	ret

fp_powsodd.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_powsodd>:
   0:	9f 93       	push	r25
   2:	8f 93       	push	r24
   4:	7f 93       	push	r23
   6:	6f 93       	push	r22
   8:	ff 93       	push	r31
   a:	ef 93       	push	r30
   c:	9b 01       	movw	r18, r22
   e:	ac 01       	movw	r20, r24
  10:	0e 94 00 00 	call	0	; 0x0 <__fp_powsodd>
  14:	ef 91       	pop	r30
  16:	ff 91       	pop	r31
  18:	0e 94 00 00 	call	0	; 0x0 <__fp_powsodd>
  1c:	2f 91       	pop	r18
  1e:	3f 91       	pop	r19
  20:	4f 91       	pop	r20
  22:	5f 91       	pop	r21
  24:	0c 94 00 00 	jmp	0	; 0x0 <__fp_powsodd>

fp_pscA.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_pscA>:
   0:	00 24       	eor	r0, r0
   2:	0a 94       	dec	r0
   4:	16 16       	cp	r1, r22
   6:	17 06       	cpc	r1, r23
   8:	18 06       	cpc	r1, r24
   a:	09 06       	cpc	r0, r25
   c:	08 95       	ret

fp_pscB.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_pscB>:
   0:	00 24       	eor	r0, r0
   2:	0a 94       	dec	r0
   4:	12 16       	cp	r1, r18
   6:	13 06       	cpc	r1, r19
   8:	14 06       	cpc	r1, r20
   a:	05 06       	cpc	r0, r21
   c:	08 95       	ret

fp_rempio2.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_rempio2-0x4>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <__fp_rempio2-0x4>

00000004 <__fp_rempio2>:
   4:	0e 94 00 00 	call	0	; 0x0 <__fp_rempio2-0x4>
   8:	00 f0       	brcs	.+0      	; 0xa <__fp_rempio2+0x6>
   a:	e8 94       	clt
   c:	e0 e0       	ldi	r30, 0x00	; 0
   e:	bb 27       	eor	r27, r27
  10:	9f 57       	subi	r25, 0x7F	; 127
  12:	00 f0       	brcs	.+0      	; 0x14 <__fp_rempio2+0x10>
  14:	2a ed       	ldi	r18, 0xDA	; 218
  16:	3f e0       	ldi	r19, 0x0F	; 15
  18:	49 ec       	ldi	r20, 0xC9	; 201
  1a:	00 c0       	rjmp	.+0      	; 0x1c <__fp_rempio2+0x18>
  1c:	ee 0f       	add	r30, r30
  1e:	bb 0f       	add	r27, r27
  20:	66 1f       	adc	r22, r22
  22:	77 1f       	adc	r23, r23
  24:	88 1f       	adc	r24, r24
  26:	00 f0       	brcs	.+0      	; 0x28 <__fp_rempio2+0x24>
  28:	b2 3a       	cpi	r27, 0xA2	; 162
  2a:	62 07       	cpc	r22, r18
  2c:	73 07       	cpc	r23, r19
  2e:	84 07       	cpc	r24, r20
  30:	00 f0       	brcs	.+0      	; 0x32 <__fp_rempio2+0x2e>
  32:	b2 5a       	subi	r27, 0xA2	; 162
  34:	62 0b       	sbc	r22, r18
  36:	73 0b       	sbc	r23, r19
  38:	84 0b       	sbc	r24, r20
  3a:	e3 95       	inc	r30
  3c:	9a 95       	dec	r25
  3e:	02 f4       	brpl	.+0      	; 0x40 <__fp_rempio2+0x3c>
  40:	80 38       	cpi	r24, 0x80	; 128
  42:	00 f4       	brcc	.+0      	; 0x44 <__fp_rempio2+0x40>
  44:	9a 95       	dec	r25
  46:	bb 0f       	add	r27, r27
  48:	66 1f       	adc	r22, r22
  4a:	77 1f       	adc	r23, r23
  4c:	88 1f       	adc	r24, r24
  4e:	02 f4       	brpl	.+0      	; 0x50 <__fp_rempio2+0x4c>
  50:	90 48       	sbci	r25, 0x80	; 128
  52:	0c 94 00 00 	jmp	0	; 0x0 <__fp_rempio2-0x4>

fp_round.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_round>:
   0:	09 2e       	mov	r0, r25
   2:	03 94       	inc	r0
   4:	00 0c       	add	r0, r0
   6:	01 f4       	brne	.+0      	; 0x8 <__fp_round+0x8>
   8:	88 23       	and	r24, r24
   a:	02 f0       	brmi	.+0      	; 0xc <__fp_round+0xc>
   c:	bb 0f       	add	r27, r27
   e:	00 f4       	brcc	.+0      	; 0x10 <__fp_round+0x10>
  10:	bf 2b       	or	r27, r31
  12:	01 f4       	brne	.+0      	; 0x14 <__fp_round+0x14>
  14:	60 ff       	sbrs	r22, 0
  16:	00 c0       	rjmp	.+0      	; 0x18 <__fp_round+0x18>
  18:	6f 5f       	subi	r22, 0xFF	; 255
  1a:	7f 4f       	sbci	r23, 0xFF	; 255
  1c:	8f 4f       	sbci	r24, 0xFF	; 255
  1e:	9f 4f       	sbci	r25, 0xFF	; 255
  20:	08 95       	ret

fp_sinus.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_sinus>:
   0:	ef 93       	push	r30
   2:	e0 ff       	sbrs	r30, 0
   4:	00 c0       	rjmp	.+0      	; 0x6 <__fp_sinus+0x6>
   6:	a2 ea       	ldi	r26, 0xA2	; 162
   8:	2a ed       	ldi	r18, 0xDA	; 218
   a:	3f e0       	ldi	r19, 0x0F	; 15
   c:	49 ec       	ldi	r20, 0xC9	; 201
   e:	5f eb       	ldi	r21, 0xBF	; 191
  10:	0e 94 00 00 	call	0	; 0x0 <__fp_sinus>
  14:	0e 94 00 00 	call	0	; 0x0 <__fp_sinus>
  18:	0f 90       	pop	r0
  1a:	03 94       	inc	r0
  1c:	01 fc       	sbrc	r0, 1
  1e:	90 58       	subi	r25, 0x80	; 128
  20:	e0 e0       	ldi	r30, 0x00	; 0
  22:	f0 e0       	ldi	r31, 0x00	; 0
  24:	0c 94 00 00 	jmp	0	; 0x0 <__fp_sinus>

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	05 a8       	ldd	r0, Z+53	; 0x35
   2:	4c cd       	rjmp	.-1384   	; 0xfffffa9c <__fp_sinus+0xfffffa9c>
   4:	b2 d4       	rcall	.+2404   	; 0x96a <__fp_sinus+0x96a>
   6:	4e b9       	out	0x0e, r20	; 14
   8:	38 36       	cpi	r19, 0x68	; 104
   a:	a9 02       	muls	r26, r25
   c:	0c 50       	subi	r16, 0x0C	; 12
   e:	b9 91       	ld	r27, Y+
  10:	86 88       	ldd	r8, Z+22	; 0x16
  12:	08 3c       	cpi	r16, 0xC8	; 200
  14:	a6 aa       	std	Z+54, r10	; 0x36
  16:	aa 2a       	or	r10, r26
  18:	be 00       	.word	0x00be	; ????
  1a:	00 00       	nop
  1c:	80 3f       	cpi	r24, 0xF0	; 240

fp_split3.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_split3>:
   0:	57 fd       	sbrc	r21, 7
   2:	90 58       	subi	r25, 0x80	; 128
   4:	44 0f       	add	r20, r20
   6:	55 1f       	adc	r21, r21
   8:	01 f0       	breq	.+0      	; 0xa <__fp_split3+0xa>
   a:	5f 3f       	cpi	r21, 0xFF	; 255
   c:	01 f0       	breq	.+0      	; 0xe <__fp_split3+0xe>
   e:	47 95       	ror	r20

00000010 <__fp_splitA>:
  10:	88 0f       	add	r24, r24
  12:	97 fb       	bst	r25, 7
  14:	99 1f       	adc	r25, r25
  16:	01 f0       	breq	.+0      	; 0x18 <__fp_splitA+0x8>
  18:	9f 3f       	cpi	r25, 0xFF	; 255
  1a:	01 f0       	breq	.+0      	; 0x1c <__fp_splitA+0xc>
  1c:	87 95       	ror	r24
  1e:	08 95       	ret
  20:	12 16       	cp	r1, r18
  22:	13 06       	cpc	r1, r19
  24:	14 06       	cpc	r1, r20
  26:	55 1f       	adc	r21, r21
  28:	00 c0       	rjmp	.+0      	; 0x2a <__fp_splitA+0x1a>
  2a:	46 95       	lsr	r20
  2c:	00 d0       	rcall	.+0      	; 0x2e <__fp_splitA+0x1e>
  2e:	00 c0       	rjmp	.+0      	; 0x30 <__fp_splitA+0x20>
  30:	16 16       	cp	r1, r22
  32:	17 06       	cpc	r1, r23
  34:	18 06       	cpc	r1, r24
  36:	99 1f       	adc	r25, r25
  38:	00 c0       	rjmp	.+0      	; 0x3a <__fp_splitA+0x2a>
  3a:	86 95       	lsr	r24
  3c:	71 05       	cpc	r23, r1
  3e:	61 05       	cpc	r22, r1
  40:	08 94       	sec
  42:	08 95       	ret

fp_trunc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_trunc>:
   0:	0e 94 00 00 	call	0	; 0x0 <__fp_trunc>
   4:	00 f0       	brcs	.+0      	; 0x6 <__fp_trunc+0x6>
   6:	be e7       	ldi	r27, 0x7E	; 126
   8:	b9 17       	cp	r27, r25
   a:	00 f4       	brcc	.+0      	; 0xc <__fp_trunc+0xc>
   c:	bb 27       	eor	r27, r27
   e:	9f 38       	cpi	r25, 0x8F	; 143
  10:	00 f4       	brcc	.+0      	; 0x12 <__fp_trunc+0x12>
  12:	16 16       	cp	r1, r22
  14:	b1 1d       	adc	r27, r1
  16:	67 2f       	mov	r22, r23
  18:	78 2f       	mov	r23, r24
  1a:	88 27       	eor	r24, r24
  1c:	98 5f       	subi	r25, 0xF8	; 248
  1e:	00 c0       	rjmp	.+0      	; 0x20 <__fp_trunc+0x20>
  20:	86 95       	lsr	r24
  22:	77 95       	ror	r23
  24:	67 95       	ror	r22
  26:	b1 1d       	adc	r27, r1
  28:	93 95       	inc	r25
  2a:	96 39       	cpi	r25, 0x96	; 150
  2c:	00 f0       	brcs	.+0      	; 0x2e <__fp_trunc+0x2e>
  2e:	08 95       	ret

fp_zero.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__fp_zero>:
   0:	e8 94       	clt

00000002 <__fp_szero>:
   2:	bb 27       	eor	r27, r27
   4:	66 27       	eor	r22, r22
   6:	77 27       	eor	r23, r23
   8:	cb 01       	movw	r24, r22
   a:	97 f9       	bld	r25, 7
   c:	08 95       	ret

frexp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <frexp>:
   0:	fa 01       	movw	r30, r20
   2:	10 82       	st	Z, r1
   4:	11 82       	std	Z+1, r1	; 0x01
   6:	0e 94 00 00 	call	0	; 0x0 <frexp>
   a:	00 f0       	brcs	.+0      	; 0xc <frexp+0xc>
   c:	99 23       	and	r25, r25
   e:	01 f0       	breq	.+0      	; 0x10 <frexp+0x10>
  10:	9e 57       	subi	r25, 0x7E	; 126
  12:	55 0b       	sbc	r21, r21
  14:	87 ff       	sbrs	r24, 7
  16:	0e 94 00 00 	call	0	; 0x0 <frexp>
  1a:	90 83       	st	Z, r25
  1c:	51 83       	std	Z+1, r21	; 0x01
  1e:	11 24       	eor	r1, r1
  20:	8f 77       	andi	r24, 0x7F	; 127
  22:	9f e3       	ldi	r25, 0x3F	; 63
  24:	97 f9       	bld	r25, 7
  26:	08 95       	ret
  28:	0c 94 00 00 	jmp	0	; 0x0 <frexp>

gesf2.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__gesf2>:
   0:	0e 94 00 00 	call	0	; 0x0 <__gesf2>
   4:	00 f4       	brcc	.+0      	; 0x6 <__gesf2+0x6>
   6:	8f ef       	ldi	r24, 0xFF	; 255
   8:	08 95       	ret

hypot.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <hypot-0x1c>:
   0:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
   4:	01 f0       	breq	.+0      	; 0x6 <hypot-0x16>
   6:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
   a:	01 f0       	breq	.+0      	; 0xc <hypot-0x10>
   c:	0c 94 00 00 	jmp	0	; 0x0 <hypot-0x1c>
  10:	0c 94 00 00 	jmp	0	; 0x0 <hypot-0x1c>
  14:	b9 01       	movw	r22, r18
  16:	ca 01       	movw	r24, r20
  18:	0c 94 00 00 	jmp	0	; 0x0 <hypot-0x1c>

0000001c <hypot>:
  1c:	9f 77       	andi	r25, 0x7F	; 127
  1e:	5f 77       	andi	r21, 0x7F	; 127
  20:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
  24:	00 f0       	brcs	.+0      	; 0x26 <hypot+0xa>
  26:	99 23       	and	r25, r25
  28:	01 f0       	breq	.+0      	; 0x2a <hypot+0xe>
  2a:	55 23       	and	r21, r21
  2c:	01 f0       	breq	.+0      	; 0x2e <hypot+0x12>
  2e:	ff 27       	eor	r31, r31
  30:	95 17       	cp	r25, r21
  32:	00 f4       	brcc	.+0      	; 0x34 <hypot+0x18>
  34:	e5 2f       	mov	r30, r21
  36:	e9 1b       	sub	r30, r25
  38:	ed 30       	cpi	r30, 0x0D	; 13
  3a:	00 f4       	brcc	.+0      	; 0x3c <hypot+0x20>
  3c:	5e 3b       	cpi	r21, 0xBE	; 190
  3e:	00 f0       	brcs	.+0      	; 0x40 <hypot+0x24>
  40:	f1 e4       	ldi	r31, 0x41	; 65
  42:	00 c0       	rjmp	.+0      	; 0x44 <hypot+0x28>
  44:	90 34       	cpi	r25, 0x40	; 64
  46:	00 f4       	brcc	.+0      	; 0x48 <hypot+0x2c>
  48:	00 c0       	rjmp	.+0      	; 0x4a <hypot+0x2e>
  4a:	e9 2f       	mov	r30, r25
  4c:	e5 1b       	sub	r30, r21
  4e:	ed 30       	cpi	r30, 0x0D	; 13
  50:	00 f4       	brcc	.+0      	; 0x52 <hypot+0x36>
  52:	9e 3b       	cpi	r25, 0xBE	; 190
  54:	00 f0       	brcs	.+0      	; 0x56 <hypot+0x3a>
  56:	f1 e4       	ldi	r31, 0x41	; 65
  58:	00 c0       	rjmp	.+0      	; 0x5a <hypot+0x3e>
  5a:	50 34       	cpi	r21, 0x40	; 64
  5c:	00 f4       	brcc	.+0      	; 0x5e <hypot+0x42>
  5e:	f9 ea       	ldi	r31, 0xA9	; 169
  60:	88 23       	and	r24, r24
  62:	02 f0       	brmi	.+0      	; 0x64 <hypot+0x48>
  64:	9a 95       	dec	r25
  66:	66 0f       	add	r22, r22
  68:	77 1f       	adc	r23, r23
  6a:	88 1f       	adc	r24, r24
  6c:	02 f4       	brpl	.+0      	; 0x6e <hypot+0x52>
  6e:	44 23       	and	r20, r20
  70:	02 f0       	brmi	.+0      	; 0x72 <hypot+0x56>
  72:	5a 95       	dec	r21
  74:	22 0f       	add	r18, r18
  76:	33 1f       	adc	r19, r19
  78:	44 1f       	adc	r20, r20
  7a:	02 f4       	brpl	.+0      	; 0x7c <hypot+0x60>
  7c:	9f 1b       	sub	r25, r31
  7e:	5f 1b       	sub	r21, r31
  80:	ff 93       	push	r31
  82:	1f 93       	push	r17
  84:	0f 93       	push	r16
  86:	ff 92       	push	r15
  88:	ef 92       	push	r14
  8a:	79 01       	movw	r14, r18
  8c:	8a 01       	movw	r16, r20
  8e:	bb 27       	eor	r27, r27
  90:	ab 2f       	mov	r26, r27
  92:	9b 01       	movw	r18, r22
  94:	ac 01       	movw	r20, r24
  96:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
  9a:	97 01       	movw	r18, r14
  9c:	a8 01       	movw	r20, r16
  9e:	bf 93       	push	r27
  a0:	7b 01       	movw	r14, r22
  a2:	8c 01       	movw	r16, r24
  a4:	aa 27       	eor	r26, r26
  a6:	ba 2f       	mov	r27, r26
  a8:	b9 01       	movw	r22, r18
  aa:	ca 01       	movw	r24, r20
  ac:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
  b0:	af 91       	pop	r26
  b2:	97 01       	movw	r18, r14
  b4:	a8 01       	movw	r20, r16
  b6:	ef 90       	pop	r14
  b8:	ff 90       	pop	r15
  ba:	0f 91       	pop	r16
  bc:	1f 91       	pop	r17
  be:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
  c2:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
  c6:	0e 94 00 00 	call	0	; 0x0 <hypot-0x1c>
  ca:	4f 91       	pop	r20
  cc:	40 ff       	sbrs	r20, 0
  ce:	08 95       	ret
  d0:	55 27       	eor	r21, r21
  d2:	47 fd       	sbrc	r20, 7
  d4:	50 95       	com	r21
  d6:	0c 94 00 00 	jmp	0	; 0x0 <hypot-0x1c>

inverse.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <inverse>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	60 e0       	ldi	r22, 0x00	; 0
   6:	70 e0       	ldi	r23, 0x00	; 0
   8:	80 e8       	ldi	r24, 0x80	; 128
   a:	9f e3       	ldi	r25, 0x3F	; 63
   c:	0c 94 00 00 	jmp	0	; 0x0 <inverse>

isfinite.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <isfinite>:
   0:	88 0f       	add	r24, r24
   2:	99 1f       	adc	r25, r25
   4:	9f 5f       	subi	r25, 0xFF	; 255
   6:	88 0b       	sbc	r24, r24
   8:	08 95       	ret

isinf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <isinf>:
   0:	0e 94 00 00 	call	0	; 0x0 <isinf>
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	00 f4       	brcc	.+0      	; 0xa <isinf+0xa>
   a:	01 f4       	brne	.+0      	; 0xc <isinf+0xc>
   c:	06 f4       	brtc	.+0      	; 0xe <isinf+0xe>
   e:	02 97       	sbiw	r24, 0x02	; 2
  10:	83 95       	inc	r24
  12:	08 95       	ret

isnan.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <isnan>:
   0:	0e 94 00 00 	call	0	; 0x0 <isnan>
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	01 f0       	breq	.+0      	; 0xa <isnan+0xa>
   a:	88 1f       	adc	r24, r24
   c:	08 95       	ret

ldexp.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <ldexp-0x8>:
   0:	0c 94 00 00 	jmp	0	; 0x0 <ldexp-0x8>
   4:	0c 94 00 00 	jmp	0	; 0x0 <ldexp-0x8>

00000008 <ldexp>:
   8:	0e 94 00 00 	call	0	; 0x0 <ldexp-0x8>
   c:	00 f0       	brcs	.+0      	; 0xe <ldexp+0x6>
   e:	99 23       	and	r25, r25
  10:	01 f0       	breq	.+0      	; 0x12 <ldexp+0xa>
  12:	94 0f       	add	r25, r20
  14:	51 1d       	adc	r21, r1
  16:	03 f0       	brvs	.+0      	; 0x18 <ldexp+0x10>
  18:	91 50       	subi	r25, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	04 f0       	brlt	.+0      	; 0x1e <ldexp+0x16>
  1e:	01 f0       	breq	.+0      	; 0x20 <ldexp+0x18>
  20:	88 23       	and	r24, r24
  22:	02 f0       	brmi	.+0      	; 0x24 <ldexp+0x1c>
  24:	66 0f       	add	r22, r22
  26:	77 1f       	adc	r23, r23
  28:	88 1f       	adc	r24, r24
  2a:	91 50       	subi	r25, 0x01	; 1
  2c:	50 40       	sbci	r21, 0x00	; 0
  2e:	01 f4       	brne	.+0      	; 0x30 <ldexp+0x28>
  30:	9e 3f       	cpi	r25, 0xFE	; 254
  32:	51 05       	cpc	r21, r1
  34:	04 f4       	brge	.+0      	; 0x36 <ldexp+0x2e>
  36:	88 0f       	add	r24, r24
  38:	91 1d       	adc	r25, r1
  3a:	96 95       	lsr	r25
  3c:	87 95       	ror	r24
  3e:	97 f9       	bld	r25, 7
  40:	08 95       	ret
  42:	5f 3f       	cpi	r21, 0xFF	; 255
  44:	04 f0       	brlt	.+0      	; 0x46 <ldexp+0x3e>
  46:	98 3e       	cpi	r25, 0xE8	; 232
  48:	04 f0       	brlt	.+0      	; 0x4a <ldexp+0x42>
  4a:	bb 27       	eor	r27, r27
  4c:	86 95       	lsr	r24
  4e:	77 95       	ror	r23
  50:	67 95       	ror	r22
  52:	b7 95       	ror	r27
  54:	00 f4       	brcc	.+0      	; 0x56 <ldexp+0x4e>
  56:	b1 60       	ori	r27, 0x01	; 1
  58:	93 95       	inc	r25
  5a:	01 f4       	brne	.+0      	; 0x5c <ldexp+0x54>
  5c:	bb 0f       	add	r27, r27
  5e:	00 f4       	brcc	.+0      	; 0x60 <ldexp+0x58>
  60:	01 f4       	brne	.+0      	; 0x62 <ldexp+0x5a>
  62:	60 ff       	sbrs	r22, 0
  64:	00 c0       	rjmp	.+0      	; 0x66 <ldexp+0x5e>
  66:	6f 5f       	subi	r22, 0xFF	; 255
  68:	7f 4f       	sbci	r23, 0xFF	; 255
  6a:	8f 4f       	sbci	r24, 0xFF	; 255
  6c:	9f 4f       	sbci	r25, 0xFF	; 255
  6e:	00 c0       	rjmp	.+0      	; 0x70 <ldexp+0x68>
  70:	0c 94 00 00 	jmp	0	; 0x0 <ldexp-0x8>

log10.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <log10>:
   0:	0e 94 00 00 	call	0	; 0x0 <log10>
   4:	29 ed       	ldi	r18, 0xD9	; 217
   6:	3b e5       	ldi	r19, 0x5B	; 91
   8:	4e ed       	ldi	r20, 0xDE	; 222
   a:	5e e3       	ldi	r21, 0x3E	; 62
   c:	0c 94 00 00 	jmp	0	; 0x0 <log10>

log.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <log-0x10>:
   0:	06 f0       	brts	.+0      	; 0x2 <log-0xe>
   2:	0c 94 00 00 	jmp	0	; 0x0 <log-0x10>
   6:	0c 94 00 00 	jmp	0	; 0x0 <log-0x10>
   a:	68 94       	set
   c:	0c 94 00 00 	jmp	0	; 0x0 <log-0x10>

00000010 <log>:
  10:	0e 94 00 00 	call	0	; 0x0 <log-0x10>
  14:	00 f0       	brcs	.+0      	; 0x16 <log+0x6>
  16:	99 23       	and	r25, r25
  18:	01 f0       	breq	.+0      	; 0x1a <log+0xa>
  1a:	06 f0       	brts	.+0      	; 0x1c <log+0xc>
  1c:	df 93       	push	r29
  1e:	cf 93       	push	r28
  20:	1f 93       	push	r17
  22:	0f 93       	push	r16
  24:	ff 92       	push	r15
  26:	c9 2f       	mov	r28, r25
  28:	dd 27       	eor	r29, r29
  2a:	88 23       	and	r24, r24
  2c:	02 f0       	brmi	.+0      	; 0x2e <log+0x1e>
  2e:	21 97       	sbiw	r28, 0x01	; 1
  30:	66 0f       	add	r22, r22
  32:	77 1f       	adc	r23, r23
  34:	88 1f       	adc	r24, r24
  36:	02 f4       	brpl	.+0      	; 0x38 <log+0x28>
  38:	20 e0       	ldi	r18, 0x00	; 0
  3a:	30 e0       	ldi	r19, 0x00	; 0
  3c:	40 e8       	ldi	r20, 0x80	; 128
  3e:	5f eb       	ldi	r21, 0xBF	; 191
  40:	9f e3       	ldi	r25, 0x3F	; 63
  42:	88 39       	cpi	r24, 0x98	; 152
  44:	00 f0       	brcs	.+0      	; 0x46 <log+0x36>
  46:	80 3e       	cpi	r24, 0xE0	; 224
  48:	00 f0       	brcs	.+0      	; 0x4a <log+0x3a>
  4a:	21 96       	adiw	r28, 0x01	; 1
  4c:	8f 77       	andi	r24, 0x7F	; 127
  4e:	0e 94 00 00 	call	0	; 0x0 <log-0x10>
  52:	e0 e0       	ldi	r30, 0x00	; 0
  54:	f0 e0       	ldi	r31, 0x00	; 0
  56:	00 c0       	rjmp	.+0      	; 0x58 <log+0x48>
  58:	0e 94 00 00 	call	0	; 0x0 <log-0x10>
  5c:	e0 e0       	ldi	r30, 0x00	; 0
  5e:	f0 e0       	ldi	r31, 0x00	; 0
  60:	0e 94 00 00 	call	0	; 0x0 <log-0x10>
  64:	8b 01       	movw	r16, r22
  66:	be 01       	movw	r22, r28
  68:	ec 01       	movw	r28, r24
  6a:	fb 2e       	mov	r15, r27
  6c:	6f 57       	subi	r22, 0x7F	; 127
  6e:	71 09       	sbc	r23, r1
  70:	75 95       	asr	r23
  72:	77 1f       	adc	r23, r23
  74:	88 0b       	sbc	r24, r24
  76:	99 0b       	sbc	r25, r25
  78:	0e 94 00 00 	call	0	; 0x0 <log-0x10>
  7c:	28 e1       	ldi	r18, 0x18	; 24
  7e:	32 e7       	ldi	r19, 0x72	; 114
  80:	41 e3       	ldi	r20, 0x31	; 49
  82:	5f e3       	ldi	r21, 0x3F	; 63
  84:	0e 94 00 00 	call	0	; 0x0 <log-0x10>
  88:	af 2d       	mov	r26, r15
  8a:	98 01       	movw	r18, r16
  8c:	ae 01       	movw	r20, r28
  8e:	ff 90       	pop	r15
  90:	0f 91       	pop	r16
  92:	1f 91       	pop	r17
  94:	cf 91       	pop	r28
  96:	df 91       	pop	r29
  98:	0e 94 00 00 	call	0	; 0x0 <log-0x10>
  9c:	0c 94 00 00 	jmp	0	; 0x0 <log-0x10>

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	08 00       	.word	0x0008	; ????
   2:	00 00       	nop
   4:	be 92       	st	-X, r11
   6:	24 49       	sbci	r18, 0x94	; 148
   8:	12 3e       	cpi	r17, 0xE2	; 226
   a:	ab aa       	std	Y+51, r10	; 0x33
   c:	aa 2a       	or	r10, r26
   e:	be cd       	rjmp	.-1156   	; 0xfffffb8c <log+0xfffffb7c>
  10:	cc cc       	rjmp	.-1640   	; 0xfffff9aa <log+0xfffff99a>
  12:	4c 3e       	cpi	r20, 0xEC	; 236
  14:	00 00       	nop
  16:	00 80       	ld	r0, Z
  18:	be ab       	std	Y+54, r27	; 0x36
  1a:	aa aa       	std	Y+50, r10	; 0x32
  1c:	aa 3e       	cpi	r26, 0xEA	; 234
  1e:	00 00       	nop
  20:	00 00       	nop
  22:	bf 00       	.word	0x00bf	; ????
  24:	00 00       	nop
  26:	80 3f       	cpi	r24, 0xF0	; 240
  28:	00 00       	nop
  2a:	00 00       	nop
  2c:	00 08       	sbc	r0, r0
  2e:	41 78       	andi	r20, 0x81	; 129
  30:	d3 bb       	out	0x13, r29	; 19
  32:	43 87       	std	Z+11, r20	; 0x0b
  34:	d1 13       	cpse	r29, r17
  36:	3d 19       	sub	r19, r13
  38:	0e 3c       	cpi	r16, 0xCE	; 206
  3a:	c3 bd       	out	0x23, r28	; 35
  3c:	42 82       	std	Z+2, r4	; 0x02
  3e:	ad 2b       	or	r26, r29
  40:	3e 68       	ori	r19, 0x8E	; 142
  42:	ec 82       	std	Y+4, r14	; 0x04
  44:	76 be       	out	0x36, r7	; 54
  46:	d9 8f       	std	Y+25, r29	; 0x19
  48:	e1 a9       	ldd	r30, Z+49	; 0x31
  4a:	3e 4c       	sbci	r19, 0xCE	; 206
  4c:	80 ef       	ldi	r24, 0xF0	; 240
  4e:	ff be       	out	0x3f, r15	; 63
  50:	01 c4       	rjmp	.+2050   	; 0x854 <log+0x844>
  52:	ff 7f       	andi	r31, 0xFF	; 255
  54:	3f 00       	.word	0x003f	; ????
  56:	00 00       	nop
	...

lrint.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <lrint>:
   0:	0e 94 00 00 	call	0	; 0x0 <lrint>
   4:	00 f0       	brcs	.+0      	; 0x6 <lrint+0x6>
   6:	9e 57       	subi	r25, 0x7E	; 126
   8:	00 f0       	brcs	.+0      	; 0xa <lrint+0xa>
   a:	98 51       	subi	r25, 0x18	; 24
   c:	00 f0       	brcs	.+0      	; 0xe <lrint+0xe>
   e:	01 f0       	breq	.+0      	; 0x10 <lrint+0x10>
  10:	98 30       	cpi	r25, 0x08	; 8
  12:	00 f4       	brcc	.+0      	; 0x14 <lrint+0x14>
  14:	09 2e       	mov	r0, r25
  16:	99 27       	eor	r25, r25
  18:	66 0f       	add	r22, r22
  1a:	77 1f       	adc	r23, r23
  1c:	88 1f       	adc	r24, r24
  1e:	99 1f       	adc	r25, r25
  20:	0a 94       	dec	r0
  22:	01 f4       	brne	.+0      	; 0x24 <lrint+0x24>
  24:	00 c0       	rjmp	.+0      	; 0x26 <lrint+0x26>
  26:	bb 27       	eor	r27, r27
  28:	99 3f       	cpi	r25, 0xF9	; 249
  2a:	04 f4       	brge	.+0      	; 0x2c <lrint+0x2c>
  2c:	b1 11       	cpse	r27, r1
  2e:	b1 e0       	ldi	r27, 0x01	; 1
  30:	b6 2b       	or	r27, r22
  32:	67 2f       	mov	r22, r23
  34:	78 2f       	mov	r23, r24
  36:	88 27       	eor	r24, r24
  38:	98 5f       	subi	r25, 0xF8	; 248
  3a:	01 f4       	brne	.+0      	; 0x3c <lrint+0x3c>
  3c:	00 c0       	rjmp	.+0      	; 0x3e <lrint+0x3e>
  3e:	86 95       	lsr	r24
  40:	77 95       	ror	r23
  42:	67 95       	ror	r22
  44:	b7 95       	ror	r27
  46:	00 f4       	brcc	.+0      	; 0x48 <lrint+0x48>
  48:	b1 60       	ori	r27, 0x01	; 1
  4a:	93 95       	inc	r25
  4c:	01 f4       	brne	.+0      	; 0x4e <lrint+0x4e>
  4e:	bb 0f       	add	r27, r27
  50:	00 f4       	brcc	.+0      	; 0x52 <lrint+0x52>
  52:	01 f4       	brne	.+0      	; 0x54 <lrint+0x54>
  54:	60 ff       	sbrs	r22, 0
  56:	00 c0       	rjmp	.+0      	; 0x58 <lrint+0x58>
  58:	6f 5f       	subi	r22, 0xFF	; 255
  5a:	7f 4f       	sbci	r23, 0xFF	; 255
  5c:	8f 4f       	sbci	r24, 0xFF	; 255
  5e:	06 f4       	brtc	.+0      	; 0x60 <lrint+0x60>
  60:	90 95       	com	r25
  62:	80 95       	com	r24
  64:	70 95       	com	r23
  66:	61 95       	neg	r22
  68:	7f 4f       	sbci	r23, 0xFF	; 255
  6a:	8f 4f       	sbci	r24, 0xFF	; 255
  6c:	9f 4f       	sbci	r25, 0xFF	; 255
  6e:	08 95       	ret
  70:	68 94       	set
  72:	0c 94 00 00 	jmp	0	; 0x0 <lrint>
  76:	0c 94 00 00 	jmp	0	; 0x0 <lrint>

lround.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <lround>:
   0:	0e 94 00 00 	call	0	; 0x0 <lround>
   4:	00 f0       	brcs	.+0      	; 0x6 <lround+0x6>
   6:	9e 57       	subi	r25, 0x7E	; 126
   8:	00 f0       	brcs	.+0      	; 0xa <lround+0xa>
   a:	98 51       	subi	r25, 0x18	; 24
   c:	00 f0       	brcs	.+0      	; 0xe <lround+0xe>
   e:	01 f0       	breq	.+0      	; 0x10 <lround+0x10>
  10:	98 30       	cpi	r25, 0x08	; 8
  12:	00 f4       	brcc	.+0      	; 0x14 <lround+0x14>
  14:	09 2e       	mov	r0, r25
  16:	99 27       	eor	r25, r25
  18:	66 0f       	add	r22, r22
  1a:	77 1f       	adc	r23, r23
  1c:	88 1f       	adc	r24, r24
  1e:	99 1f       	adc	r25, r25
  20:	0a 94       	dec	r0
  22:	01 f4       	brne	.+0      	; 0x24 <lround+0x24>
  24:	00 c0       	rjmp	.+0      	; 0x26 <lround+0x26>
  26:	06 2e       	mov	r0, r22
  28:	67 2f       	mov	r22, r23
  2a:	78 2f       	mov	r23, r24
  2c:	88 27       	eor	r24, r24
  2e:	98 5f       	subi	r25, 0xF8	; 248
  30:	01 f4       	brne	.+0      	; 0x32 <lround+0x32>
  32:	00 0c       	add	r0, r0
  34:	00 c0       	rjmp	.+0      	; 0x36 <lround+0x36>
  36:	99 3f       	cpi	r25, 0xF9	; 249
  38:	04 f0       	brlt	.+0      	; 0x3a <lround+0x3a>
  3a:	86 95       	lsr	r24
  3c:	77 95       	ror	r23
  3e:	67 95       	ror	r22
  40:	93 95       	inc	r25
  42:	01 f4       	brne	.+0      	; 0x44 <lround+0x44>
  44:	61 1d       	adc	r22, r1
  46:	71 1d       	adc	r23, r1
  48:	81 1d       	adc	r24, r1
  4a:	06 f4       	brtc	.+0      	; 0x4c <lround+0x4c>
  4c:	90 95       	com	r25
  4e:	80 95       	com	r24
  50:	70 95       	com	r23
  52:	61 95       	neg	r22
  54:	7f 4f       	sbci	r23, 0xFF	; 255
  56:	8f 4f       	sbci	r24, 0xFF	; 255
  58:	9f 4f       	sbci	r25, 0xFF	; 255
  5a:	08 95       	ret
  5c:	68 94       	set
  5e:	0c 94 00 00 	jmp	0	; 0x0 <lround>
  62:	0c 94 00 00 	jmp	0	; 0x0 <lround>

modf.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <modf>:
   0:	fa 01       	movw	r30, r20
   2:	dc 01       	movw	r26, r24
   4:	aa 0f       	add	r26, r26
   6:	bb 1f       	adc	r27, r27
   8:	9b 01       	movw	r18, r22
   a:	ac 01       	movw	r20, r24
   c:	bf 57       	subi	r27, 0x7F	; 127
   e:	00 f4       	brcc	.+0      	; 0x10 <modf+0x10>
  10:	22 27       	eor	r18, r18
  12:	33 27       	eor	r19, r19
  14:	44 27       	eor	r20, r20
  16:	50 78       	andi	r21, 0x80	; 128
  18:	00 c0       	rjmp	.+0      	; 0x1a <modf+0x1a>
  1a:	b7 51       	subi	r27, 0x17	; 23
  1c:	00 f4       	brcc	.+0      	; 0x1e <modf+0x1e>
  1e:	ab 2f       	mov	r26, r27
  20:	00 24       	eor	r0, r0
  22:	46 95       	lsr	r20
  24:	37 95       	ror	r19
  26:	27 95       	ror	r18
  28:	01 1c       	adc	r0, r1
  2a:	a3 95       	inc	r26
  2c:	02 f0       	brmi	.+0      	; 0x2e <modf+0x2e>
  2e:	00 20       	and	r0, r0
  30:	01 f0       	breq	.+0      	; 0x32 <modf+0x32>
  32:	22 0f       	add	r18, r18
  34:	33 1f       	adc	r19, r19
  36:	44 1f       	adc	r20, r20
  38:	b3 95       	inc	r27
  3a:	02 f0       	brmi	.+0      	; 0x3c <modf+0x3c>
  3c:	00 d0       	rcall	.+0      	; 0x3e <modf+0x3e>
  3e:	0c 94 00 00 	jmp	0	; 0x0 <modf>
  42:	61 30       	cpi	r22, 0x01	; 1
  44:	71 05       	cpc	r23, r1
  46:	a0 e8       	ldi	r26, 0x80	; 128
  48:	8a 07       	cpc	r24, r26
  4a:	b9 46       	sbci	r27, 0x69	; 105
  4c:	00 f4       	brcc	.+0      	; 0x4e <modf+0x4e>
  4e:	9b 01       	movw	r18, r22
  50:	ac 01       	movw	r20, r24
  52:	66 27       	eor	r22, r22
  54:	77 27       	eor	r23, r23
  56:	88 27       	eor	r24, r24
  58:	90 78       	andi	r25, 0x80	; 128
  5a:	30 96       	adiw	r30, 0x00	; 0
  5c:	01 f0       	breq	.+0      	; 0x5e <modf+0x5e>
  5e:	20 83       	st	Z, r18
  60:	31 83       	std	Z+1, r19	; 0x01
  62:	42 83       	std	Z+2, r20	; 0x02
  64:	53 83       	std	Z+3, r21	; 0x03
  66:	08 95       	ret

mulsf3.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__mulsf3>:
   0:	0e 94 00 00 	call	0	; 0x0 <__mulsf3>
   4:	0c 94 00 00 	jmp	0	; 0x0 <__mulsf3>

mulsf3x.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__mulsf3x-0x1e>:
   0:	0e 94 00 00 	call	0	; 0x0 <__mulsf3x-0x1e>
   4:	00 f0       	brcs	.+0      	; 0x6 <__mulsf3x-0x18>
   6:	0e 94 00 00 	call	0	; 0x0 <__mulsf3x-0x1e>
   a:	00 f0       	brcs	.+0      	; 0xc <__mulsf3x-0x12>
   c:	95 23       	and	r25, r21
   e:	01 f0       	breq	.+0      	; 0x10 <__mulsf3x-0xe>
  10:	0c 94 00 00 	jmp	0	; 0x0 <__mulsf3x-0x1e>
  14:	0c 94 00 00 	jmp	0	; 0x0 <__mulsf3x-0x1e>
  18:	11 24       	eor	r1, r1
  1a:	0c 94 00 00 	jmp	0	; 0x0 <__mulsf3x-0x1e>

0000001e <__mulsf3x>:
  1e:	0e 94 00 00 	call	0	; 0x0 <__mulsf3x-0x1e>
  22:	00 f0       	brcs	.+0      	; 0x24 <__mulsf3_pse>

00000024 <__mulsf3_pse>:
  24:	95 9f       	mul	r25, r21
  26:	01 f0       	breq	.+0      	; 0x28 <__mulsf3_pse+0x4>
  28:	95 0f       	add	r25, r21
  2a:	50 e0       	ldi	r21, 0x00	; 0
  2c:	55 1f       	adc	r21, r21
  2e:	62 9f       	mul	r22, r18
  30:	f0 01       	movw	r30, r0
  32:	72 9f       	mul	r23, r18
  34:	bb 27       	eor	r27, r27
  36:	f0 0d       	add	r31, r0
  38:	b1 1d       	adc	r27, r1
  3a:	63 9f       	mul	r22, r19
  3c:	aa 27       	eor	r26, r26
  3e:	f0 0d       	add	r31, r0
  40:	b1 1d       	adc	r27, r1
  42:	aa 1f       	adc	r26, r26
  44:	64 9f       	mul	r22, r20
  46:	66 27       	eor	r22, r22
  48:	b0 0d       	add	r27, r0
  4a:	a1 1d       	adc	r26, r1
  4c:	66 1f       	adc	r22, r22
  4e:	82 9f       	mul	r24, r18
  50:	22 27       	eor	r18, r18
  52:	b0 0d       	add	r27, r0
  54:	a1 1d       	adc	r26, r1
  56:	62 1f       	adc	r22, r18
  58:	73 9f       	mul	r23, r19
  5a:	b0 0d       	add	r27, r0
  5c:	a1 1d       	adc	r26, r1
  5e:	62 1f       	adc	r22, r18
  60:	83 9f       	mul	r24, r19
  62:	a0 0d       	add	r26, r0
  64:	61 1d       	adc	r22, r1
  66:	22 1f       	adc	r18, r18
  68:	74 9f       	mul	r23, r20
  6a:	33 27       	eor	r19, r19
  6c:	a0 0d       	add	r26, r0
  6e:	61 1d       	adc	r22, r1
  70:	23 1f       	adc	r18, r19
  72:	84 9f       	mul	r24, r20
  74:	60 0d       	add	r22, r0
  76:	21 1d       	adc	r18, r1
  78:	82 2f       	mov	r24, r18
  7a:	76 2f       	mov	r23, r22
  7c:	6a 2f       	mov	r22, r26
  7e:	11 24       	eor	r1, r1
  80:	9f 57       	subi	r25, 0x7F	; 127
  82:	50 40       	sbci	r21, 0x00	; 0
  84:	02 f0       	brmi	.+0      	; 0x86 <__mulsf3_pse+0x62>
  86:	01 f0       	breq	.+0      	; 0x88 <__mulsf3_pse+0x64>
  88:	88 23       	and	r24, r24
  8a:	02 f0       	brmi	.+0      	; 0x8c <__mulsf3_pse+0x68>
  8c:	ee 0f       	add	r30, r30
  8e:	ff 1f       	adc	r31, r31
  90:	bb 1f       	adc	r27, r27
  92:	66 1f       	adc	r22, r22
  94:	77 1f       	adc	r23, r23
  96:	88 1f       	adc	r24, r24
  98:	91 50       	subi	r25, 0x01	; 1
  9a:	50 40       	sbci	r21, 0x00	; 0
  9c:	01 f4       	brne	.+0      	; 0x9e <__mulsf3_pse+0x7a>
  9e:	9e 3f       	cpi	r25, 0xFE	; 254
  a0:	51 05       	cpc	r21, r1
  a2:	00 f0       	brcs	.+0      	; 0xa4 <__mulsf3_pse+0x80>
  a4:	0c 94 00 00 	jmp	0	; 0x0 <__mulsf3x-0x1e>
  a8:	0c 94 00 00 	jmp	0	; 0x0 <__mulsf3x-0x1e>
  ac:	5f 3f       	cpi	r21, 0xFF	; 255
  ae:	04 f0       	brlt	.+0      	; 0xb0 <__mulsf3_pse+0x8c>
  b0:	98 3e       	cpi	r25, 0xE8	; 232
  b2:	04 f0       	brlt	.+0      	; 0xb4 <__mulsf3_pse+0x90>
  b4:	86 95       	lsr	r24
  b6:	77 95       	ror	r23
  b8:	67 95       	ror	r22
  ba:	b7 95       	ror	r27
  bc:	f7 95       	ror	r31
  be:	e7 95       	ror	r30
  c0:	9f 5f       	subi	r25, 0xFF	; 255
  c2:	01 f4       	brne	.+0      	; 0xc4 <__mulsf3_pse+0xa0>
  c4:	fe 2b       	or	r31, r30
  c6:	88 0f       	add	r24, r24
  c8:	91 1d       	adc	r25, r1
  ca:	96 95       	lsr	r25
  cc:	87 95       	ror	r24
  ce:	97 f9       	bld	r25, 7
  d0:	08 95       	ret

negsf2.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__negsf2>:
   0:	90 58       	subi	r25, 0x80	; 128
   2:	08 95       	ret

pow.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <pow>:
   0:	fa 01       	movw	r30, r20
   2:	ee 0f       	add	r30, r30
   4:	ff 1f       	adc	r31, r31
   6:	30 96       	adiw	r30, 0x00	; 0
   8:	21 05       	cpc	r18, r1
   a:	31 05       	cpc	r19, r1
   c:	01 f0       	breq	.+0      	; 0xe <pow+0xe>
   e:	61 15       	cp	r22, r1
  10:	71 05       	cpc	r23, r1
  12:	01 f4       	brne	.+0      	; 0x14 <pow+0x14>
  14:	80 38       	cpi	r24, 0x80	; 128
  16:	bf e3       	ldi	r27, 0x3F	; 63
  18:	9b 07       	cpc	r25, r27
  1a:	01 f0       	breq	.+0      	; 0x1c <pow+0x1c>
  1c:	68 94       	set
  1e:	90 38       	cpi	r25, 0x80	; 128
  20:	81 05       	cpc	r24, r1
  22:	01 f0       	breq	.+0      	; 0x24 <pow+0x24>
  24:	80 38       	cpi	r24, 0x80	; 128
  26:	bf ef       	ldi	r27, 0xFF	; 255
  28:	9b 07       	cpc	r25, r27
  2a:	01 f0       	breq	.+0      	; 0x2c <pow+0x2c>
  2c:	99 23       	and	r25, r25
  2e:	02 f4       	brpl	.+0      	; 0x30 <pow+0x30>
  30:	ff 3f       	cpi	r31, 0xFF	; 255
  32:	e1 05       	cpc	r30, r1
  34:	31 05       	cpc	r19, r1
  36:	21 05       	cpc	r18, r1
  38:	01 f0       	breq	.+0      	; 0x3a <pow+0x3a>
  3a:	e8 94       	clt
  3c:	08 94       	sec
  3e:	e7 95       	ror	r30
  40:	d9 01       	movw	r26, r18
  42:	aa 23       	and	r26, r26
  44:	01 f4       	brne	.+0      	; 0x46 <pow+0x46>
  46:	ab 2f       	mov	r26, r27
  48:	be 2f       	mov	r27, r30
  4a:	f8 5f       	subi	r31, 0xF8	; 248
  4c:	00 f0       	brcs	.+0      	; 0x4e <pow+0x4e>
  4e:	00 c0       	rjmp	.+0      	; 0x50 <pow+0x50>
  50:	ff 5f       	subi	r31, 0xFF	; 255
  52:	00 f4       	brcc	.+0      	; 0x54 <pow+0x54>
  54:	a6 95       	lsr	r26
  56:	00 f4       	brcc	.+0      	; 0x58 <pow+0x58>
  58:	f7 39       	cpi	r31, 0x97	; 151
  5a:	00 f0       	brcs	.+0      	; 0x5c <pow+0x5c>
  5c:	01 f0       	breq	.+0      	; 0x5e <pow+0x5e>
  5e:	ff 3a       	cpi	r31, 0xAF	; 175
  60:	00 f4       	brcc	.+0      	; 0x62 <pow+0x62>
  62:	9f 77       	andi	r25, 0x7F	; 127
  64:	9f 93       	push	r25
  66:	00 d0       	rcall	.+0      	; 0x68 <pow+0x68>
  68:	0f 90       	pop	r0
  6a:	07 fc       	sbrc	r0, 7
  6c:	90 58       	subi	r25, 0x80	; 128
  6e:	08 95       	ret
  70:	06 f0       	brts	.+0      	; 0x72 <pow+0x72>
  72:	0c 94 00 00 	jmp	0	; 0x0 <pow>
  76:	60 e0       	ldi	r22, 0x00	; 0
  78:	70 e0       	ldi	r23, 0x00	; 0
  7a:	80 e8       	ldi	r24, 0x80	; 128
  7c:	9f e3       	ldi	r25, 0x3F	; 63
  7e:	08 95       	ret
  80:	4f e7       	ldi	r20, 0x7F	; 127
  82:	9f 77       	andi	r25, 0x7F	; 127
  84:	5f 93       	push	r21
  86:	4f 93       	push	r20
  88:	3f 93       	push	r19
  8a:	2f 93       	push	r18
  8c:	0e 94 00 00 	call	0	; 0x0 <pow>
  90:	2f 91       	pop	r18
  92:	3f 91       	pop	r19
  94:	4f 91       	pop	r20
  96:	5f 91       	pop	r21
  98:	0e 94 00 00 	call	0	; 0x0 <pow>
  9c:	0c 94 00 00 	jmp	0	; 0x0 <pow>

round.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <round>:
   0:	0e 94 00 00 	call	0	; 0x0 <round>
   4:	00 f0       	brcs	.+0      	; 0x6 <round+0x6>
   6:	9e 37       	cpi	r25, 0x7E	; 126
   8:	00 f0       	brcs	.+0      	; 0xa <round+0xa>
   a:	96 39       	cpi	r25, 0x96	; 150
   c:	00 f4       	brcc	.+0      	; 0xe <round+0xe>
   e:	9e 38       	cpi	r25, 0x8E	; 142
  10:	00 f4       	brcc	.+0      	; 0x12 <round+0x12>
  12:	67 2f       	mov	r22, r23
  14:	78 2f       	mov	r23, r24
  16:	88 27       	eor	r24, r24
  18:	98 5f       	subi	r25, 0xF8	; 248
  1a:	00 c0       	rjmp	.+0      	; 0x1c <round+0x1c>
  1c:	86 95       	lsr	r24
  1e:	77 95       	ror	r23
  20:	67 95       	ror	r22
  22:	93 95       	inc	r25
  24:	95 39       	cpi	r25, 0x95	; 149
  26:	00 f0       	brcs	.+0      	; 0x28 <round+0x28>
  28:	b6 2f       	mov	r27, r22
  2a:	b1 70       	andi	r27, 0x01	; 1
  2c:	6b 0f       	add	r22, r27
  2e:	71 1d       	adc	r23, r1
  30:	81 1d       	adc	r24, r1
  32:	00 f4       	brcc	.+0      	; 0x34 <round+0x34>
  34:	87 95       	ror	r24
  36:	77 95       	ror	r23
  38:	67 95       	ror	r22
  3a:	93 95       	inc	r25
  3c:	0c 94 00 00 	jmp	0	; 0x0 <round>
  40:	0c 94 00 00 	jmp	0	; 0x0 <round>
  44:	0c 94 00 00 	jmp	0	; 0x0 <round>

signbit.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <signbit>:
   0:	99 0f       	add	r25, r25
   2:	88 0b       	sbc	r24, r24
   4:	81 95       	neg	r24
   6:	99 27       	eor	r25, r25
   8:	08 95       	ret

sinh.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <sinh>:
   0:	9f 93       	push	r25
   2:	9f 77       	andi	r25, 0x7F	; 127
   4:	fe e3       	ldi	r31, 0x3E	; 62
   6:	80 3a       	cpi	r24, 0xA0	; 160
   8:	9f 07       	cpc	r25, r31
   a:	00 f4       	brcc	.+0      	; 0xc <sinh+0xc>
   c:	e0 e0       	ldi	r30, 0x00	; 0
   e:	f0 e0       	ldi	r31, 0x00	; 0
  10:	0e 94 00 00 	call	0	; 0x0 <sinh>
  14:	00 c0       	rjmp	.+0      	; 0x16 <sinh+0x16>
  16:	90 68       	ori	r25, 0x80	; 128
  18:	0e 94 00 00 	call	0	; 0x0 <sinh>
  1c:	4f ef       	ldi	r20, 0xFF	; 255
  1e:	5f ef       	ldi	r21, 0xFF	; 255
  20:	0e 94 00 00 	call	0	; 0x0 <sinh>
  24:	9f 93       	push	r25
  26:	8f 93       	push	r24
  28:	7f 93       	push	r23
  2a:	6f 93       	push	r22
  2c:	42 e0       	ldi	r20, 0x02	; 2
  2e:	50 e0       	ldi	r21, 0x00	; 0
  30:	0e 94 00 00 	call	0	; 0x0 <sinh>
  34:	0e 94 00 00 	call	0	; 0x0 <sinh>
  38:	2f 91       	pop	r18
  3a:	3f 91       	pop	r19
  3c:	4f 91       	pop	r20
  3e:	5f 91       	pop	r21
  40:	0e 94 00 00 	call	0	; 0x0 <sinh>
  44:	0f 90       	pop	r0
  46:	07 fc       	sbrc	r0, 7
  48:	90 68       	ori	r25, 0x80	; 128
  4a:	08 95       	ret

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	02 89       	ldd	r16, Z+18	; 0x12
   2:	88 08       	sbc	r8, r8
   4:	3c ab       	std	Y+52, r19	; 0x34
   6:	aa aa       	std	Y+50, r10	; 0x32
   8:	2a 3e       	cpi	r18, 0xEA	; 234
   a:	00 00       	nop
   c:	00 80       	ld	r0, Z
   e:	3f 00       	Address 0x000000000000000e is out of bounds.
.word	0xffff	; ????

sin.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <sin>:
   0:	9f 93       	push	r25
   2:	0e 94 00 00 	call	0	; 0x0 <sin>
   6:	0f 90       	pop	r0
   8:	07 fc       	sbrc	r0, 7
   a:	ee 5f       	subi	r30, 0xFE	; 254
   c:	0c 94 00 00 	jmp	0	; 0x0 <sin>

sqrt.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <sqrt-0xc>:
   0:	01 f4       	brne	.+0      	; 0x2 <sqrt-0xa>
   2:	06 f4       	brtc	.+0      	; 0x4 <sqrt-0x8>
   4:	0c 94 00 00 	jmp	0	; 0x0 <sqrt-0xc>
   8:	0c 94 00 00 	jmp	0	; 0x0 <sqrt-0xc>

0000000c <sqrt>:
   c:	0e 94 00 00 	call	0	; 0x0 <sqrt-0xc>
  10:	00 f0       	brcs	.+0      	; 0x12 <sqrt+0x6>
  12:	99 23       	and	r25, r25
  14:	01 f0       	breq	.+0      	; 0x16 <sqrt+0xa>
  16:	06 f0       	brts	.+0      	; 0x18 <sqrt+0xc>
  18:	9f 57       	subi	r25, 0x7F	; 127
  1a:	55 0b       	sbc	r21, r21
  1c:	87 ff       	sbrs	r24, 7
  1e:	0e 94 00 00 	call	0	; 0x0 <sqrt-0xc>
  22:	00 24       	eor	r0, r0
  24:	a0 e6       	ldi	r26, 0x60	; 96
  26:	40 ea       	ldi	r20, 0xA0	; 160
  28:	90 01       	movw	r18, r0
  2a:	80 58       	subi	r24, 0x80	; 128
  2c:	56 95       	lsr	r21
  2e:	97 95       	ror	r25
  30:	00 f4       	brcc	.+0      	; 0x32 <sqrt+0x26>
  32:	80 5c       	subi	r24, 0xC0	; 192
  34:	66 0f       	add	r22, r22
  36:	77 1f       	adc	r23, r23
  38:	88 1f       	adc	r24, r24
  3a:	00 f0       	brcs	.+0      	; 0x3c <sqrt+0x30>
  3c:	26 17       	cp	r18, r22
  3e:	37 07       	cpc	r19, r23
  40:	48 07       	cpc	r20, r24
  42:	00 f4       	brcc	.+0      	; 0x44 <sqrt+0x38>
  44:	62 1b       	sub	r22, r18
  46:	73 0b       	sbc	r23, r19
  48:	84 0b       	sbc	r24, r20
  4a:	20 29       	or	r18, r0
  4c:	31 29       	or	r19, r1
  4e:	4a 2b       	or	r20, r26
  50:	a6 95       	lsr	r26
  52:	17 94       	ror	r1
  54:	07 94       	ror	r0
  56:	20 25       	eor	r18, r0
  58:	31 25       	eor	r19, r1
  5a:	4a 27       	eor	r20, r26
  5c:	00 f4       	brcc	.+0      	; 0x5e <sqrt+0x52>
  5e:	66 0f       	add	r22, r22
  60:	77 1f       	adc	r23, r23
  62:	88 1f       	adc	r24, r24
  64:	00 f0       	brcs	.+0      	; 0x66 <sqrt+0x5a>
  66:	26 17       	cp	r18, r22
  68:	37 07       	cpc	r19, r23
  6a:	48 07       	cpc	r20, r24
  6c:	00 f4       	brcc	.+0      	; 0x6e <sqrt+0x62>
  6e:	62 0b       	sbc	r22, r18
  70:	73 0b       	sbc	r23, r19
  72:	84 0b       	sbc	r24, r20
  74:	20 0d       	add	r18, r0
  76:	31 1d       	adc	r19, r1
  78:	41 1d       	adc	r20, r1
  7a:	a0 95       	com	r26
  7c:	01 f4       	brne	.+0      	; 0x7e <sqrt+0x72>
  7e:	b9 01       	movw	r22, r18
  80:	84 2f       	mov	r24, r20
  82:	91 58       	subi	r25, 0x81	; 129
  84:	88 0f       	add	r24, r24
  86:	96 95       	lsr	r25
  88:	87 95       	ror	r24
  8a:	08 95       	ret

square.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <square>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	0c 94 00 00 	jmp	0	; 0x0 <square>

tanh.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <tanh>:
   0:	9f 93       	push	r25
   2:	9f 77       	andi	r25, 0x7F	; 127
   4:	fe e3       	ldi	r31, 0x3E	; 62
   6:	80 31       	cpi	r24, 0x10	; 16
   8:	9f 07       	cpc	r25, r31
   a:	00 f4       	brcc	.+0      	; 0xc <tanh+0xc>
   c:	e0 e0       	ldi	r30, 0x00	; 0
   e:	f0 e0       	ldi	r31, 0x00	; 0
  10:	0e 94 00 00 	call	0	; 0x0 <tanh>
  14:	00 c0       	rjmp	.+0      	; 0x16 <tanh+0x16>
  16:	90 68       	ori	r25, 0x80	; 128
  18:	41 e0       	ldi	r20, 0x01	; 1
  1a:	50 e0       	ldi	r21, 0x00	; 0
  1c:	0e 94 00 00 	call	0	; 0x0 <tanh>
  20:	0e 94 00 00 	call	0	; 0x0 <tanh>
  24:	9f 93       	push	r25
  26:	8f 93       	push	r24
  28:	7f 93       	push	r23
  2a:	6f 93       	push	r22
  2c:	20 e0       	ldi	r18, 0x00	; 0
  2e:	30 e0       	ldi	r19, 0x00	; 0
  30:	40 e8       	ldi	r20, 0x80	; 128
  32:	5f e3       	ldi	r21, 0x3F	; 63
  34:	0e 94 00 00 	call	0	; 0x0 <tanh>
  38:	2f 91       	pop	r18
  3a:	3f 91       	pop	r19
  3c:	4f 91       	pop	r20
  3e:	5f 91       	pop	r21
  40:	9f 93       	push	r25
  42:	8f 93       	push	r24
  44:	7f 93       	push	r23
  46:	6f 93       	push	r22
  48:	60 e0       	ldi	r22, 0x00	; 0
  4a:	70 e0       	ldi	r23, 0x00	; 0
  4c:	80 e8       	ldi	r24, 0x80	; 128
  4e:	9f e3       	ldi	r25, 0x3F	; 63
  50:	0e 94 00 00 	call	0	; 0x0 <tanh>
  54:	2f 91       	pop	r18
  56:	3f 91       	pop	r19
  58:	4f 91       	pop	r20
  5a:	5f 91       	pop	r21
  5c:	0e 94 00 00 	call	0	; 0x0 <tanh>
  60:	0f 90       	pop	r0
  62:	07 fc       	sbrc	r0, 7
  64:	90 58       	subi	r25, 0x80	; 128
  66:	08 95       	ret

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	02 89       	ldd	r16, Z+18	; 0x12
   2:	88 08       	sbc	r8, r8
   4:	3e ab       	std	Y+54, r19	; 0x36
   6:	aa aa       	std	Y+50, r10	; 0x32
   8:	aa be       	out	0x3a, r10	; 58
   a:	00 00       	nop
   c:	00 80       	ld	r0, Z
   e:	3f 00       	Address 0x000000000000000e is out of bounds.
.word	0xffff	; ????

tan.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <tan>:
   0:	df 93       	push	r29
   2:	d9 2f       	mov	r29, r25
   4:	0e 94 00 00 	call	0	; 0x0 <tan>
   8:	e6 95       	lsr	r30
   a:	d7 95       	ror	r29
   c:	2a ed       	ldi	r18, 0xDA	; 218
   e:	3f e0       	ldi	r19, 0x0F	; 15
  10:	49 e4       	ldi	r20, 0x49	; 73
  12:	5f e3       	ldi	r21, 0x3F	; 63
  14:	b3 3a       	cpi	r27, 0xA3	; 163
  16:	62 07       	cpc	r22, r18
  18:	73 07       	cpc	r23, r19
  1a:	84 07       	cpc	r24, r20
  1c:	95 07       	cpc	r25, r21
  1e:	d7 95       	ror	r29
  20:	02 f0       	brmi	.+0      	; 0x22 <tan+0x22>
  22:	a2 ea       	ldi	r26, 0xA2	; 162
  24:	49 ec       	ldi	r20, 0xC9	; 201
  26:	90 68       	ori	r25, 0x80	; 128
  28:	0e 94 00 00 	call	0	; 0x0 <tan>
  2c:	0e 94 00 00 	call	0	; 0x0 <tan>
  30:	e0 e0       	ldi	r30, 0x00	; 0
  32:	f0 e0       	ldi	r31, 0x00	; 0
  34:	0e 94 00 00 	call	0	; 0x0 <tan>
  38:	dd 0f       	add	r29, r29
  3a:	03 f0       	brvs	.+0      	; 0x3c <tan+0x3c>
  3c:	0e 94 00 00 	call	0	; 0x0 <tan>
  40:	dd 0f       	add	r29, r29
  42:	03 f4       	brvc	.+0      	; 0x44 <tan+0x44>
  44:	90 58       	subi	r25, 0x80	; 128
  46:	df 91       	pop	r29
  48:	08 95       	ret

Дизассемблирование раздела .progmem.gcc_fplib:

00000000 <.progmem.gcc_fplib>:
   0:	06 64       	ori	r16, 0x46	; 70
   2:	ec 1b       	sub	r30, r28
   4:	3c 04       	cpc	r3, r12
   6:	bc 16       	cp	r11, r28
   8:	3e 3b       	cpi	r19, 0xBE	; 190
   a:	e5 b9       	out	0x05, r30	; 5
   c:	3c c9       	rjmp	.-3464   	; 0xfffff286 <tan+0xfffff286>
   e:	3c 37       	cpi	r19, 0x7C	; 124
  10:	c2 9e       	mul	r12, r18
  12:	5a 3d       	cpi	r21, 0xDA	; 218
  14:	66 04       	cpc	r6, r6
  16:	98 08       	sbc	r9, r8
  18:	3e ea       	ldi	r19, 0xAE	; 174
  1a:	69 aa       	std	Y+49, r6	; 0x31
  1c:	aa 3e       	cpi	r26, 0xEA	; 234
  1e:	00 00       	nop
  20:	00 80       	ld	r0, Z
  22:	3f 00       	Address 0x0000000000000022 is out of bounds.
.word	0xffff	; ????

trunc.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <trunc>:
   0:	0e 94 00 00 	call	0	; 0x0 <trunc>
   4:	00 f0       	brcs	.+0      	; 0x6 <trunc+0x6>
   6:	9f 37       	cpi	r25, 0x7F	; 127
   8:	00 f4       	brcc	.+0      	; 0xa <trunc+0xa>
   a:	0c 94 00 00 	jmp	0	; 0x0 <trunc>
   e:	0c 94 00 00 	jmp	0	; 0x0 <trunc>
  12:	0c 94 00 00 	jmp	0	; 0x0 <trunc>

unordsf2.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc.fplib:

00000000 <__unordsf2>:
   0:	0e 94 00 00 	call	0	; 0x0 <__unordsf2>
   4:	88 0b       	sbc	r24, r24
   6:	99 0b       	sbc	r25, r25
   8:	08 95       	ret

asc_store.o:     формат файла elf32-avr


Дизассемблирование раздела .data:

00000000 <__asc_store>:
	...

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

asctime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <asctime>:
   0:	60 91 00 00 	lds	r22, 0x0000
   4:	70 91 00 00 	lds	r23, 0x0000
   8:	0e 94 00 00 	call	0	; 0x0 <asctime>
   c:	80 91 00 00 	lds	r24, 0x0000
  10:	90 91 00 00 	lds	r25, 0x0000
  14:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

asctime_r.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <asctime_r>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	7c 01       	movw	r14, r24
   e:	eb 01       	movw	r28, r22
  10:	fc 01       	movw	r30, r24
  12:	84 81       	ldd	r24, Z+4	; 0x04
  14:	c8 2e       	mov	r12, r24
  16:	cc 0c       	add	r12, r12
  18:	c8 0e       	add	r12, r24
  1a:	85 81       	ldd	r24, Z+5	; 0x05
  1c:	d8 2e       	mov	r13, r24
  1e:	dd 0c       	add	r13, r13
  20:	d8 0e       	add	r13, r24
  22:	cb 01       	movw	r24, r22
  24:	db 01       	movw	r26, r22
  26:	14 96       	adiw	r26, 0x04	; 4
  28:	70 e0       	ldi	r23, 0x00	; 0
  2a:	27 2f       	mov	r18, r23
  2c:	2c 0d       	add	r18, r12
  2e:	30 e0       	ldi	r19, 0x00	; 0
  30:	40 e0       	ldi	r20, 0x00	; 0
  32:	20 50       	subi	r18, 0x00	; 0
  34:	30 40       	sbci	r19, 0x00	; 0
  36:	40 40       	sbci	r20, 0x00	; 0
  38:	f9 01       	movw	r30, r18
  3a:	54 2f       	mov	r21, r20
  3c:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  40:	fc 01       	movw	r30, r24
  42:	61 93       	st	Z+, r22
  44:	cf 01       	movw	r24, r30
  46:	27 2f       	mov	r18, r23
  48:	2d 0d       	add	r18, r13
  4a:	30 e0       	ldi	r19, 0x00	; 0
  4c:	40 e0       	ldi	r20, 0x00	; 0
  4e:	20 50       	subi	r18, 0x00	; 0
  50:	30 40       	sbci	r19, 0x00	; 0
  52:	40 40       	sbci	r20, 0x00	; 0
  54:	f9 01       	movw	r30, r18
  56:	54 2f       	mov	r21, r20
  58:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  5c:	6d 93       	st	X+, r22
  5e:	7f 5f       	subi	r23, 0xFF	; 255
  60:	73 30       	cpi	r23, 0x03	; 3
  62:	01 f4       	brne	.+0      	; 0x64 <asctime_r+0x64>
  64:	80 e2       	ldi	r24, 0x20	; 32
  66:	8f 83       	std	Y+7, r24	; 0x07
  68:	8b 83       	std	Y+3, r24	; 0x03
  6a:	be 01       	movw	r22, r28
  6c:	68 5f       	subi	r22, 0xF8	; 248
  6e:	7f 4f       	sbci	r23, 0xFF	; 255
  70:	f7 01       	movw	r30, r14
  72:	83 81       	ldd	r24, Z+3	; 0x03
  74:	40 e2       	ldi	r20, 0x20	; 32
  76:	99 27       	eor	r25, r25
  78:	87 fd       	sbrc	r24, 7
  7a:	90 95       	com	r25
  7c:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  80:	be 01       	movw	r22, r28
  82:	65 5f       	subi	r22, 0xF5	; 245
  84:	7f 4f       	sbci	r23, 0xFF	; 255
  86:	f7 01       	movw	r30, r14
  88:	82 81       	ldd	r24, Z+2	; 0x02
  8a:	4a e3       	ldi	r20, 0x3A	; 58
  8c:	99 27       	eor	r25, r25
  8e:	87 fd       	sbrc	r24, 7
  90:	90 95       	com	r25
  92:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  96:	be 01       	movw	r22, r28
  98:	62 5f       	subi	r22, 0xF2	; 242
  9a:	7f 4f       	sbci	r23, 0xFF	; 255
  9c:	f7 01       	movw	r30, r14
  9e:	81 81       	ldd	r24, Z+1	; 0x01
  a0:	4a e3       	ldi	r20, 0x3A	; 58
  a2:	99 27       	eor	r25, r25
  a4:	87 fd       	sbrc	r24, 7
  a6:	90 95       	com	r25
  a8:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  ac:	be 01       	movw	r22, r28
  ae:	6f 5e       	subi	r22, 0xEF	; 239
  b0:	7f 4f       	sbci	r23, 0xFF	; 255
  b2:	f7 01       	movw	r30, r14
  b4:	80 81       	ld	r24, Z
  b6:	40 e2       	ldi	r20, 0x20	; 32
  b8:	99 27       	eor	r25, r25
  ba:	87 fd       	sbrc	r24, 7
  bc:	90 95       	com	r25
  be:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  c2:	f7 01       	movw	r30, r14
  c4:	86 81       	ldd	r24, Z+6	; 0x06
  c6:	97 81       	ldd	r25, Z+7	; 0x07
  c8:	64 e6       	ldi	r22, 0x64	; 100
  ca:	70 e0       	ldi	r23, 0x00	; 0
  cc:	84 59       	subi	r24, 0x94	; 148
  ce:	98 4f       	sbci	r25, 0xF8	; 248
  d0:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  d4:	6b 01       	movw	r12, r22
  d6:	7c 01       	movw	r14, r24
  d8:	be 01       	movw	r22, r28
  da:	6c 5e       	subi	r22, 0xEC	; 236
  dc:	7f 4f       	sbci	r23, 0xFF	; 255
  de:	40 e2       	ldi	r20, 0x20	; 32
  e0:	c6 01       	movw	r24, r12
  e2:	0e 94 00 00 	call	0	; 0x0 <asctime_r>
  e6:	be 01       	movw	r22, r28
  e8:	6a 5e       	subi	r22, 0xEA	; 234
  ea:	7f 4f       	sbci	r23, 0xFF	; 255
  ec:	40 e0       	ldi	r20, 0x00	; 0
  ee:	c7 01       	movw	r24, r14
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	ff 90       	pop	r15
  f6:	ef 90       	pop	r14
  f8:	df 90       	pop	r13
  fa:	cf 90       	pop	r12
  fc:	0c 94 00 00 	jmp	0	; 0x0 <asctime_r>

Дизассемблирование раздела .progmemx.data:

00000000 <ascdays>:
   0:	53 75       	andi	r21, 0x53	; 83
   2:	6e 4d       	sbci	r22, 0xDE	; 222
   4:	6f 6e       	ori	r22, 0xEF	; 239
   6:	54 75       	andi	r21, 0x54	; 84
   8:	65 57       	subi	r22, 0x75	; 117
   a:	65 64       	ori	r22, 0x45	; 69
   c:	54 68       	ori	r21, 0x84	; 132
   e:	75 46       	sbci	r23, 0x65	; 101
  10:	72 69       	ori	r23, 0x92	; 146
  12:	53 61       	ori	r21, 0x13	; 19
  14:	74 00       	.word	0x0074	; ????

00000016 <ascmonths>:
  16:	4a 61       	ori	r20, 0x1A	; 26
  18:	6e 46       	sbci	r22, 0x6E	; 110
  1a:	65 62       	ori	r22, 0x25	; 37
  1c:	4d 61       	ori	r20, 0x1D	; 29
  1e:	72 41       	sbci	r23, 0x12	; 18
  20:	70 72       	andi	r23, 0x20	; 32
  22:	4d 61       	ori	r20, 0x1D	; 29
  24:	79 4a       	sbci	r23, 0xA9	; 169
  26:	75 6e       	ori	r23, 0xE5	; 229
  28:	4a 75       	andi	r20, 0x5A	; 90
  2a:	6c 41       	sbci	r22, 0x1C	; 28
  2c:	75 67       	ori	r23, 0x75	; 117
  2e:	53 65       	ori	r21, 0x53	; 83
  30:	70 4f       	sbci	r23, 0xF0	; 240
  32:	63 74       	andi	r22, 0x43	; 67
  34:	4e 6f       	ori	r20, 0xFE	; 254
  36:	76 44       	sbci	r23, 0x46	; 70
  38:	65 63       	ori	r22, 0x35	; 53
	...

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

ctime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <ctime>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	cd b7       	in	r28, 0x3d	; 61
   6:	de b7       	in	r29, 0x3e	; 62
   8:	2c 97       	sbiw	r28, 0x0c	; 12
   a:	0f b6       	in	r0, 0x3f	; 63
   c:	f8 94       	cli
   e:	de bf       	out	0x3e, r29	; 62
  10:	0f be       	out	0x3f, r0	; 63
  12:	cd bf       	out	0x3d, r28	; 61
  14:	be 01       	movw	r22, r28
  16:	6f 5f       	subi	r22, 0xFF	; 255
  18:	7f 4f       	sbci	r23, 0xFF	; 255
  1a:	0e 94 00 00 	call	0	; 0x0 <ctime>
  1e:	60 91 00 00 	lds	r22, 0x0000
  22:	70 91 00 00 	lds	r23, 0x0000
  26:	ce 01       	movw	r24, r28
  28:	01 96       	adiw	r24, 0x01	; 1
  2a:	0e 94 00 00 	call	0	; 0x0 <ctime>
  2e:	80 91 00 00 	lds	r24, 0x0000
  32:	90 91 00 00 	lds	r25, 0x0000
  36:	2c 96       	adiw	r28, 0x0c	; 12
  38:	0f b6       	in	r0, 0x3f	; 63
  3a:	f8 94       	cli
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	0f be       	out	0x3f, r0	; 63
  40:	cd bf       	out	0x3d, r28	; 61
  42:	df 91       	pop	r29
  44:	cf 91       	pop	r28
  46:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

ctime_r.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <ctime_r>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	2c 97       	sbiw	r28, 0x0c	; 12
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	8b 01       	movw	r16, r22
  1a:	be 01       	movw	r22, r28
  1c:	6f 5f       	subi	r22, 0xFF	; 255
  1e:	7f 4f       	sbci	r23, 0xFF	; 255
  20:	0e 94 00 00 	call	0	; 0x0 <ctime_r>
  24:	b8 01       	movw	r22, r16
  26:	ce 01       	movw	r24, r28
  28:	01 96       	adiw	r24, 0x01	; 1
  2a:	0e 94 00 00 	call	0	; 0x0 <ctime_r>
  2e:	2c 96       	adiw	r28, 0x0c	; 12
  30:	0f b6       	in	r0, 0x3f	; 63
  32:	f8 94       	cli
  34:	de bf       	out	0x3e, r29	; 62
  36:	0f be       	out	0x3f, r0	; 63
  38:	cd bf       	out	0x3d, r28	; 61
  3a:	df 91       	pop	r29
  3c:	cf 91       	pop	r28
  3e:	1f 91       	pop	r17
  40:	0f 91       	pop	r16
  42:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

daylight_seconds.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <daylight_seconds>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	5c 01       	movw	r10, r24
  12:	60 91 00 00 	lds	r22, 0x0000
  16:	70 91 00 00 	lds	r23, 0x0000
  1a:	80 91 00 00 	lds	r24, 0x0000
  1e:	90 91 00 00 	lds	r25, 0x0000
  22:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  26:	24 e3       	ldi	r18, 0x34	; 52
  28:	3e e6       	ldi	r19, 0x6E	; 110
  2a:	49 e4       	ldi	r20, 0x49	; 73
  2c:	58 e4       	ldi	r21, 0x48	; 72
  2e:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  32:	6b 01       	movw	r12, r22
  34:	7c 01       	movw	r14, r24
  36:	c5 01       	movw	r24, r10
  38:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  3c:	4b 01       	movw	r8, r22
  3e:	5c 01       	movw	r10, r24
  40:	c7 01       	movw	r24, r14
  42:	b6 01       	movw	r22, r12
  44:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  48:	6b 01       	movw	r12, r22
  4a:	7c 01       	movw	r14, r24
  4c:	c5 01       	movw	r24, r10
  4e:	b4 01       	movw	r22, r8
  50:	90 58       	subi	r25, 0x80	; 128
  52:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  56:	9b 01       	movw	r18, r22
  58:	ac 01       	movw	r20, r24
  5a:	c7 01       	movw	r24, r14
  5c:	b6 01       	movw	r22, r12
  5e:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  62:	6b 01       	movw	r12, r22
  64:	7c 01       	movw	r14, r24
  66:	20 e0       	ldi	r18, 0x00	; 0
  68:	30 e0       	ldi	r19, 0x00	; 0
  6a:	40 e8       	ldi	r20, 0x80	; 128
  6c:	5f e3       	ldi	r21, 0x3F	; 63
  6e:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  72:	18 16       	cp	r1, r24
  74:	04 f0       	brlt	.+0      	; 0x76 <daylight_seconds+0x76>
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	30 e0       	ldi	r19, 0x00	; 0
  7a:	40 e8       	ldi	r20, 0x80	; 128
  7c:	5f eb       	ldi	r21, 0xBF	; 191
  7e:	c7 01       	movw	r24, r14
  80:	b6 01       	movw	r22, r12
  82:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  86:	87 ff       	sbrs	r24, 7
  88:	00 c0       	rjmp	.+0      	; 0x8a <daylight_seconds+0x8a>
  8a:	c1 2c       	mov	r12, r1
  8c:	d1 2c       	mov	r13, r1
  8e:	80 e8       	ldi	r24, 0x80	; 128
  90:	e8 2e       	mov	r14, r24
  92:	8f eb       	ldi	r24, 0xBF	; 191
  94:	f8 2e       	mov	r15, r24
  96:	00 c0       	rjmp	.+0      	; 0x98 <daylight_seconds+0x98>
  98:	c1 2c       	mov	r12, r1
  9a:	d1 2c       	mov	r13, r1
  9c:	90 e8       	ldi	r25, 0x80	; 128
  9e:	e9 2e       	mov	r14, r25
  a0:	9f e3       	ldi	r25, 0x3F	; 63
  a2:	f9 2e       	mov	r15, r25
  a4:	c7 01       	movw	r24, r14
  a6:	b6 01       	movw	r22, r12
  a8:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  ac:	28 e4       	ldi	r18, 0x48	; 72
  ae:	33 e3       	ldi	r19, 0x33	; 51
  b0:	47 e4       	ldi	r20, 0x47	; 71
  b2:	50 e4       	ldi	r21, 0x40	; 64
  b4:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  b8:	20 e0       	ldi	r18, 0x00	; 0
  ba:	30 ec       	ldi	r19, 0xC0	; 192
  bc:	48 ea       	ldi	r20, 0xA8	; 168
  be:	57 e4       	ldi	r21, 0x47	; 71
  c0:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  c4:	0e 94 00 00 	call	0	; 0x0 <daylight_seconds>
  c8:	ff 90       	pop	r15
  ca:	ef 90       	pop	r14
  cc:	df 90       	pop	r13
  ce:	cf 90       	pop	r12
  d0:	bf 90       	pop	r11
  d2:	af 90       	pop	r10
  d4:	9f 90       	pop	r9
  d6:	8f 90       	pop	r8
  d8:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

difftime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <difftime>:
   0:	62 1b       	sub	r22, r18
   2:	73 0b       	sbc	r23, r19
   4:	84 0b       	sbc	r24, r20
   6:	95 0b       	sbc	r25, r21
   8:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

dst_pointer.o:     формат файла elf32-avr


Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

equation_of_time.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <equation_of_time>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	fc 01       	movw	r30, r24
  12:	80 80       	ld	r8, Z
  14:	91 80       	ldd	r9, Z+1	; 0x01
  16:	a2 80       	ldd	r10, Z+2	; 0x02
  18:	b3 80       	ldd	r11, Z+3	; 0x03
  1a:	c5 01       	movw	r24, r10
  1c:	b4 01       	movw	r22, r8
  1e:	21 e2       	ldi	r18, 0x21	; 33
  20:	3b e8       	ldi	r19, 0x8B	; 139
  22:	41 ee       	ldi	r20, 0xE1	; 225
  24:	51 e0       	ldi	r21, 0x01	; 1
  26:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  2a:	60 55       	subi	r22, 0x50	; 80
  2c:	76 42       	sbci	r23, 0x26	; 38
  2e:	82 42       	sbci	r24, 0x22	; 34
  30:	9e 4f       	sbci	r25, 0xFE	; 254
  32:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  36:	21 eb       	ldi	r18, 0xB1	; 177
  38:	37 e4       	ldi	r19, 0x47	; 71
  3a:	49 e9       	ldi	r20, 0x99	; 153
  3c:	5a e4       	ldi	r21, 0x4A	; 74
  3e:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  42:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  46:	6b 01       	movw	r12, r22
  48:	7c 01       	movw	r14, r24
  4a:	c5 01       	movw	r24, r10
  4c:	b4 01       	movw	r22, r8
  4e:	2d e3       	ldi	r18, 0x3D	; 61
  50:	35 e8       	ldi	r19, 0x85	; 133
  52:	41 ee       	ldi	r20, 0xE1	; 225
  54:	51 e0       	ldi	r21, 0x01	; 1
  56:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  5a:	60 5c       	subi	r22, 0xC0	; 192
  5c:	7d 43       	sbci	r23, 0x3D	; 61
  5e:	83 4f       	sbci	r24, 0xF3	; 243
  60:	9f 4f       	sbci	r25, 0xFF	; 255
  62:	66 0f       	add	r22, r22
  64:	77 1f       	adc	r23, r23
  66:	88 1f       	adc	r24, r24
  68:	99 1f       	adc	r25, r25
  6a:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  6e:	21 ed       	ldi	r18, 0xD1	; 209
  70:	35 e4       	ldi	r19, 0x45	; 69
  72:	49 e9       	ldi	r20, 0x99	; 153
  74:	5a e4       	ldi	r21, 0x4A	; 74
  76:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  7a:	4b 01       	movw	r8, r22
  7c:	5c 01       	movw	r10, r24
  7e:	2f ed       	ldi	r18, 0xDF	; 223
  80:	33 ee       	ldi	r19, 0xE3	; 227
  82:	48 e0       	ldi	r20, 0x08	; 8
  84:	5d e3       	ldi	r21, 0x3D	; 61
  86:	c7 01       	movw	r24, r14
  88:	b6 01       	movw	r22, r12
  8a:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  8e:	9b 01       	movw	r18, r22
  90:	ac 01       	movw	r20, r24
  92:	c5 01       	movw	r24, r10
  94:	b4 01       	movw	r22, r8
  96:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  9a:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  9e:	4b 01       	movw	r8, r22
  a0:	5c 01       	movw	r10, r24
  a2:	2d ec       	ldi	r18, 0xCD	; 205
  a4:	3c ec       	ldi	r19, 0xCC	; 204
  a6:	45 ee       	ldi	r20, 0xE5	; 229
  a8:	53 e4       	ldi	r21, 0x43	; 67
  aa:	c7 01       	movw	r24, r14
  ac:	b6 01       	movw	r22, r12
  ae:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  b2:	6b 01       	movw	r12, r22
  b4:	7c 01       	movw	r14, r24
  b6:	2d ec       	ldi	r18, 0xCD	; 205
  b8:	3c e0       	ldi	r19, 0x0C	; 12
  ba:	44 e1       	ldi	r20, 0x14	; 20
  bc:	54 e4       	ldi	r21, 0x44	; 68
  be:	c5 01       	movw	r24, r10
  c0:	b4 01       	movw	r22, r8
  c2:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  c6:	9b 01       	movw	r18, r22
  c8:	ac 01       	movw	r20, r24
  ca:	c7 01       	movw	r24, r14
  cc:	b6 01       	movw	r22, r12
  ce:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  d2:	0e 94 00 00 	call	0	; 0x0 <equation_of_time>
  d6:	88 27       	eor	r24, r24
  d8:	99 27       	eor	r25, r25
  da:	86 1b       	sub	r24, r22
  dc:	97 0b       	sbc	r25, r23
  de:	ff 90       	pop	r15
  e0:	ef 90       	pop	r14
  e2:	df 90       	pop	r13
  e4:	cf 90       	pop	r12
  e6:	bf 90       	pop	r11
  e8:	af 90       	pop	r10
  ea:	9f 90       	pop	r9
  ec:	8f 90       	pop	r8
  ee:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

fatfs_time.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <fat_time>:
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	0f 93       	push	r16
  1a:	1f 93       	push	r17
  1c:	fc 01       	movw	r30, r24
  1e:	c6 80       	ldd	r12, Z+6	; 0x06
  20:	d7 80       	ldd	r13, Z+7	; 0x07
  22:	80 e5       	ldi	r24, 0x50	; 80
  24:	c8 1a       	sub	r12, r24
  26:	d1 08       	sbc	r13, r1
  28:	ee 24       	eor	r14, r14
  2a:	d7 fc       	sbrc	r13, 7
  2c:	e0 94       	com	r14
  2e:	fe 2c       	mov	r15, r14
  30:	59 e1       	ldi	r21, 0x19	; 25
  32:	cc 0c       	add	r12, r12
  34:	dd 1c       	adc	r13, r13
  36:	ee 1c       	adc	r14, r14
  38:	ff 1c       	adc	r15, r15
  3a:	5a 95       	dec	r21
  3c:	01 f4       	brne	.+0      	; 0x3e <fat_time+0x3e>
  3e:	85 80       	ldd	r8, Z+5	; 0x05
  40:	99 24       	eor	r9, r9
  42:	87 fc       	sbrc	r8, 7
  44:	90 94       	com	r9
  46:	8f ef       	ldi	r24, 0xFF	; 255
  48:	88 1a       	sub	r8, r24
  4a:	98 0a       	sbc	r9, r24
  4c:	aa 24       	eor	r10, r10
  4e:	97 fc       	sbrc	r9, 7
  50:	a0 94       	com	r10
  52:	ba 2c       	mov	r11, r10
  54:	43 80       	ldd	r4, Z+3	; 0x03
  56:	55 24       	eor	r5, r5
  58:	47 fc       	sbrc	r4, 7
  5a:	50 94       	com	r5
  5c:	65 2c       	mov	r6, r5
  5e:	75 2c       	mov	r7, r5
  60:	02 81       	ldd	r16, Z+2	; 0x02
  62:	11 27       	eor	r17, r17
  64:	07 fd       	sbrc	r16, 7
  66:	10 95       	com	r17
  68:	21 2f       	mov	r18, r17
  6a:	31 2f       	mov	r19, r17
  6c:	41 81       	ldd	r20, Z+1	; 0x01
  6e:	55 27       	eor	r21, r21
  70:	47 fd       	sbrc	r20, 7
  72:	50 95       	com	r21
  74:	65 2f       	mov	r22, r21
  76:	75 2f       	mov	r23, r21
  78:	ab e0       	ldi	r26, 0x0B	; 11
  7a:	00 0f       	add	r16, r16
  7c:	11 1f       	adc	r17, r17
  7e:	22 1f       	adc	r18, r18
  80:	33 1f       	adc	r19, r19
  82:	aa 95       	dec	r26
  84:	01 f4       	brne	.+0      	; 0x86 <fat_time+0x86>
  86:	32 01       	movw	r6, r4
  88:	55 24       	eor	r5, r5
  8a:	44 24       	eor	r4, r4
  8c:	04 29       	or	r16, r4
  8e:	15 29       	or	r17, r5
  90:	26 29       	or	r18, r6
  92:	37 29       	or	r19, r7
  94:	85 e0       	ldi	r24, 0x05	; 5
  96:	44 0f       	add	r20, r20
  98:	55 1f       	adc	r21, r21
  9a:	66 1f       	adc	r22, r22
  9c:	77 1f       	adc	r23, r23
  9e:	8a 95       	dec	r24
  a0:	01 f4       	brne	.+0      	; 0xa2 <fat_time+0xa2>
  a2:	04 2b       	or	r16, r20
  a4:	15 2b       	or	r17, r21
  a6:	26 2b       	or	r18, r22
  a8:	37 2b       	or	r19, r23
  aa:	80 81       	ld	r24, Z
  ac:	87 fd       	sbrc	r24, 7
  ae:	8f 5f       	subi	r24, 0xFF	; 255
  b0:	68 2f       	mov	r22, r24
  b2:	65 95       	asr	r22
  b4:	77 27       	eor	r23, r23
  b6:	67 fd       	sbrc	r22, 7
  b8:	70 95       	com	r23
  ba:	87 2f       	mov	r24, r23
  bc:	97 2f       	mov	r25, r23
  be:	60 2b       	or	r22, r16
  c0:	71 2b       	or	r23, r17
  c2:	82 2b       	or	r24, r18
  c4:	93 2b       	or	r25, r19
  c6:	6c 29       	or	r22, r12
  c8:	7d 29       	or	r23, r13
  ca:	8e 29       	or	r24, r14
  cc:	9f 29       	or	r25, r15
  ce:	95 01       	movw	r18, r10
  d0:	84 01       	movw	r16, r8
  d2:	45 e1       	ldi	r20, 0x15	; 21
  d4:	00 0f       	add	r16, r16
  d6:	11 1f       	adc	r17, r17
  d8:	22 1f       	adc	r18, r18
  da:	33 1f       	adc	r19, r19
  dc:	4a 95       	dec	r20
  de:	01 f4       	brne	.+0      	; 0xe0 <fat_time+0xe0>
  e0:	60 2b       	or	r22, r16
  e2:	71 2b       	or	r23, r17
  e4:	82 2b       	or	r24, r18
  e6:	93 2b       	or	r25, r19
  e8:	1f 91       	pop	r17
  ea:	0f 91       	pop	r16
  ec:	ff 90       	pop	r15
  ee:	ef 90       	pop	r14
  f0:	df 90       	pop	r13
  f2:	cf 90       	pop	r12
  f4:	bf 90       	pop	r11
  f6:	af 90       	pop	r10
  f8:	9f 90       	pop	r9
  fa:	8f 90       	pop	r8
  fc:	7f 90       	pop	r7
  fe:	6f 90       	pop	r6
 100:	5f 90       	pop	r5
 102:	4f 90       	pop	r4
 104:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

geo_location.o:     формат файла elf32-avr


Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

gm_sidereal.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <gm_sidereal>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	fc 01       	movw	r30, r24
  12:	60 81       	ld	r22, Z
  14:	71 81       	ldd	r23, Z+1	; 0x01
  16:	82 81       	ldd	r24, Z+2	; 0x02
  18:	93 81       	ldd	r25, Z+3	; 0x03
  1a:	20 e4       	ldi	r18, 0x40	; 64
  1c:	37 eb       	ldi	r19, 0xB7	; 183
  1e:	49 e5       	ldi	r20, 0x59	; 89
  20:	50 e8       	ldi	r21, 0x80	; 128
  22:	0e 94 00 00 	call	0	; 0x0 <gm_sidereal>
  26:	0f e1       	ldi	r16, 0x1F	; 31
  28:	0e 94 00 00 	call	0	; 0x0 <gm_sidereal>
  2c:	29 54       	subi	r18, 0x49	; 73
  2e:	32 4a       	sbci	r19, 0xA2	; 162
  30:	4f 4f       	sbci	r20, 0xFF	; 255
  32:	5f 4f       	sbci	r21, 0xFF	; 255
  34:	6f 4f       	sbci	r22, 0xFF	; 255
  36:	7f 4f       	sbci	r23, 0xFF	; 255
  38:	8f 4f       	sbci	r24, 0xFF	; 255
  3a:	9f 4f       	sbci	r25, 0xFF	; 255
  3c:	e0 e8       	ldi	r30, 0x80	; 128
  3e:	ae 2e       	mov	r10, r30
  40:	f1 e5       	ldi	r31, 0x51	; 81
  42:	bf 2e       	mov	r11, r31
  44:	cc 24       	eor	r12, r12
  46:	c3 94       	inc	r12
  48:	d1 2c       	mov	r13, r1
  4a:	e1 2c       	mov	r14, r1
  4c:	f1 2c       	mov	r15, r1
  4e:	00 e0       	ldi	r16, 0x00	; 0
  50:	10 e0       	ldi	r17, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <gm_sidereal>
  56:	b9 01       	movw	r22, r18
  58:	ca 01       	movw	r24, r20
  5a:	1f 91       	pop	r17
  5c:	0f 91       	pop	r16
  5e:	ff 90       	pop	r15
  60:	ef 90       	pop	r14
  62:	df 90       	pop	r13
  64:	cf 90       	pop	r12
  66:	bf 90       	pop	r11
  68:	af 90       	pop	r10
  6a:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

gmtime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <gmtime>:
   0:	60 e0       	ldi	r22, 0x00	; 0
   2:	70 e0       	ldi	r23, 0x00	; 0
   4:	0e 94 00 00 	call	0	; 0x0 <gmtime>
   8:	80 e0       	ldi	r24, 0x00	; 0
   a:	90 e0       	ldi	r25, 0x00	; 0
   c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

gmtime_r.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <gmtime_r>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	28 97       	sbiw	r28, 0x08	; 8
  16:	0f b6       	in	r0, 0x3f	; 63
  18:	f8 94       	cli
  1a:	de bf       	out	0x3e, r29	; 62
  1c:	0f be       	out	0x3f, r0	; 63
  1e:	cd bf       	out	0x3d, r28	; 61
  20:	8b 01       	movw	r16, r22
  22:	fc 01       	movw	r30, r24
  24:	60 81       	ld	r22, Z
  26:	71 81       	ldd	r23, Z+1	; 0x01
  28:	82 81       	ldd	r24, Z+2	; 0x02
  2a:	93 81       	ldd	r25, Z+3	; 0x03
  2c:	20 e8       	ldi	r18, 0x80	; 128
  2e:	31 e5       	ldi	r19, 0x51	; 81
  30:	41 e0       	ldi	r20, 0x01	; 1
  32:	50 e0       	ldi	r21, 0x00	; 0
  34:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
  38:	69 01       	movw	r12, r18
  3a:	7a 01       	movw	r14, r20
  3c:	2c e3       	ldi	r18, 0x3C	; 60
  3e:	30 e0       	ldi	r19, 0x00	; 0
  40:	40 e0       	ldi	r20, 0x00	; 0
  42:	50 e0       	ldi	r21, 0x00	; 0
  44:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
  48:	29 83       	std	Y+1, r18	; 0x01
  4a:	3a 83       	std	Y+2, r19	; 0x02
  4c:	4b 83       	std	Y+3, r20	; 0x03
  4e:	5c 83       	std	Y+4, r21	; 0x04
  50:	89 81       	ldd	r24, Y+1	; 0x01
  52:	9a 81       	ldd	r25, Y+2	; 0x02
  54:	ab 81       	ldd	r26, Y+3	; 0x03
  56:	bc 81       	ldd	r27, Y+4	; 0x04
  58:	f8 01       	movw	r30, r16
  5a:	60 83       	st	Z, r22
  5c:	6c e3       	ldi	r22, 0x3C	; 60
  5e:	70 e0       	ldi	r23, 0x00	; 0
  60:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
  64:	dc 01       	movw	r26, r24
  66:	cb 01       	movw	r24, r22
  68:	f8 01       	movw	r30, r16
  6a:	a1 83       	std	Z+1, r26	; 0x01
  6c:	82 83       	std	Z+2, r24	; 0x02
  6e:	c6 01       	movw	r24, r12
  70:	06 96       	adiw	r24, 0x06	; 6
  72:	67 e0       	ldi	r22, 0x07	; 7
  74:	70 e0       	ldi	r23, 0x00	; 0
  76:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
  7a:	84 83       	std	Z+4, r24	; 0x04
  7c:	2d ea       	ldi	r18, 0xAD	; 173
  7e:	3e e8       	ldi	r19, 0x8E	; 142
  80:	40 e0       	ldi	r20, 0x00	; 0
  82:	50 e0       	ldi	r21, 0x00	; 0
  84:	c7 01       	movw	r24, r14
  86:	b6 01       	movw	r22, r12
  88:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
  8c:	29 83       	std	Y+1, r18	; 0x01
  8e:	3a 83       	std	Y+2, r19	; 0x02
  90:	6d 83       	std	Y+5, r22	; 0x05
  92:	7e 83       	std	Y+6, r23	; 0x06
  94:	8f 83       	std	Y+7, r24	; 0x07
  96:	98 87       	std	Y+8, r25	; 0x08
  98:	89 81       	ldd	r24, Y+1	; 0x01
  9a:	9a 81       	ldd	r25, Y+2	; 0x02
  9c:	24 e6       	ldi	r18, 0x64	; 100
  9e:	28 9f       	mul	r18, r24
  a0:	60 01       	movw	r12, r0
  a2:	29 9f       	mul	r18, r25
  a4:	d0 0c       	add	r13, r0
  a6:	11 24       	eor	r1, r1
  a8:	6d 81       	ldd	r22, Y+5	; 0x05
  aa:	7e 81       	ldd	r23, Y+6	; 0x06
  ac:	8f 81       	ldd	r24, Y+7	; 0x07
  ae:	98 85       	ldd	r25, Y+8	; 0x08
  b0:	25 eb       	ldi	r18, 0xB5	; 181
  b2:	35 e0       	ldi	r19, 0x05	; 5
  b4:	40 e0       	ldi	r20, 0x00	; 0
  b6:	50 e0       	ldi	r21, 0x00	; 0
  b8:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
  bc:	29 83       	std	Y+1, r18	; 0x01
  be:	3a 83       	std	Y+2, r19	; 0x02
  c0:	6d 83       	std	Y+5, r22	; 0x05
  c2:	7e 83       	std	Y+6, r23	; 0x06
  c4:	e9 80       	ldd	r14, Y+1	; 0x01
  c6:	fa 80       	ldd	r15, Y+2	; 0x02
  c8:	ee 0c       	add	r14, r14
  ca:	ff 1c       	adc	r15, r15
  cc:	ee 0c       	add	r14, r14
  ce:	ff 1c       	adc	r15, r15
  d0:	ec 0c       	add	r14, r12
  d2:	fd 1c       	adc	r15, r13
  d4:	8d 81       	ldd	r24, Y+5	; 0x05
  d6:	9e 81       	ldd	r25, Y+6	; 0x06
  d8:	f5 e6       	ldi	r31, 0x65	; 101
  da:	ef 16       	cp	r14, r31
  dc:	f1 04       	cpc	r15, r1
  de:	00 f0       	brcs	.+0      	; 0xe0 <gmtime_r+0xe0>
  e0:	01 96       	adiw	r24, 0x01	; 1
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <gmtime_r+0xe4>
  e4:	24 e6       	ldi	r18, 0x64	; 100
  e6:	e2 16       	cp	r14, r18
  e8:	f1 04       	cpc	r15, r1
  ea:	01 f0       	breq	.+0      	; 0xec <gmtime_r+0xec>
  ec:	21 e0       	ldi	r18, 0x01	; 1
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <gmtime_r+0xf2>
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	a9 01       	movw	r20, r18
  f8:	44 59       	subi	r20, 0x94	; 148
  fa:	5e 4f       	sbci	r21, 0xFE	; 254
  fc:	48 17       	cp	r20, r24
  fe:	59 07       	cpc	r21, r25
 100:	00 f4       	brcc	.+0      	; 0x102 <gmtime_r+0x102>
 102:	6d e6       	ldi	r22, 0x6D	; 109
 104:	71 e0       	ldi	r23, 0x01	; 1
 106:	82 1b       	sub	r24, r18
 108:	93 0b       	sbc	r25, r19
 10a:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
 10e:	dc 01       	movw	r26, r24
 110:	cb 01       	movw	r24, r22
 112:	e8 0e       	add	r14, r24
 114:	f9 1e       	adc	r15, r25
 116:	cd 01       	movw	r24, r26
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	44 e6       	ldi	r20, 0x64	; 100
 11e:	e4 0e       	add	r14, r20
 120:	f1 1c       	adc	r15, r1
 122:	f8 01       	movw	r30, r16
 124:	f7 82       	std	Z+7, r15	; 0x07
 126:	e6 82       	std	Z+6, r14	; 0x06
 128:	91 87       	std	Z+9, r25	; 0x09
 12a:	80 87       	std	Z+8, r24	; 0x08
 12c:	25 5c       	subi	r18, 0xC5	; 197
 12e:	3f 4f       	sbci	r19, 0xFF	; 255
 130:	82 17       	cp	r24, r18
 132:	93 07       	cpc	r25, r19
 134:	00 f4       	brcc	.+0      	; 0x136 <gmtime_r+0x136>
 136:	6f e1       	ldi	r22, 0x1F	; 31
 138:	70 e0       	ldi	r23, 0x00	; 0
 13a:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
 13e:	dc 01       	movw	r26, r24
 140:	cb 01       	movw	r24, r22
 142:	f8 01       	movw	r30, r16
 144:	85 83       	std	Z+5, r24	; 0x05
 146:	00 c0       	rjmp	.+0      	; 0x148 <gmtime_r+0x148>
 148:	69 e9       	ldi	r22, 0x99	; 153
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	82 1b       	sub	r24, r18
 14e:	93 0b       	sbc	r25, r19
 150:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
 154:	dc 01       	movw	r26, r24
 156:	cb 01       	movw	r24, r22
 158:	f8 2e       	mov	r15, r24
 15a:	ff 0c       	add	r15, r15
 15c:	ff 0c       	add	r15, r15
 15e:	f8 0e       	add	r15, r24
 160:	6d e3       	ldi	r22, 0x3D	; 61
 162:	70 e0       	ldi	r23, 0x00	; 0
 164:	cd 01       	movw	r24, r26
 166:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
 16a:	dc 01       	movw	r26, r24
 16c:	cb 01       	movw	r24, r22
 16e:	e8 2e       	mov	r14, r24
 170:	ee 0c       	add	r14, r14
 172:	6f e1       	ldi	r22, 0x1F	; 31
 174:	70 e0       	ldi	r23, 0x00	; 0
 176:	cd 01       	movw	r24, r26
 178:	0e 94 00 00 	call	0	; 0x0 <gmtime_r>
 17c:	dc 01       	movw	r26, r24
 17e:	cb 01       	movw	r24, r22
 180:	22 e0       	ldi	r18, 0x02	; 2
 182:	28 0f       	add	r18, r24
 184:	2f 0d       	add	r18, r15
 186:	2e 0d       	add	r18, r14
 188:	f8 01       	movw	r30, r16
 18a:	25 83       	std	Z+5, r18	; 0x05
 18c:	a3 83       	std	Z+3, r26	; 0x03
 18e:	f8 01       	movw	r30, r16
 190:	13 86       	std	Z+11, r1	; 0x0b
 192:	12 86       	std	Z+10, r1	; 0x0a
 194:	83 81       	ldd	r24, Z+3	; 0x03
 196:	8f 5f       	subi	r24, 0xFF	; 255
 198:	83 83       	std	Z+3, r24	; 0x03
 19a:	28 96       	adiw	r28, 0x08	; 8
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	f8 94       	cli
 1a0:	de bf       	out	0x3e, r29	; 62
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	cd bf       	out	0x3d, r28	; 61
 1a6:	df 91       	pop	r29
 1a8:	cf 91       	pop	r28
 1aa:	1f 91       	pop	r17
 1ac:	0f 91       	pop	r16
 1ae:	ff 90       	pop	r15
 1b0:	ef 90       	pop	r14
 1b2:	df 90       	pop	r13
 1b4:	cf 90       	pop	r12
 1b6:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

isLeap.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <is_leap_year>:
   0:	9c 01       	movw	r18, r24
   2:	23 70       	andi	r18, 0x03	; 3
   4:	33 27       	eor	r19, r19
   6:	23 2b       	or	r18, r19
   8:	01 f4       	brne	.+0      	; 0xa <is_leap_year+0xa>
   a:	64 e6       	ldi	r22, 0x64	; 100
   c:	70 e0       	ldi	r23, 0x00	; 0
   e:	0e 94 00 00 	call	0	; 0x0 <is_leap_year>
  12:	89 2b       	or	r24, r25
  14:	01 f4       	brne	.+0      	; 0x16 <is_leap_year+0x16>
  16:	63 70       	andi	r22, 0x03	; 3
  18:	77 27       	eor	r23, r23
  1a:	81 e0       	ldi	r24, 0x01	; 1
  1c:	67 2b       	or	r22, r23
  1e:	01 f0       	breq	.+0      	; 0x20 <is_leap_year+0x20>
  20:	80 e0       	ldi	r24, 0x00	; 0
  22:	08 95       	ret
  24:	81 e0       	ldi	r24, 0x01	; 1
  26:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

isotime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <isotime>:
   0:	60 91 00 00 	lds	r22, 0x0000
   4:	70 91 00 00 	lds	r23, 0x0000
   8:	0e 94 00 00 	call	0	; 0x0 <isotime>
   c:	80 91 00 00 	lds	r24, 0x0000
  10:	90 91 00 00 	lds	r25, 0x0000
  14:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

iso_week_date.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <iso_week_date>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	c0 91 00 00 	lds	r28, 0x0000
   8:	d0 91 00 00 	lds	r29, 0x0000
   c:	ae 01       	movw	r20, r28
   e:	0e 94 00 00 	call	0	; 0x0 <iso_week_date>
  12:	ce 01       	movw	r24, r28
  14:	df 91       	pop	r29
  16:	cf 91       	pop	r28
  18:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

iso_week_date_r.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <iso_week_date_r>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	7c 01       	movw	r14, r24
  12:	6b 01       	movw	r12, r22
  14:	8a 01       	movw	r16, r20
  16:	da 01       	movw	r26, r20
  18:	8d 93       	st	X+, r24
  1a:	9c 93       	st	X, r25
  1c:	0e 94 00 00 	call	0	; 0x0 <iso_week_date_r>
  20:	e8 2f       	mov	r30, r24
  22:	a7 01       	movw	r20, r14
  24:	40 5d       	subi	r20, 0xD0	; 208
  26:	57 40       	sbci	r21, 0x07	; 7
  28:	8d e6       	ldi	r24, 0x6D	; 109
  2a:	91 e0       	ldi	r25, 0x01	; 1
  2c:	48 9f       	mul	r20, r24
  2e:	90 01       	movw	r18, r0
  30:	49 9f       	mul	r20, r25
  32:	30 0d       	add	r19, r0
  34:	58 9f       	mul	r21, r24
  36:	30 0d       	add	r19, r0
  38:	11 24       	eor	r1, r1
  3a:	2c 0d       	add	r18, r12
  3c:	3d 1d       	adc	r19, r13
  3e:	41 15       	cp	r20, r1
  40:	51 05       	cpc	r21, r1
  42:	01 f0       	breq	.+0      	; 0x44 <iso_week_date_r+0x44>
  44:	ba 01       	movw	r22, r20
  46:	76 95       	lsr	r23
  48:	67 95       	ror	r22
  4a:	76 95       	lsr	r23
  4c:	67 95       	ror	r22
  4e:	6f 5f       	subi	r22, 0xFF	; 255
  50:	7f 4f       	sbci	r23, 0xFF	; 255
  52:	26 0f       	add	r18, r22
  54:	37 1f       	adc	r19, r23
  56:	2e 1b       	sub	r18, r30
  58:	31 09       	sbc	r19, r1
  5a:	45 36       	cpi	r20, 0x65	; 101
  5c:	51 05       	cpc	r21, r1
  5e:	00 f0       	brcs	.+0      	; 0x60 <iso_week_date_r+0x60>
  60:	21 50       	subi	r18, 0x01	; 1
  62:	31 09       	sbc	r19, r1
  64:	c9 01       	movw	r24, r18
  66:	06 96       	adiw	r24, 0x06	; 6
  68:	67 e0       	ldi	r22, 0x07	; 7
  6a:	70 e0       	ldi	r23, 0x00	; 0
  6c:	0e 94 00 00 	call	0	; 0x0 <iso_week_date_r>
  70:	ec 01       	movw	r28, r24
  72:	00 97       	sbiw	r24, 0x00	; 0
  74:	01 f4       	brne	.+0      	; 0x76 <iso_week_date_r+0x76>
  76:	c7 e0       	ldi	r28, 0x07	; 7
  78:	d0 e0       	ldi	r29, 0x00	; 0
  7a:	d8 01       	movw	r26, r16
  7c:	15 96       	adiw	r26, 0x05	; 5
  7e:	dc 93       	st	X, r29
  80:	ce 93       	st	-X, r28
  82:	14 97       	sbiw	r26, 0x04	; 4
  84:	c6 01       	movw	r24, r12
  86:	0b 96       	adiw	r24, 0x0b	; 11
  88:	8c 1b       	sub	r24, r28
  8a:	9d 0b       	sbc	r25, r29
  8c:	67 e0       	ldi	r22, 0x07	; 7
  8e:	70 e0       	ldi	r23, 0x00	; 0
  90:	0e 94 00 00 	call	0	; 0x0 <iso_week_date_r>
  94:	65 33       	cpi	r22, 0x35	; 53
  96:	71 05       	cpc	r23, r1
  98:	01 f4       	brne	.+0      	; 0x9a <iso_week_date_r+0x9a>
  9a:	21 97       	sbiw	r28, 0x01	; 1
  9c:	cc 1a       	sub	r12, r28
  9e:	dd 0a       	sbc	r13, r29
  a0:	b3 e0       	ldi	r27, 0x03	; 3
  a2:	cb 0e       	add	r12, r27
  a4:	d1 1c       	adc	r13, r1
  a6:	8e 2f       	mov	r24, r30
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	84 59       	subi	r24, 0x94	; 148
  ac:	9e 4f       	sbci	r25, 0xFE	; 254
  ae:	8c 15       	cp	r24, r12
  b0:	9d 05       	cpc	r25, r13
  b2:	04 f4       	brge	.+0      	; 0xb4 <iso_week_date_r+0xb4>
  b4:	f8 01       	movw	r30, r16
  b6:	80 81       	ld	r24, Z
  b8:	91 81       	ldd	r25, Z+1	; 0x01
  ba:	01 96       	adiw	r24, 0x01	; 1
  bc:	91 83       	std	Z+1, r25	; 0x01
  be:	80 83       	st	Z, r24
  c0:	61 e0       	ldi	r22, 0x01	; 1
  c2:	70 e0       	ldi	r23, 0x00	; 0
  c4:	d8 01       	movw	r26, r16
  c6:	13 96       	adiw	r26, 0x03	; 3
  c8:	7c 93       	st	X, r23
  ca:	6e 93       	st	-X, r22
  cc:	12 97       	sbiw	r26, 0x02	; 2
  ce:	67 2b       	or	r22, r23
  d0:	01 f4       	brne	.+0      	; 0xd2 <iso_week_date_r+0xd2>
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	eb 1a       	sub	r14, r27
  d6:	f1 08       	sbc	r15, r1
  d8:	c7 01       	movw	r24, r14
  da:	0e 94 00 00 	call	0	; 0x0 <iso_week_date_r>
  de:	68 2f       	mov	r22, r24
  e0:	70 e0       	ldi	r23, 0x00	; 0
  e2:	64 59       	subi	r22, 0x94	; 148
  e4:	7e 4f       	sbci	r23, 0xFE	; 254
  e6:	a8 01       	movw	r20, r16
  e8:	c7 01       	movw	r24, r14
  ea:	0e 94 00 00 	call	0	; 0x0 <iso_week_date_r>
  ee:	f8 01       	movw	r30, r16
  f0:	d5 83       	std	Z+5, r29	; 0x05
  f2:	c4 83       	std	Z+4, r28	; 0x04
  f4:	df 91       	pop	r29
  f6:	cf 91       	pop	r28
  f8:	1f 91       	pop	r17
  fa:	0f 91       	pop	r16
  fc:	ff 90       	pop	r15
  fe:	ef 90       	pop	r14
 100:	df 90       	pop	r13
 102:	cf 90       	pop	r12
 104:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

isotime_r.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <isotime_r>:
   0:	ef 92       	push	r14
   2:	ff 92       	push	r15
   4:	0f 93       	push	r16
   6:	1f 93       	push	r17
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	8c 01       	movw	r16, r24
   e:	eb 01       	movw	r28, r22
  10:	fc 01       	movw	r30, r24
  12:	86 81       	ldd	r24, Z+6	; 0x06
  14:	97 81       	ldd	r25, Z+7	; 0x07
  16:	84 59       	subi	r24, 0x94	; 148
  18:	98 4f       	sbci	r25, 0xF8	; 248
  1a:	64 e6       	ldi	r22, 0x64	; 100
  1c:	70 e0       	ldi	r23, 0x00	; 0
  1e:	0e 94 00 00 	call	0	; 0x0 <isotime_r>
  22:	9b 01       	movw	r18, r22
  24:	7c 01       	movw	r14, r24
  26:	4d e2       	ldi	r20, 0x2D	; 45
  28:	be 01       	movw	r22, r28
  2a:	c9 01       	movw	r24, r18
  2c:	0e 94 00 00 	call	0	; 0x0 <isotime_r>
  30:	be 01       	movw	r22, r28
  32:	6e 5f       	subi	r22, 0xFE	; 254
  34:	7f 4f       	sbci	r23, 0xFF	; 255
  36:	4d e2       	ldi	r20, 0x2D	; 45
  38:	c7 01       	movw	r24, r14
  3a:	0e 94 00 00 	call	0	; 0x0 <isotime_r>
  3e:	be 01       	movw	r22, r28
  40:	6b 5f       	subi	r22, 0xFB	; 251
  42:	7f 4f       	sbci	r23, 0xFF	; 255
  44:	f8 01       	movw	r30, r16
  46:	85 81       	ldd	r24, Z+5	; 0x05
  48:	99 27       	eor	r25, r25
  4a:	87 fd       	sbrc	r24, 7
  4c:	90 95       	com	r25
  4e:	4d e2       	ldi	r20, 0x2D	; 45
  50:	01 96       	adiw	r24, 0x01	; 1
  52:	0e 94 00 00 	call	0	; 0x0 <isotime_r>
  56:	be 01       	movw	r22, r28
  58:	68 5f       	subi	r22, 0xF8	; 248
  5a:	7f 4f       	sbci	r23, 0xFF	; 255
  5c:	f8 01       	movw	r30, r16
  5e:	83 81       	ldd	r24, Z+3	; 0x03
  60:	40 e2       	ldi	r20, 0x20	; 32
  62:	99 27       	eor	r25, r25
  64:	87 fd       	sbrc	r24, 7
  66:	90 95       	com	r25
  68:	0e 94 00 00 	call	0	; 0x0 <isotime_r>
  6c:	be 01       	movw	r22, r28
  6e:	65 5f       	subi	r22, 0xF5	; 245
  70:	7f 4f       	sbci	r23, 0xFF	; 255
  72:	f8 01       	movw	r30, r16
  74:	82 81       	ldd	r24, Z+2	; 0x02
  76:	4a e3       	ldi	r20, 0x3A	; 58
  78:	99 27       	eor	r25, r25
  7a:	87 fd       	sbrc	r24, 7
  7c:	90 95       	com	r25
  7e:	0e 94 00 00 	call	0	; 0x0 <isotime_r>
  82:	be 01       	movw	r22, r28
  84:	62 5f       	subi	r22, 0xF2	; 242
  86:	7f 4f       	sbci	r23, 0xFF	; 255
  88:	f8 01       	movw	r30, r16
  8a:	81 81       	ldd	r24, Z+1	; 0x01
  8c:	4a e3       	ldi	r20, 0x3A	; 58
  8e:	99 27       	eor	r25, r25
  90:	87 fd       	sbrc	r24, 7
  92:	90 95       	com	r25
  94:	0e 94 00 00 	call	0	; 0x0 <isotime_r>
  98:	be 01       	movw	r22, r28
  9a:	6f 5e       	subi	r22, 0xEF	; 239
  9c:	7f 4f       	sbci	r23, 0xFF	; 255
  9e:	f8 01       	movw	r30, r16
  a0:	80 81       	ld	r24, Z
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	99 27       	eor	r25, r25
  a6:	87 fd       	sbrc	r24, 7
  a8:	90 95       	com	r25
  aa:	df 91       	pop	r29
  ac:	cf 91       	pop	r28
  ae:	1f 91       	pop	r17
  b0:	0f 91       	pop	r16
  b2:	ff 90       	pop	r15
  b4:	ef 90       	pop	r14
  b6:	0c 94 00 00 	jmp	0	; 0x0 <isotime_r>

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

lm_sidereal.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <lm_sidereal>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0e 94 00 00 	call	0	; 0x0 <lm_sidereal>
   c:	6b 01       	movw	r12, r22
   e:	7c 01       	movw	r14, r24
  10:	60 91 00 00 	lds	r22, 0x0000
  14:	70 91 00 00 	lds	r23, 0x0000
  18:	80 91 00 00 	lds	r24, 0x0000
  1c:	90 91 00 00 	lds	r25, 0x0000
  20:	2f e0       	ldi	r18, 0x0F	; 15
  22:	30 e0       	ldi	r19, 0x00	; 0
  24:	40 e0       	ldi	r20, 0x00	; 0
  26:	50 e0       	ldi	r21, 0x00	; 0
  28:	0e 94 00 00 	call	0	; 0x0 <lm_sidereal>
  2c:	c2 0e       	add	r12, r18
  2e:	d3 1e       	adc	r13, r19
  30:	e4 1e       	adc	r14, r20
  32:	f5 1e       	adc	r15, r21
  34:	80 e8       	ldi	r24, 0x80	; 128
  36:	c8 0e       	add	r12, r24
  38:	81 e5       	ldi	r24, 0x51	; 81
  3a:	d8 1e       	adc	r13, r24
  3c:	81 e0       	ldi	r24, 0x01	; 1
  3e:	e8 1e       	adc	r14, r24
  40:	f1 1c       	adc	r15, r1
  42:	c7 01       	movw	r24, r14
  44:	b6 01       	movw	r22, r12
  46:	20 e8       	ldi	r18, 0x80	; 128
  48:	31 e5       	ldi	r19, 0x51	; 81
  4a:	41 e0       	ldi	r20, 0x01	; 1
  4c:	50 e0       	ldi	r21, 0x00	; 0
  4e:	0e 94 00 00 	call	0	; 0x0 <lm_sidereal>
  52:	ff 90       	pop	r15
  54:	ef 90       	pop	r14
  56:	df 90       	pop	r13
  58:	cf 90       	pop	r12
  5a:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

localtime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <localtime>:
   0:	60 e0       	ldi	r22, 0x00	; 0
   2:	70 e0       	ldi	r23, 0x00	; 0
   4:	0e 94 00 00 	call	0	; 0x0 <localtime>
   8:	80 e0       	ldi	r24, 0x00	; 0
   a:	90 e0       	ldi	r25, 0x00	; 0
   c:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

localtime_r.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <localtime_r>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	cf 93       	push	r28
   e:	df 93       	push	r29
  10:	00 d0       	rcall	.+0      	; 0x12 <localtime_r+0x12>
  12:	00 d0       	rcall	.+0      	; 0x14 <localtime_r+0x14>
  14:	cd b7       	in	r28, 0x3d	; 61
  16:	de b7       	in	r29, 0x3e	; 62
  18:	6c 01       	movw	r12, r24
  1a:	7b 01       	movw	r14, r22
  1c:	e0 91 00 00 	lds	r30, 0x0000
  20:	f0 91 00 00 	lds	r31, 0x0000
  24:	30 97       	sbiw	r30, 0x00	; 0
  26:	01 f0       	breq	.+0      	; 0x28 <localtime_r+0x28>
  28:	60 e0       	ldi	r22, 0x00	; 0
  2a:	70 e0       	ldi	r23, 0x00	; 0
  2c:	09 95       	icall
  2e:	8c 01       	movw	r16, r24
  30:	00 c0       	rjmp	.+0      	; 0x32 <localtime_r+0x32>
  32:	0f ef       	ldi	r16, 0xFF	; 255
  34:	1f ef       	ldi	r17, 0xFF	; 255
  36:	f6 01       	movw	r30, r12
  38:	40 81       	ld	r20, Z
  3a:	51 81       	ldd	r21, Z+1	; 0x01
  3c:	62 81       	ldd	r22, Z+2	; 0x02
  3e:	73 81       	ldd	r23, Z+3	; 0x03
  40:	80 91 00 00 	lds	r24, 0x0000
  44:	90 91 00 00 	lds	r25, 0x0000
  48:	a0 91 00 00 	lds	r26, 0x0000
  4c:	b0 91 00 00 	lds	r27, 0x0000
  50:	48 0f       	add	r20, r24
  52:	59 1f       	adc	r21, r25
  54:	6a 1f       	adc	r22, r26
  56:	7b 1f       	adc	r23, r27
  58:	10 16       	cp	r1, r16
  5a:	11 06       	cpc	r1, r17
  5c:	04 f0       	brlt	.+0      	; 0x5e <localtime_r+0x5e>
  5e:	49 83       	std	Y+1, r20	; 0x01
  60:	5a 83       	std	Y+2, r21	; 0x02
  62:	6b 83       	std	Y+3, r22	; 0x03
  64:	7c 83       	std	Y+4, r23	; 0x04
  66:	00 c0       	rjmp	.+0      	; 0x68 <localtime_r+0x68>
  68:	c8 01       	movw	r24, r16
  6a:	aa 27       	eor	r26, r26
  6c:	97 fd       	sbrc	r25, 7
  6e:	a0 95       	com	r26
  70:	ba 2f       	mov	r27, r26
  72:	84 0f       	add	r24, r20
  74:	95 1f       	adc	r25, r21
  76:	a6 1f       	adc	r26, r22
  78:	b7 1f       	adc	r27, r23
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	9a 83       	std	Y+2, r25	; 0x02
  7e:	ab 83       	std	Y+3, r26	; 0x03
  80:	bc 83       	std	Y+4, r27	; 0x04
  82:	b7 01       	movw	r22, r14
  84:	ce 01       	movw	r24, r28
  86:	01 96       	adiw	r24, 0x01	; 1
  88:	0e 94 00 00 	call	0	; 0x0 <localtime_r>
  8c:	f7 01       	movw	r30, r14
  8e:	13 87       	std	Z+11, r17	; 0x0b
  90:	02 87       	std	Z+10, r16	; 0x0a
  92:	0f 90       	pop	r0
  94:	0f 90       	pop	r0
  96:	0f 90       	pop	r0
  98:	0f 90       	pop	r0
  9a:	df 91       	pop	r29
  9c:	cf 91       	pop	r28
  9e:	1f 91       	pop	r17
  a0:	0f 91       	pop	r16
  a2:	ff 90       	pop	r15
  a4:	ef 90       	pop	r14
  a6:	df 90       	pop	r13
  a8:	cf 90       	pop	r12
  aa:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

mk_gmtime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <mk_gmtime>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	0f 93       	push	r16
  12:	1f 93       	push	r17
  14:	cf 93       	push	r28
  16:	df 93       	push	r29
  18:	ec 01       	movw	r28, r24
  1a:	ee 81       	ldd	r30, Y+6	; 0x06
  1c:	ff 81       	ldd	r31, Y+7	; 0x07
  1e:	5f 01       	movw	r10, r30
  20:	24 e6       	ldi	r18, 0x64	; 100
  22:	a2 1a       	sub	r10, r18
  24:	b1 08       	sbc	r11, r1
  26:	a1 14       	cp	r10, r1
  28:	b1 04       	cpc	r11, r1
  2a:	01 f0       	breq	.+0      	; 0x2c <mk_gmtime+0x2c>
  2c:	cf 01       	movw	r24, r30
  2e:	85 56       	subi	r24, 0x65	; 101
  30:	91 09       	sbc	r25, r1
  32:	6c 01       	movw	r12, r24
  34:	97 ff       	sbrs	r25, 7
  36:	00 c0       	rjmp	.+0      	; 0x38 <mk_gmtime+0x38>
  38:	23 e0       	ldi	r18, 0x03	; 3
  3a:	c2 0e       	add	r12, r18
  3c:	d1 1c       	adc	r13, r1
  3e:	d5 94       	asr	r13
  40:	c7 94       	ror	r12
  42:	d5 94       	asr	r13
  44:	c7 94       	ror	r12
  46:	6c e9       	ldi	r22, 0x9C	; 156
  48:	7f ef       	ldi	r23, 0xFF	; 255
  4a:	0e 94 00 00 	call	0	; 0x0 <mk_gmtime>
  4e:	c6 0e       	add	r12, r22
  50:	d7 1e       	adc	r13, r23
  52:	8f ef       	ldi	r24, 0xFF	; 255
  54:	c8 1a       	sub	r12, r24
  56:	d8 0a       	sbc	r13, r24
  58:	00 c0       	rjmp	.+0      	; 0x5a <mk_gmtime+0x5a>
  5a:	c1 2c       	mov	r12, r1
  5c:	d1 2c       	mov	r13, r1
  5e:	ee 24       	eor	r14, r14
  60:	d7 fc       	sbrc	r13, 7
  62:	e0 94       	com	r14
  64:	fe 2c       	mov	r15, r14
  66:	2d e6       	ldi	r18, 0x6D	; 109
  68:	31 e0       	ldi	r19, 0x01	; 1
  6a:	d5 01       	movw	r26, r10
  6c:	0e 94 00 00 	call	0	; 0x0 <mk_gmtime>
  70:	c6 0e       	add	r12, r22
  72:	d7 1e       	adc	r13, r23
  74:	e8 1e       	adc	r14, r24
  76:	f9 1e       	adc	r15, r25
  78:	8b 81       	ldd	r24, Y+3	; 0x03
  7a:	99 27       	eor	r25, r25
  7c:	87 fd       	sbrc	r24, 7
  7e:	90 95       	com	r25
  80:	8c 01       	movw	r16, r24
  82:	01 50       	subi	r16, 0x01	; 1
  84:	11 09       	sbc	r17, r1
  86:	4d 81       	ldd	r20, Y+5	; 0x05
  88:	42 30       	cpi	r20, 0x02	; 2
  8a:	04 f4       	brge	.+0      	; 0x8c <mk_gmtime+0x8c>
  8c:	44 23       	and	r20, r20
  8e:	01 f0       	breq	.+0      	; 0x90 <mk_gmtime+0x90>
  90:	8c 01       	movw	r16, r24
  92:	02 5e       	subi	r16, 0xE2	; 226
  94:	1f 4f       	sbci	r17, 0xFF	; 255
  96:	00 c0       	rjmp	.+0      	; 0x98 <mk_gmtime+0x98>
  98:	cf 01       	movw	r24, r30
  9a:	84 59       	subi	r24, 0x94	; 148
  9c:	98 4f       	sbci	r25, 0xF8	; 248
  9e:	0e 94 00 00 	call	0	; 0x0 <mk_gmtime>
  a2:	e8 2f       	mov	r30, r24
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	fb 96       	adiw	r30, 0x3b	; 59
  a8:	e0 0f       	add	r30, r16
  aa:	f1 1f       	adc	r31, r17
  ac:	8d 81       	ldd	r24, Y+5	; 0x05
  ae:	99 27       	eor	r25, r25
  b0:	87 fd       	sbrc	r24, 7
  b2:	90 95       	com	r25
  b4:	02 97       	sbiw	r24, 0x02	; 2
  b6:	85 30       	cpi	r24, 0x05	; 5
  b8:	91 05       	cpc	r25, r1
  ba:	04 f0       	brlt	.+0      	; 0xbc <mk_gmtime+0xbc>
  bc:	e7 56       	subi	r30, 0x67	; 103
  be:	ff 4f       	sbci	r31, 0xFF	; 255
  c0:	65 e0       	ldi	r22, 0x05	; 5
  c2:	70 e0       	ldi	r23, 0x00	; 0
  c4:	0e 94 00 00 	call	0	; 0x0 <mk_gmtime>
  c8:	9c 01       	movw	r18, r24
  ca:	97 ff       	sbrs	r25, 7
  cc:	00 c0       	rjmp	.+0      	; 0xce <mk_gmtime+0xce>
  ce:	2f 5f       	subi	r18, 0xFF	; 255
  d0:	3f 4f       	sbci	r19, 0xFF	; 255
  d2:	a9 01       	movw	r20, r18
  d4:	55 95       	asr	r21
  d6:	47 95       	ror	r20
  d8:	9d e3       	ldi	r25, 0x3D	; 61
  da:	94 9f       	mul	r25, r20
  dc:	80 01       	movw	r16, r0
  de:	95 9f       	mul	r25, r21
  e0:	10 0d       	add	r17, r0
  e2:	11 24       	eor	r1, r1
  e4:	0e 0f       	add	r16, r30
  e6:	1f 1f       	adc	r17, r31
  e8:	80 ff       	sbrs	r24, 0
  ea:	00 c0       	rjmp	.+0      	; 0xec <mk_gmtime+0xec>
  ec:	01 5e       	subi	r16, 0xE1	; 225
  ee:	1f 4f       	sbci	r17, 0xFF	; 255
  f0:	98 01       	movw	r18, r16
  f2:	44 27       	eor	r20, r20
  f4:	37 fd       	sbrc	r19, 7
  f6:	40 95       	com	r20
  f8:	54 2f       	mov	r21, r20
  fa:	2c 0d       	add	r18, r12
  fc:	3d 1d       	adc	r19, r13
  fe:	4e 1d       	adc	r20, r14
 100:	5f 1d       	adc	r21, r15
 102:	60 e8       	ldi	r22, 0x80	; 128
 104:	71 e5       	ldi	r23, 0x51	; 81
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0e 94 00 00 	call	0	; 0x0 <mk_gmtime>
 10e:	4b 01       	movw	r8, r22
 110:	5c 01       	movw	r10, r24
 112:	aa 81       	ldd	r26, Y+2	; 0x02
 114:	bb 27       	eor	r27, r27
 116:	a7 fd       	sbrc	r26, 7
 118:	b0 95       	com	r27
 11a:	20 e1       	ldi	r18, 0x10	; 16
 11c:	3e e0       	ldi	r19, 0x0E	; 14
 11e:	0e 94 00 00 	call	0	; 0x0 <mk_gmtime>
 122:	6b 01       	movw	r12, r22
 124:	7c 01       	movw	r14, r24
 126:	a9 81       	ldd	r26, Y+1	; 0x01
 128:	bb 27       	eor	r27, r27
 12a:	a7 fd       	sbrc	r26, 7
 12c:	b0 95       	com	r27
 12e:	2c e3       	ldi	r18, 0x3C	; 60
 130:	30 e0       	ldi	r19, 0x00	; 0
 132:	0e 94 00 00 	call	0	; 0x0 <mk_gmtime>
 136:	c6 0e       	add	r12, r22
 138:	d7 1e       	adc	r13, r23
 13a:	e8 1e       	adc	r14, r24
 13c:	f9 1e       	adc	r15, r25
 13e:	88 81       	ld	r24, Y
 140:	99 27       	eor	r25, r25
 142:	87 fd       	sbrc	r24, 7
 144:	90 95       	com	r25
 146:	a9 2f       	mov	r26, r25
 148:	b9 2f       	mov	r27, r25
 14a:	c8 0e       	add	r12, r24
 14c:	d9 1e       	adc	r13, r25
 14e:	ea 1e       	adc	r14, r26
 150:	fb 1e       	adc	r15, r27
 152:	c8 0c       	add	r12, r8
 154:	d9 1c       	adc	r13, r9
 156:	ea 1c       	adc	r14, r10
 158:	fb 1c       	adc	r15, r11
 15a:	c7 01       	movw	r24, r14
 15c:	b6 01       	movw	r22, r12
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	1f 91       	pop	r17
 164:	0f 91       	pop	r16
 166:	ff 90       	pop	r15
 168:	ef 90       	pop	r14
 16a:	df 90       	pop	r13
 16c:	cf 90       	pop	r12
 16e:	bf 90       	pop	r11
 170:	af 90       	pop	r10
 172:	9f 90       	pop	r9
 174:	8f 90       	pop	r8
 176:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

mktime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <mktime>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	00 d0       	rcall	.+0      	; 0xa <mktime+0xa>
   a:	00 d0       	rcall	.+0      	; 0xc <mktime+0xc>
   c:	cd b7       	in	r28, 0x3d	; 61
   e:	de b7       	in	r29, 0x3e	; 62
  10:	8c 01       	movw	r16, r24
  12:	0e 94 00 00 	call	0	; 0x0 <mktime>
  16:	69 83       	std	Y+1, r22	; 0x01
  18:	7a 83       	std	Y+2, r23	; 0x02
  1a:	8b 83       	std	Y+3, r24	; 0x03
  1c:	9c 83       	std	Y+4, r25	; 0x04
  1e:	f8 01       	movw	r30, r16
  20:	82 85       	ldd	r24, Z+10	; 0x0a
  22:	93 85       	ldd	r25, Z+11	; 0x0b
  24:	97 ff       	sbrs	r25, 7
  26:	00 c0       	rjmp	.+0      	; 0x28 <mktime+0x28>
  28:	e0 91 00 00 	lds	r30, 0x0000
  2c:	f0 91 00 00 	lds	r31, 0x0000
  30:	30 97       	sbiw	r30, 0x00	; 0
  32:	01 f0       	breq	.+0      	; 0x34 <mktime+0x34>
  34:	60 e0       	ldi	r22, 0x00	; 0
  36:	70 e0       	ldi	r23, 0x00	; 0
  38:	ce 01       	movw	r24, r28
  3a:	01 96       	adiw	r24, 0x01	; 1
  3c:	09 95       	icall
  3e:	f8 01       	movw	r30, r16
  40:	93 87       	std	Z+11, r25	; 0x0b
  42:	82 87       	std	Z+10, r24	; 0x0a
  44:	f8 01       	movw	r30, r16
  46:	82 85       	ldd	r24, Z+10	; 0x0a
  48:	93 85       	ldd	r25, Z+11	; 0x0b
  4a:	18 16       	cp	r1, r24
  4c:	19 06       	cpc	r1, r25
  4e:	04 f4       	brge	.+0      	; 0x50 <mktime+0x50>
  50:	aa 27       	eor	r26, r26
  52:	97 fd       	sbrc	r25, 7
  54:	a0 95       	com	r26
  56:	ba 2f       	mov	r27, r26
  58:	49 81       	ldd	r20, Y+1	; 0x01
  5a:	5a 81       	ldd	r21, Y+2	; 0x02
  5c:	6b 81       	ldd	r22, Y+3	; 0x03
  5e:	7c 81       	ldd	r23, Y+4	; 0x04
  60:	48 1b       	sub	r20, r24
  62:	59 0b       	sbc	r21, r25
  64:	6a 0b       	sbc	r22, r26
  66:	7b 0b       	sbc	r23, r27
  68:	49 83       	std	Y+1, r20	; 0x01
  6a:	5a 83       	std	Y+2, r21	; 0x02
  6c:	6b 83       	std	Y+3, r22	; 0x03
  6e:	7c 83       	std	Y+4, r23	; 0x04
  70:	49 81       	ldd	r20, Y+1	; 0x01
  72:	5a 81       	ldd	r21, Y+2	; 0x02
  74:	6b 81       	ldd	r22, Y+3	; 0x03
  76:	7c 81       	ldd	r23, Y+4	; 0x04
  78:	80 91 00 00 	lds	r24, 0x0000
  7c:	90 91 00 00 	lds	r25, 0x0000
  80:	a0 91 00 00 	lds	r26, 0x0000
  84:	b0 91 00 00 	lds	r27, 0x0000
  88:	48 1b       	sub	r20, r24
  8a:	59 0b       	sbc	r21, r25
  8c:	6a 0b       	sbc	r22, r26
  8e:	7b 0b       	sbc	r23, r27
  90:	49 83       	std	Y+1, r20	; 0x01
  92:	5a 83       	std	Y+2, r21	; 0x02
  94:	6b 83       	std	Y+3, r22	; 0x03
  96:	7c 83       	std	Y+4, r23	; 0x04
  98:	b8 01       	movw	r22, r16
  9a:	ce 01       	movw	r24, r28
  9c:	01 96       	adiw	r24, 0x01	; 1
  9e:	0e 94 00 00 	call	0	; 0x0 <mktime>
  a2:	69 81       	ldd	r22, Y+1	; 0x01
  a4:	7a 81       	ldd	r23, Y+2	; 0x02
  a6:	8b 81       	ldd	r24, Y+3	; 0x03
  a8:	9c 81       	ldd	r25, Y+4	; 0x04
  aa:	0f 90       	pop	r0
  ac:	0f 90       	pop	r0
  ae:	0f 90       	pop	r0
  b0:	0f 90       	pop	r0
  b2:	df 91       	pop	r29
  b4:	cf 91       	pop	r28
  b6:	1f 91       	pop	r17
  b8:	0f 91       	pop	r16
  ba:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

month_length.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <month_length>:
   0:	62 30       	cpi	r22, 0x02	; 2
   2:	01 f4       	brne	.+0      	; 0x4 <month_length+0x4>
   4:	0e 94 00 00 	call	0	; 0x0 <month_length>
   8:	84 5e       	subi	r24, 0xE4	; 228
   a:	08 95       	ret
   c:	68 30       	cpi	r22, 0x08	; 8
   e:	00 f0       	brcs	.+0      	; 0x10 <month_length+0x10>
  10:	6f 5f       	subi	r22, 0xFF	; 255
  12:	86 2f       	mov	r24, r22
  14:	81 70       	andi	r24, 0x01	; 1
  16:	82 5e       	subi	r24, 0xE2	; 226
  18:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

moon_phase.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <moon_phase>:
   0:	4f 92       	push	r4
   2:	5f 92       	push	r5
   4:	6f 92       	push	r6
   6:	7f 92       	push	r7
   8:	8f 92       	push	r8
   a:	9f 92       	push	r9
   c:	af 92       	push	r10
   e:	bf 92       	push	r11
  10:	cf 92       	push	r12
  12:	df 92       	push	r13
  14:	ef 92       	push	r14
  16:	ff 92       	push	r15
  18:	fc 01       	movw	r30, r24
  1a:	60 81       	ld	r22, Z
  1c:	71 81       	ldd	r23, Z+1	; 0x01
  1e:	82 81       	ldd	r24, Z+2	; 0x02
  20:	93 81       	ldd	r25, Z+3	; 0x03
  22:	60 5a       	subi	r22, 0xA0	; 160
  24:	7f 49       	sbci	r23, 0x9F	; 159
  26:	8a 41       	sbci	r24, 0x1A	; 26
  28:	91 09       	sbc	r25, r1
  2a:	23 e9       	ldi	r18, 0x93	; 147
  2c:	3e ee       	ldi	r19, 0xEE	; 238
  2e:	46 e2       	ldi	r20, 0x26	; 38
  30:	50 e0       	ldi	r21, 0x00	; 0
  32:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  36:	6b 01       	movw	r12, r22
  38:	7c 01       	movw	r14, r24
  3a:	f9 e4       	ldi	r31, 0x49	; 73
  3c:	cf 1a       	sub	r12, r31
  3e:	f7 e7       	ldi	r31, 0x77	; 119
  40:	df 0a       	sbc	r13, r31
  42:	f3 e1       	ldi	r31, 0x13	; 19
  44:	ef 0a       	sbc	r14, r31
  46:	f1 08       	sbc	r15, r1
  48:	c7 01       	movw	r24, r14
  4a:	b6 01       	movw	r22, r12
  4c:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  50:	28 e4       	ldi	r18, 0x48	; 72
  52:	3a eb       	ldi	r19, 0xBA	; 186
  54:	4b e9       	ldi	r20, 0x9B	; 155
  56:	59 e4       	ldi	r21, 0x49	; 73
  58:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  5c:	2b ed       	ldi	r18, 0xDB	; 219
  5e:	3f e0       	ldi	r19, 0x0F	; 15
  60:	49 e4       	ldi	r20, 0x49	; 73
  62:	50 e4       	ldi	r21, 0x40	; 64
  64:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  68:	4b 01       	movw	r8, r22
  6a:	5c 01       	movw	r10, r24
  6c:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  70:	2b 01       	movw	r4, r22
  72:	3c 01       	movw	r6, r24
  74:	c5 01       	movw	r24, r10
  76:	b4 01       	movw	r22, r8
  78:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  7c:	9b 01       	movw	r18, r22
  7e:	ac 01       	movw	r20, r24
  80:	c3 01       	movw	r24, r6
  82:	b2 01       	movw	r22, r4
  84:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  88:	4b 01       	movw	r8, r22
  8a:	5c 01       	movw	r10, r24
  8c:	c7 01       	movw	r24, r14
  8e:	b6 01       	movw	r22, r12
  90:	25 ed       	ldi	r18, 0xD5	; 213
  92:	31 e3       	ldi	r19, 0x31	; 49
  94:	40 e0       	ldi	r20, 0x00	; 0
  96:	50 e0       	ldi	r21, 0x00	; 0
  98:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  9c:	ca 01       	movw	r24, r20
  9e:	b9 01       	movw	r22, r18
  a0:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  a4:	6b 01       	movw	r12, r22
  a6:	7c 01       	movw	r14, r24
  a8:	20 e0       	ldi	r18, 0x00	; 0
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	48 e4       	ldi	r20, 0x48	; 72
  ae:	51 e4       	ldi	r21, 0x41	; 65
  b0:	c5 01       	movw	r24, r10
  b2:	b4 01       	movw	r22, r8
  b4:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  b8:	9b 01       	movw	r18, r22
  ba:	ac 01       	movw	r20, r24
  bc:	c7 01       	movw	r24, r14
  be:	b6 01       	movw	r22, r12
  c0:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  c4:	0e 94 00 00 	call	0	; 0x0 <moon_phase>
  c8:	86 2f       	mov	r24, r22
  ca:	ff 90       	pop	r15
  cc:	ef 90       	pop	r14
  ce:	df 90       	pop	r13
  d0:	cf 90       	pop	r12
  d2:	bf 90       	pop	r11
  d4:	af 90       	pop	r10
  d6:	9f 90       	pop	r9
  d8:	8f 90       	pop	r8
  da:	7f 90       	pop	r7
  dc:	6f 90       	pop	r6
  de:	5f 90       	pop	r5
  e0:	4f 90       	pop	r4
  e2:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

print_lz.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <__print_lz>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	cf 93       	push	r28
   6:	df 93       	push	r29
   8:	1f 92       	push	r1
   a:	cd b7       	in	r28, 0x3d	; 61
   c:	de b7       	in	r29, 0x3e	; 62
   e:	8b 01       	movw	r16, r22
  10:	6a e0       	ldi	r22, 0x0A	; 10
  12:	70 e0       	ldi	r23, 0x00	; 0
  14:	49 83       	std	Y+1, r20	; 0x01
  16:	0e 94 00 00 	call	0	; 0x0 <__print_lz>
  1a:	60 5d       	subi	r22, 0xD0	; 208
  1c:	f8 01       	movw	r30, r16
  1e:	60 83       	st	Z, r22
  20:	80 5d       	subi	r24, 0xD0	; 208
  22:	81 83       	std	Z+1, r24	; 0x01
  24:	49 81       	ldd	r20, Y+1	; 0x01
  26:	42 83       	std	Z+2, r20	; 0x02
  28:	0f 90       	pop	r0
  2a:	df 91       	pop	r29
  2c:	cf 91       	pop	r28
  2e:	1f 91       	pop	r17
  30:	0f 91       	pop	r16
  32:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

set_dst.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <set_dst>:
   0:	90 93 00 00 	sts	0x0000, r25
   4:	80 93 00 00 	sts	0x0000, r24
   8:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

set_position.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <set_position>:
   0:	60 93 00 00 	sts	0x0000, r22
   4:	70 93 00 00 	sts	0x0000, r23
   8:	80 93 00 00 	sts	0x0000, r24
   c:	90 93 00 00 	sts	0x0000, r25
  10:	20 93 00 00 	sts	0x0000, r18
  14:	30 93 00 00 	sts	0x0000, r19
  18:	40 93 00 00 	sts	0x0000, r20
  1c:	50 93 00 00 	sts	0x0000, r21
  20:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

set_system_time.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <set_system_time>:
   0:	0f b6       	in	r0, 0x3f	; 63
   2:	f8 94       	cli
   4:	60 93 00 00 	sts	0x0000, r22
   8:	70 93 00 00 	sts	0x0000, r23
   c:	80 93 00 00 	sts	0x0000, r24
  10:	90 93 00 00 	sts	0x0000, r25
  14:	0f be       	out	0x3f, r0	; 63
  16:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

set_zone.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <set_zone>:
   0:	60 93 00 00 	sts	0x0000, r22
   4:	70 93 00 00 	sts	0x0000, r23
   8:	80 93 00 00 	sts	0x0000, r24
   c:	90 93 00 00 	sts	0x0000, r25
  10:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

solar_declination.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <solar_declination>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	fc 01       	movw	r30, r24
  12:	c0 80       	ld	r12, Z
  14:	d1 80       	ldd	r13, Z+1	; 0x01
  16:	e2 80       	ldd	r14, Z+2	; 0x02
  18:	f3 80       	ldd	r15, Z+3	; 0x03
  1a:	c7 01       	movw	r24, r14
  1c:	b6 01       	movw	r22, r12
  1e:	21 e2       	ldi	r18, 0x21	; 33
  20:	3b e8       	ldi	r19, 0x8B	; 139
  22:	41 ee       	ldi	r20, 0xE1	; 225
  24:	51 e0       	ldi	r21, 0x01	; 1
  26:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  2a:	60 55       	subi	r22, 0x50	; 80
  2c:	76 42       	sbci	r23, 0x26	; 38
  2e:	82 42       	sbci	r24, 0x22	; 34
  30:	9e 4f       	sbci	r25, 0xFE	; 254
  32:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  36:	21 eb       	ldi	r18, 0xB1	; 177
  38:	37 e4       	ldi	r19, 0x47	; 71
  3a:	49 e9       	ldi	r20, 0x99	; 153
  3c:	5a e4       	ldi	r21, 0x4A	; 74
  3e:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  42:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  46:	4b 01       	movw	r8, r22
  48:	5c 01       	movw	r10, r24
  4a:	c7 01       	movw	r24, r14
  4c:	b6 01       	movw	r22, r12
  4e:	2d e3       	ldi	r18, 0x3D	; 61
  50:	35 e8       	ldi	r19, 0x85	; 133
  52:	41 ee       	ldi	r20, 0xE1	; 225
  54:	51 e0       	ldi	r21, 0x01	; 1
  56:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  5a:	68 54       	subi	r22, 0x48	; 72
  5c:	77 4a       	sbci	r23, 0xA7	; 167
  5e:	82 4f       	sbci	r24, 0xF2	; 242
  60:	9f 4f       	sbci	r25, 0xFF	; 255
  62:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  66:	21 ed       	ldi	r18, 0xD1	; 209
  68:	35 e4       	ldi	r19, 0x45	; 69
  6a:	49 e9       	ldi	r20, 0x99	; 153
  6c:	5a e4       	ldi	r21, 0x4A	; 74
  6e:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  72:	6b 01       	movw	r12, r22
  74:	7c 01       	movw	r14, r24
  76:	2f ed       	ldi	r18, 0xDF	; 223
  78:	33 ee       	ldi	r19, 0xE3	; 227
  7a:	48 e0       	ldi	r20, 0x08	; 8
  7c:	5d e3       	ldi	r21, 0x3D	; 61
  7e:	c5 01       	movw	r24, r10
  80:	b4 01       	movw	r22, r8
  82:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  86:	9b 01       	movw	r18, r22
  88:	ac 01       	movw	r20, r24
  8a:	c7 01       	movw	r24, r14
  8c:	b6 01       	movw	r22, r12
  8e:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  92:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  96:	2c e3       	ldi	r18, 0x3C	; 60
  98:	36 e7       	ldi	r19, 0x76	; 118
  9a:	41 ed       	ldi	r20, 0xD1	; 209
  9c:	5e e3       	ldi	r21, 0x3E	; 62
  9e:	0e 94 00 00 	call	0	; 0x0 <solar_declination>
  a2:	90 58       	subi	r25, 0x80	; 128
  a4:	ff 90       	pop	r15
  a6:	ef 90       	pop	r14
  a8:	df 90       	pop	r13
  aa:	cf 90       	pop	r12
  ac:	bf 90       	pop	r11
  ae:	af 90       	pop	r10
  b0:	9f 90       	pop	r9
  b2:	8f 90       	pop	r8
  b4:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

solar_noon.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <solar_noon>:
   0:	8f 92       	push	r8
   2:	9f 92       	push	r9
   4:	af 92       	push	r10
   6:	bf 92       	push	r11
   8:	cf 92       	push	r12
   a:	df 92       	push	r13
   c:	ef 92       	push	r14
   e:	ff 92       	push	r15
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	ec 01       	movw	r28, r24
  16:	c8 80       	ld	r12, Y
  18:	d9 80       	ldd	r13, Y+1	; 0x01
  1a:	ea 80       	ldd	r14, Y+2	; 0x02
  1c:	fb 80       	ldd	r15, Y+3	; 0x03
  1e:	c7 01       	movw	r24, r14
  20:	b6 01       	movw	r22, r12
  22:	20 e8       	ldi	r18, 0x80	; 128
  24:	31 e5       	ldi	r19, 0x51	; 81
  26:	41 e0       	ldi	r20, 0x01	; 1
  28:	50 e0       	ldi	r21, 0x00	; 0
  2a:	0e 94 00 00 	call	0	; 0x0 <solar_noon>
  2e:	4b 01       	movw	r8, r22
  30:	5c 01       	movw	r10, r24
  32:	ce 01       	movw	r24, r28
  34:	0e 94 00 00 	call	0	; 0x0 <solar_noon>
  38:	ec 01       	movw	r28, r24
  3a:	60 91 00 00 	lds	r22, 0x0000
  3e:	70 91 00 00 	lds	r23, 0x0000
  42:	80 91 00 00 	lds	r24, 0x0000
  46:	90 91 00 00 	lds	r25, 0x0000
  4a:	2f e0       	ldi	r18, 0x0F	; 15
  4c:	30 e0       	ldi	r19, 0x00	; 0
  4e:	40 e0       	ldi	r20, 0x00	; 0
  50:	50 e0       	ldi	r21, 0x00	; 0
  52:	0e 94 00 00 	call	0	; 0x0 <solar_noon>
  56:	c7 01       	movw	r24, r14
  58:	b6 01       	movw	r22, r12
  5a:	62 1b       	sub	r22, r18
  5c:	73 0b       	sbc	r23, r19
  5e:	84 0b       	sbc	r24, r20
  60:	95 0b       	sbc	r25, r21
  62:	60 54       	subi	r22, 0x40	; 64
  64:	77 45       	sbci	r23, 0x57	; 87
  66:	8f 4f       	sbci	r24, 0xFF	; 255
  68:	9f 4f       	sbci	r25, 0xFF	; 255
  6a:	68 19       	sub	r22, r8
  6c:	79 09       	sbc	r23, r9
  6e:	8a 09       	sbc	r24, r10
  70:	9b 09       	sbc	r25, r11
  72:	6e 01       	movw	r12, r28
  74:	ee 24       	eor	r14, r14
  76:	d7 fc       	sbrc	r13, 7
  78:	e0 94       	com	r14
  7a:	fe 2c       	mov	r15, r14
  7c:	6c 19       	sub	r22, r12
  7e:	7d 09       	sbc	r23, r13
  80:	8e 09       	sbc	r24, r14
  82:	9f 09       	sbc	r25, r15
  84:	df 91       	pop	r29
  86:	cf 91       	pop	r28
  88:	ff 90       	pop	r15
  8a:	ef 90       	pop	r14
  8c:	df 90       	pop	r13
  8e:	cf 90       	pop	r12
  90:	bf 90       	pop	r11
  92:	af 90       	pop	r10
  94:	9f 90       	pop	r9
  96:	8f 90       	pop	r8
  98:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

strftime.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <pgm_copystring>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	0f 93       	push	r16
   8:	6b 01       	movw	r12, r22
   a:	e8 2e       	mov	r14, r24
   c:	f6 01       	movw	r30, r12
   e:	5e 2d       	mov	r21, r14
  10:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
  14:	44 23       	and	r20, r20
  16:	01 f0       	breq	.+0      	; 0x18 <pgm_copystring+0x18>
  18:	60 32       	cpi	r22, 0x20	; 32
  1a:	01 f4       	brne	.+0      	; 0x1c <pgm_copystring+0x1c>
  1c:	41 50       	subi	r20, 0x01	; 1
  1e:	8f ef       	ldi	r24, 0xFF	; 255
  20:	c8 1a       	sub	r12, r24
  22:	d8 0a       	sbc	r13, r24
  24:	e8 0a       	sbc	r14, r24
  26:	00 c0       	rjmp	.+0      	; 0x28 <pgm_copystring+0x28>
  28:	d9 01       	movw	r26, r18
  2a:	80 e0       	ldi	r24, 0x00	; 0
  2c:	60 32       	cpi	r22, 0x20	; 32
  2e:	01 f4       	brne	.+0      	; 0x30 <pgm_copystring+0x30>
  30:	1c 92       	st	X, r1
  32:	0f 91       	pop	r16
  34:	ef 90       	pop	r14
  36:	df 90       	pop	r13
  38:	cf 90       	pop	r12
  3a:	08 95       	ret
  3c:	9f ef       	ldi	r25, 0xFF	; 255
  3e:	c9 1a       	sub	r12, r25
  40:	d9 0a       	sbc	r13, r25
  42:	e9 0a       	sbc	r14, r25
  44:	80 17       	cp	r24, r16
  46:	01 f0       	breq	.+0      	; 0x48 <pgm_copystring+0x48>
  48:	6d 93       	st	X+, r22
  4a:	8f 5f       	subi	r24, 0xFF	; 255
  4c:	f6 01       	movw	r30, r12
  4e:	5e 2d       	mov	r21, r14
  50:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
  54:	00 c0       	rjmp	.+0      	; 0x56 <strftime>

00000056 <strftime>:
  56:	2f 92       	push	r2
  58:	3f 92       	push	r3
  5a:	4f 92       	push	r4
  5c:	5f 92       	push	r5
  5e:	6f 92       	push	r6
  60:	7f 92       	push	r7
  62:	8f 92       	push	r8
  64:	9f 92       	push	r9
  66:	af 92       	push	r10
  68:	bf 92       	push	r11
  6a:	cf 92       	push	r12
  6c:	df 92       	push	r13
  6e:	ef 92       	push	r14
  70:	ff 92       	push	r15
  72:	0f 93       	push	r16
  74:	1f 93       	push	r17
  76:	cf 93       	push	r28
  78:	df 93       	push	r29
  7a:	cd b7       	in	r28, 0x3d	; 61
  7c:	de b7       	in	r29, 0x3e	; 62
  7e:	a2 97       	sbiw	r28, 0x22	; 34
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	f8 94       	cli
  84:	de bf       	out	0x3e, r29	; 62
  86:	0f be       	out	0x3f, r0	; 63
  88:	cd bf       	out	0x3d, r28	; 61
  8a:	2c 01       	movw	r4, r24
  8c:	7a a3       	std	Y+34, r23	; 0x22
  8e:	69 a3       	std	Y+33, r22	; 0x21
  90:	4a 01       	movw	r8, r20
  92:	69 01       	movw	r12, r18
  94:	61 2c       	mov	r6, r1
  96:	71 2c       	mov	r7, r1
  98:	9e 01       	movw	r18, r28
  9a:	2f 5f       	subi	r18, 0xFF	; 255
  9c:	3f 4f       	sbci	r19, 0xFF	; 255
  9e:	79 01       	movw	r14, r18
  a0:	84 e6       	ldi	r24, 0x64	; 100
  a2:	28 2e       	mov	r2, r24
  a4:	31 2c       	mov	r3, r1
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	a9 2e       	mov	r10, r25
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	b9 2e       	mov	r11, r25
  ae:	89 a1       	ldd	r24, Y+33	; 0x21
  b0:	9a a1       	ldd	r25, Y+34	; 0x22
  b2:	68 16       	cp	r6, r24
  b4:	79 06       	cpc	r7, r25
  b6:	00 f0       	brcs	.+0      	; 0xb8 <strftime+0x62>
  b8:	00 c0       	rjmp	.+0      	; 0xba <strftime+0x64>
  ba:	d4 01       	movw	r26, r8
  bc:	8c 91       	ld	r24, X
  be:	85 32       	cpi	r24, 0x25	; 37
  c0:	01 f0       	breq	.+0      	; 0xc2 <strftime+0x6c>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <strftime+0x6e>
  c4:	11 96       	adiw	r26, 0x01	; 1
  c6:	1c 91       	ld	r17, X
  c8:	15 34       	cpi	r17, 0x45	; 69
  ca:	01 f0       	breq	.+0      	; 0xcc <strftime+0x76>
  cc:	1f 34       	cpi	r17, 0x4F	; 79
  ce:	01 f0       	breq	.+0      	; 0xd0 <strftime+0x7a>
  d0:	b2 e0       	ldi	r27, 0x02	; 2
  d2:	8b 0e       	add	r8, r27
  d4:	91 1c       	adc	r9, r1
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <strftime+0x82>
  d8:	f4 01       	movw	r30, r8
  da:	12 81       	ldd	r17, Z+2	; 0x02
  dc:	94 01       	movw	r18, r8
  de:	2d 5f       	subi	r18, 0xFD	; 253
  e0:	3f 4f       	sbci	r19, 0xFF	; 255
  e2:	49 01       	movw	r8, r18
  e4:	19 35       	cpi	r17, 0x59	; 89
  e6:	01 f4       	brne	.+0      	; 0xe8 <strftime+0x92>
  e8:	00 c0       	rjmp	.+0      	; 0xea <strftime+0x94>
  ea:	04 f0       	brlt	.+0      	; 0xec <strftime+0x96>
  ec:	00 c0       	rjmp	.+0      	; 0xee <strftime+0x98>
  ee:	19 34       	cpi	r17, 0x49	; 73
  f0:	01 f4       	brne	.+0      	; 0xf2 <strftime+0x9c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <strftime+0x9e>
  f4:	04 f4       	brge	.+0      	; 0xf6 <strftime+0xa0>
  f6:	13 34       	cpi	r17, 0x43	; 67
  f8:	01 f4       	brne	.+0      	; 0xfa <strftime+0xa4>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <strftime+0xa6>
  fc:	04 f4       	brge	.+0      	; 0xfe <strftime+0xa8>
  fe:	11 34       	cpi	r17, 0x41	; 65
 100:	01 f4       	brne	.+0      	; 0x102 <strftime+0xac>
 102:	00 c0       	rjmp	.+0      	; 0x104 <strftime+0xae>
 104:	04 f0       	brlt	.+0      	; 0x106 <strftime+0xb0>
 106:	00 c0       	rjmp	.+0      	; 0x108 <strftime+0xb2>
 108:	15 32       	cpi	r17, 0x25	; 37
 10a:	01 f0       	breq	.+0      	; 0x10c <strftime+0xb6>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <strftime+0xb8>
 10e:	19 83       	std	Y+1, r17	; 0x01
 110:	00 c0       	rjmp	.+0      	; 0x112 <strftime+0xbc>
 112:	16 34       	cpi	r17, 0x46	; 70
 114:	01 f4       	brne	.+0      	; 0x116 <strftime+0xc0>
 116:	00 c0       	rjmp	.+0      	; 0x118 <strftime+0xc2>
 118:	04 f4       	brge	.+0      	; 0x11a <strftime+0xc4>
 11a:	14 34       	cpi	r17, 0x44	; 68
 11c:	01 f0       	breq	.+0      	; 0x11e <strftime+0xc8>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <strftime+0xca>
 120:	f6 01       	movw	r30, r12
 122:	86 81       	ldd	r24, Z+6	; 0x06
 124:	97 81       	ldd	r25, Z+7	; 0x07
 126:	b1 01       	movw	r22, r2
 128:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 12c:	9f 93       	push	r25
 12e:	8f 93       	push	r24
 130:	00 c0       	rjmp	.+0      	; 0x132 <strftime+0xdc>
 132:	17 34       	cpi	r17, 0x47	; 71
 134:	01 f4       	brne	.+0      	; 0x136 <strftime+0xe0>
 136:	00 c0       	rjmp	.+0      	; 0x138 <strftime+0xe2>
 138:	18 34       	cpi	r17, 0x48	; 72
 13a:	01 f0       	breq	.+0      	; 0x13c <strftime+0xe6>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <strftime+0xe8>
 13e:	d6 01       	movw	r26, r12
 140:	12 96       	adiw	r26, 0x02	; 2
 142:	2c 91       	ld	r18, X
 144:	00 c0       	rjmp	.+0      	; 0x146 <strftime+0xf0>
 146:	14 35       	cpi	r17, 0x54	; 84
 148:	01 f4       	brne	.+0      	; 0x14a <strftime+0xf4>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <strftime+0xf6>
 14c:	04 f4       	brge	.+0      	; 0x14e <strftime+0xf8>
 14e:	12 35       	cpi	r17, 0x52	; 82
 150:	01 f4       	brne	.+0      	; 0x152 <strftime+0xfc>
 152:	00 c0       	rjmp	.+0      	; 0x154 <strftime+0xfe>
 154:	04 f0       	brlt	.+0      	; 0x156 <strftime+0x100>
 156:	00 c0       	rjmp	.+0      	; 0x158 <strftime+0x102>
 158:	1d 34       	cpi	r17, 0x4D	; 77
 15a:	01 f0       	breq	.+0      	; 0x15c <strftime+0x106>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <strftime+0x108>
 15e:	d6 01       	movw	r26, r12
 160:	11 96       	adiw	r26, 0x01	; 1
 162:	2c 91       	ld	r18, X
 164:	00 c0       	rjmp	.+0      	; 0x166 <strftime+0x110>
 166:	16 35       	cpi	r17, 0x56	; 86
 168:	01 f4       	brne	.+0      	; 0x16a <strftime+0x114>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <strftime+0x116>
 16c:	04 f4       	brge	.+0      	; 0x16e <strftime+0x118>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <strftime+0x11a>
 170:	17 35       	cpi	r17, 0x57	; 87
 172:	01 f4       	brne	.+0      	; 0x174 <strftime+0x11e>
 174:	00 c0       	rjmp	.+0      	; 0x176 <strftime+0x120>
 176:	18 35       	cpi	r17, 0x58	; 88
 178:	01 f0       	breq	.+0      	; 0x17a <strftime+0x124>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <strftime+0x126>
 17c:	d6 01       	movw	r26, r12
 17e:	2c 91       	ld	r18, X
 180:	82 2f       	mov	r24, r18
 182:	99 27       	eor	r25, r25
 184:	87 fd       	sbrc	r24, 7
 186:	90 95       	com	r25
 188:	9f 93       	push	r25
 18a:	2f 93       	push	r18
 18c:	11 96       	adiw	r26, 0x01	; 1
 18e:	2c 91       	ld	r18, X
 190:	11 97       	sbiw	r26, 0x01	; 1
 192:	82 2f       	mov	r24, r18
 194:	99 27       	eor	r25, r25
 196:	87 fd       	sbrc	r24, 7
 198:	90 95       	com	r25
 19a:	9f 93       	push	r25
 19c:	2f 93       	push	r18
 19e:	12 96       	adiw	r26, 0x02	; 2
 1a0:	2c 91       	ld	r18, X
 1a2:	82 2f       	mov	r24, r18
 1a4:	99 27       	eor	r25, r25
 1a6:	87 fd       	sbrc	r24, 7
 1a8:	90 95       	com	r25
 1aa:	9f 93       	push	r25
 1ac:	2f 93       	push	r18
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <strftime+0x15e>
 1b4:	1d 36       	cpi	r17, 0x6D	; 109
 1b6:	01 f4       	brne	.+0      	; 0x1b8 <strftime+0x162>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <strftime+0x164>
 1ba:	04 f4       	brge	.+0      	; 0x1bc <strftime+0x166>
 1bc:	14 36       	cpi	r17, 0x64	; 100
 1be:	01 f4       	brne	.+0      	; 0x1c0 <strftime+0x16a>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <strftime+0x16c>
 1c2:	04 f4       	brge	.+0      	; 0x1c4 <strftime+0x16e>
 1c4:	12 36       	cpi	r17, 0x62	; 98
 1c6:	01 f4       	brne	.+0      	; 0x1c8 <strftime+0x172>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <strftime+0x174>
 1ca:	04 f0       	brlt	.+0      	; 0x1cc <strftime+0x176>
 1cc:	00 c0       	rjmp	.+0      	; 0x1ce <strftime+0x178>
 1ce:	11 36       	cpi	r17, 0x61	; 97
 1d0:	01 f0       	breq	.+0      	; 0x1d2 <strftime+0x17c>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <strftime+0x17e>
 1d4:	03 e0       	ldi	r16, 0x03	; 3
 1d6:	97 01       	movw	r18, r14
 1d8:	d6 01       	movw	r26, r12
 1da:	14 96       	adiw	r26, 0x04	; 4
 1dc:	4c 91       	ld	r20, X
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <strftime+0x18a>
 1e0:	17 36       	cpi	r17, 0x67	; 103
 1e2:	01 f4       	brne	.+0      	; 0x1e4 <strftime+0x18e>
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <strftime+0x190>
 1e6:	04 f4       	brge	.+0      	; 0x1e8 <strftime+0x192>
 1e8:	15 36       	cpi	r17, 0x65	; 101
 1ea:	01 f0       	breq	.+0      	; 0x1ec <strftime+0x196>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <strftime+0x198>
 1ee:	d6 01       	movw	r26, r12
 1f0:	13 96       	adiw	r26, 0x03	; 3
 1f2:	2c 91       	ld	r18, X
 1f4:	82 2f       	mov	r24, r18
 1f6:	99 27       	eor	r25, r25
 1f8:	87 fd       	sbrc	r24, 7
 1fa:	90 95       	com	r25
 1fc:	9f 93       	push	r25
 1fe:	2f 93       	push	r18
 200:	80 e0       	ldi	r24, 0x00	; 0
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	00 c0       	rjmp	.+0      	; 0x206 <strftime+0x1b0>
 206:	18 36       	cpi	r17, 0x68	; 104
 208:	01 f4       	brne	.+0      	; 0x20a <strftime+0x1b4>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <strftime+0x1b6>
 20c:	1a 36       	cpi	r17, 0x6A	; 106
 20e:	01 f0       	breq	.+0      	; 0x210 <strftime+0x1ba>
 210:	00 c0       	rjmp	.+0      	; 0x212 <strftime+0x1bc>
 212:	d6 01       	movw	r26, r12
 214:	18 96       	adiw	r26, 0x08	; 8
 216:	8d 91       	ld	r24, X+
 218:	9c 91       	ld	r25, X
 21a:	19 97       	sbiw	r26, 0x09	; 9
 21c:	01 96       	adiw	r24, 0x01	; 1
 21e:	9f 93       	push	r25
 220:	8f 93       	push	r24
 222:	80 e0       	ldi	r24, 0x00	; 0
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	00 c0       	rjmp	.+0      	; 0x228 <strftime+0x1d2>
 228:	15 37       	cpi	r17, 0x75	; 117
 22a:	01 f4       	brne	.+0      	; 0x22c <strftime+0x1d6>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <strftime+0x1d8>
 22e:	04 f4       	brge	.+0      	; 0x230 <strftime+0x1da>
 230:	10 37       	cpi	r17, 0x70	; 112
 232:	01 f4       	brne	.+0      	; 0x234 <strftime+0x1de>
 234:	00 c0       	rjmp	.+0      	; 0x236 <strftime+0x1e0>
 236:	04 f4       	brge	.+0      	; 0x238 <strftime+0x1e2>
 238:	1e 36       	cpi	r17, 0x6E	; 110
 23a:	01 f0       	breq	.+0      	; 0x23c <strftime+0x1e6>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <strftime+0x1e8>
 23e:	8a e0       	ldi	r24, 0x0A	; 10
 240:	89 83       	std	Y+1, r24	; 0x01
 242:	00 c0       	rjmp	.+0      	; 0x244 <strftime+0x1ee>
 244:	12 37       	cpi	r17, 0x72	; 114
 246:	01 f4       	brne	.+0      	; 0x248 <strftime+0x1f2>
 248:	00 c0       	rjmp	.+0      	; 0x24a <strftime+0x1f4>
 24a:	14 37       	cpi	r17, 0x74	; 116
 24c:	01 f0       	breq	.+0      	; 0x24e <strftime+0x1f8>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <strftime+0x1fa>
 250:	60 e0       	ldi	r22, 0x00	; 0
 252:	70 e0       	ldi	r23, 0x00	; 0
 254:	c7 01       	movw	r24, r14
 256:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <strftime+0x206>
 25c:	18 37       	cpi	r17, 0x78	; 120
 25e:	01 f4       	brne	.+0      	; 0x260 <strftime+0x20a>
 260:	00 c0       	rjmp	.+0      	; 0x262 <strftime+0x20c>
 262:	04 f4       	brge	.+0      	; 0x264 <strftime+0x20e>
 264:	17 37       	cpi	r17, 0x77	; 119
 266:	01 f0       	breq	.+0      	; 0x268 <strftime+0x212>
 268:	00 c0       	rjmp	.+0      	; 0x26a <strftime+0x214>
 26a:	f6 01       	movw	r30, r12
 26c:	24 81       	ldd	r18, Z+4	; 0x04
 26e:	82 2f       	mov	r24, r18
 270:	99 27       	eor	r25, r25
 272:	87 fd       	sbrc	r24, 7
 274:	90 95       	com	r25
 276:	9f 93       	push	r25
 278:	2f 93       	push	r18
 27a:	00 c0       	rjmp	.+0      	; 0x27c <strftime+0x226>
 27c:	19 37       	cpi	r17, 0x79	; 121
 27e:	01 f4       	brne	.+0      	; 0x280 <strftime+0x22a>
 280:	00 c0       	rjmp	.+0      	; 0x282 <strftime+0x22c>
 282:	1a 37       	cpi	r17, 0x7A	; 122
 284:	01 f4       	brne	.+0      	; 0x286 <strftime+0x230>
 286:	00 c0       	rjmp	.+0      	; 0x288 <strftime+0x232>
 288:	00 c0       	rjmp	.+0      	; 0x28a <strftime+0x234>
 28a:	0f ef       	ldi	r16, 0xFF	; 255
 28c:	97 01       	movw	r18, r14
 28e:	f6 01       	movw	r30, r12
 290:	44 81       	ldd	r20, Z+4	; 0x04
 292:	60 e0       	ldi	r22, 0x00	; 0
 294:	70 e0       	ldi	r23, 0x00	; 0
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	00 c0       	rjmp	.+0      	; 0x29a <strftime+0x244>
 29a:	03 e0       	ldi	r16, 0x03	; 3
 29c:	97 01       	movw	r18, r14
 29e:	d6 01       	movw	r26, r12
 2a0:	15 96       	adiw	r26, 0x05	; 5
 2a2:	4c 91       	ld	r20, X
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <strftime+0x250>
 2a6:	0f ef       	ldi	r16, 0xFF	; 255
 2a8:	97 01       	movw	r18, r14
 2aa:	f6 01       	movw	r30, r12
 2ac:	45 81       	ldd	r20, Z+5	; 0x05
 2ae:	60 e0       	ldi	r22, 0x00	; 0
 2b0:	70 e0       	ldi	r23, 0x00	; 0
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <strftime+0x266>
 2bc:	b7 01       	movw	r22, r14
 2be:	c6 01       	movw	r24, r12
 2c0:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 2c4:	97 01       	movw	r18, r14
 2c6:	c9 01       	movw	r24, r18
 2c8:	8e 19       	sub	r24, r14
 2ca:	9f 09       	sbc	r25, r15
 2cc:	2f 5f       	subi	r18, 0xFF	; 255
 2ce:	3f 4f       	sbci	r19, 0xFF	; 255
 2d0:	f9 01       	movw	r30, r18
 2d2:	31 97       	sbiw	r30, 0x01	; 1
 2d4:	40 81       	ld	r20, Z
 2d6:	41 11       	cpse	r20, r1
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <strftime+0x284>
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <strftime+0x286>
 2dc:	d6 01       	movw	r26, r12
 2de:	16 96       	adiw	r26, 0x06	; 6
 2e0:	8d 91       	ld	r24, X+
 2e2:	9c 91       	ld	r25, X
 2e4:	17 97       	sbiw	r26, 0x07	; 7
 2e6:	84 59       	subi	r24, 0x94	; 148
 2e8:	98 4f       	sbci	r25, 0xF8	; 248
 2ea:	b1 01       	movw	r22, r2
 2ec:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 2f0:	7f 93       	push	r23
 2f2:	6f 93       	push	r22
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <strftime+0x2a0>
 2f6:	d6 01       	movw	r26, r12
 2f8:	13 96       	adiw	r26, 0x03	; 3
 2fa:	2c 91       	ld	r18, X
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <strftime+0x2a8>
 2fe:	f6 01       	movw	r30, r12
 300:	23 81       	ldd	r18, Z+3	; 0x03
 302:	82 2f       	mov	r24, r18
 304:	99 27       	eor	r25, r25
 306:	87 fd       	sbrc	r24, 7
 308:	90 95       	com	r25
 30a:	9f 93       	push	r25
 30c:	2f 93       	push	r18
 30e:	85 81       	ldd	r24, Z+5	; 0x05
 310:	99 27       	eor	r25, r25
 312:	87 fd       	sbrc	r24, 7
 314:	90 95       	com	r25
 316:	01 96       	adiw	r24, 0x01	; 1
 318:	9f 93       	push	r25
 31a:	8f 93       	push	r24
 31c:	86 81       	ldd	r24, Z+6	; 0x06
 31e:	97 81       	ldd	r25, Z+7	; 0x07
 320:	84 59       	subi	r24, 0x94	; 148
 322:	98 4f       	sbci	r25, 0xF8	; 248
 324:	9f 93       	push	r25
 326:	8f 93       	push	r24
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	00 c0       	rjmp	.+0      	; 0x32e <strftime+0x2d8>
 32e:	d6 01       	movw	r26, r12
 330:	18 96       	adiw	r26, 0x08	; 8
 332:	6d 91       	ld	r22, X+
 334:	7c 91       	ld	r23, X
 336:	19 97       	sbiw	r26, 0x09	; 9
 338:	16 96       	adiw	r26, 0x06	; 6
 33a:	8d 91       	ld	r24, X+
 33c:	9c 91       	ld	r25, X
 33e:	17 97       	sbiw	r26, 0x07	; 7
 340:	ae 01       	movw	r20, r28
 342:	45 5e       	subi	r20, 0xE5	; 229
 344:	5f 4f       	sbci	r21, 0xFF	; 255
 346:	84 59       	subi	r24, 0x94	; 148
 348:	98 4f       	sbci	r25, 0xF8	; 248
 34a:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 34e:	17 36       	cpi	r17, 0x67	; 103
 350:	01 f4       	brne	.+0      	; 0x352 <strftime+0x2fc>
 352:	8b 8d       	ldd	r24, Y+27	; 0x1b
 354:	9c 8d       	ldd	r25, Y+28	; 0x1c
 356:	b1 01       	movw	r22, r2
 358:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 35c:	9f 93       	push	r25
 35e:	8f 93       	push	r24
 360:	a0 e0       	ldi	r26, 0x00	; 0
 362:	b0 e0       	ldi	r27, 0x00	; 0
 364:	00 c0       	rjmp	.+0      	; 0x366 <strftime+0x310>
 366:	8c 8d       	ldd	r24, Y+28	; 0x1c
 368:	8f 93       	push	r24
 36a:	8b 8d       	ldd	r24, Y+27	; 0x1b
 36c:	8f 93       	push	r24
 36e:	a0 e0       	ldi	r26, 0x00	; 0
 370:	b0 e0       	ldi	r27, 0x00	; 0
 372:	00 c0       	rjmp	.+0      	; 0x374 <strftime+0x31e>
 374:	f6 01       	movw	r30, r12
 376:	82 81       	ldd	r24, Z+2	; 0x02
 378:	6c e0       	ldi	r22, 0x0C	; 12
 37a:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 37e:	89 2f       	mov	r24, r25
 380:	99 27       	eor	r25, r25
 382:	87 fd       	sbrc	r24, 7
 384:	90 95       	com	r25
 386:	00 97       	sbiw	r24, 0x00	; 0
 388:	01 f0       	breq	.+0      	; 0x38a <strftime+0x334>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <strftime+0x336>
 38c:	8c e0       	ldi	r24, 0x0C	; 12
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	00 c0       	rjmp	.+0      	; 0x392 <strftime+0x33c>
 392:	9f 93       	push	r25
 394:	8f 93       	push	r24
 396:	00 c0       	rjmp	.+0      	; 0x398 <strftime+0x342>
 398:	f6 01       	movw	r30, r12
 39a:	85 81       	ldd	r24, Z+5	; 0x05
 39c:	99 27       	eor	r25, r25
 39e:	87 fd       	sbrc	r24, 7
 3a0:	90 95       	com	r25
 3a2:	01 96       	adiw	r24, 0x01	; 1
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <strftime+0x350>
 3a6:	d6 01       	movw	r26, r12
 3a8:	2c 91       	ld	r18, X
 3aa:	82 2f       	mov	r24, r18
 3ac:	99 27       	eor	r25, r25
 3ae:	87 fd       	sbrc	r24, 7
 3b0:	90 95       	com	r25
 3b2:	9f 93       	push	r25
 3b4:	2f 93       	push	r18
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <strftime+0x362>
 3b8:	81 e4       	ldi	r24, 0x41	; 65
 3ba:	89 83       	std	Y+1, r24	; 0x01
 3bc:	f6 01       	movw	r30, r12
 3be:	82 81       	ldd	r24, Z+2	; 0x02
 3c0:	8c 30       	cpi	r24, 0x0C	; 12
 3c2:	04 f0       	brlt	.+0      	; 0x3c4 <strftime+0x36e>
 3c4:	80 e5       	ldi	r24, 0x50	; 80
 3c6:	89 83       	std	Y+1, r24	; 0x01
 3c8:	8d e4       	ldi	r24, 0x4D	; 77
 3ca:	8a 83       	std	Y+2, r24	; 0x02
 3cc:	1b 82       	std	Y+3, r1	; 0x03
 3ce:	82 e0       	ldi	r24, 0x02	; 2
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <strftime+0x37e>
 3d4:	d6 01       	movw	r26, r12
 3d6:	12 96       	adiw	r26, 0x02	; 2
 3d8:	8c 91       	ld	r24, X
 3da:	6c e0       	ldi	r22, 0x0C	; 12
 3dc:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 3e0:	89 2f       	mov	r24, r25
 3e2:	99 27       	eor	r25, r25
 3e4:	87 fd       	sbrc	r24, 7
 3e6:	90 95       	com	r25
 3e8:	00 97       	sbiw	r24, 0x00	; 0
 3ea:	01 f4       	brne	.+0      	; 0x3ec <strftime+0x396>
 3ec:	8c e0       	ldi	r24, 0x0C	; 12
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	f6 01       	movw	r30, r12
 3f2:	40 81       	ld	r20, Z
 3f4:	24 2f       	mov	r18, r20
 3f6:	33 27       	eor	r19, r19
 3f8:	27 fd       	sbrc	r18, 7
 3fa:	30 95       	com	r19
 3fc:	3f 93       	push	r19
 3fe:	4f 93       	push	r20
 400:	41 81       	ldd	r20, Z+1	; 0x01
 402:	24 2f       	mov	r18, r20
 404:	33 27       	eor	r19, r19
 406:	27 fd       	sbrc	r18, 7
 408:	30 95       	com	r19
 40a:	3f 93       	push	r19
 40c:	4f 93       	push	r20
 40e:	9f 93       	push	r25
 410:	8f 93       	push	r24
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	9f 93       	push	r25
 418:	8f 93       	push	r24
 41a:	ff 92       	push	r15
 41c:	ef 92       	push	r14
 41e:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 422:	0f b6       	in	r0, 0x3f	; 63
 424:	f8 94       	cli
 426:	de bf       	out	0x3e, r29	; 62
 428:	0f be       	out	0x3f, r0	; 63
 42a:	cd bf       	out	0x3d, r28	; 61
 42c:	d6 01       	movw	r26, r12
 42e:	12 96       	adiw	r26, 0x02	; 2
 430:	2c 91       	ld	r18, X
 432:	2c 30       	cpi	r18, 0x0C	; 12
 434:	04 f4       	brge	.+0      	; 0x436 <strftime+0x3e0>
 436:	00 c0       	rjmp	.+0      	; 0x438 <strftime+0x3e2>
 438:	20 e5       	ldi	r18, 0x50	; 80
 43a:	2b 87       	std	Y+11, r18	; 0x0b
 43c:	00 c0       	rjmp	.+0      	; 0x43e <strftime+0x3e8>
 43e:	f6 01       	movw	r30, r12
 440:	21 81       	ldd	r18, Z+1	; 0x01
 442:	82 2f       	mov	r24, r18
 444:	99 27       	eor	r25, r25
 446:	87 fd       	sbrc	r24, 7
 448:	90 95       	com	r25
 44a:	9f 93       	push	r25
 44c:	2f 93       	push	r18
 44e:	22 81       	ldd	r18, Z+2	; 0x02
 450:	82 2f       	mov	r24, r18
 452:	99 27       	eor	r25, r25
 454:	87 fd       	sbrc	r24, 7
 456:	90 95       	com	r25
 458:	9f 93       	push	r25
 45a:	2f 93       	push	r18
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	00 c0       	rjmp	.+0      	; 0x462 <strftime+0x40c>
 462:	f6 01       	movw	r30, r12
 464:	20 81       	ld	r18, Z
 466:	82 2f       	mov	r24, r18
 468:	99 27       	eor	r25, r25
 46a:	87 fd       	sbrc	r24, 7
 46c:	90 95       	com	r25
 46e:	9f 93       	push	r25
 470:	2f 93       	push	r18
 472:	21 81       	ldd	r18, Z+1	; 0x01
 474:	82 2f       	mov	r24, r18
 476:	99 27       	eor	r25, r25
 478:	87 fd       	sbrc	r24, 7
 47a:	90 95       	com	r25
 47c:	9f 93       	push	r25
 47e:	2f 93       	push	r18
 480:	22 81       	ldd	r18, Z+2	; 0x02
 482:	82 2f       	mov	r24, r18
 484:	99 27       	eor	r25, r25
 486:	87 fd       	sbrc	r24, 7
 488:	90 95       	com	r25
 48a:	9f 93       	push	r25
 48c:	2f 93       	push	r18
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	00 c0       	rjmp	.+0      	; 0x494 <strftime+0x43e>
 494:	d6 01       	movw	r26, r12
 496:	14 96       	adiw	r26, 0x04	; 4
 498:	8c 91       	ld	r24, X
 49a:	99 27       	eor	r25, r25
 49c:	87 fd       	sbrc	r24, 7
 49e:	90 95       	com	r25
 4a0:	00 97       	sbiw	r24, 0x00	; 0
 4a2:	01 f4       	brne	.+0      	; 0x4a4 <strftime+0x44e>
 4a4:	87 e0       	ldi	r24, 0x07	; 7
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	9f 93       	push	r25
 4aa:	8f 93       	push	r24
 4ac:	a0 e0       	ldi	r26, 0x00	; 0
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <strftime+0x45c>
 4b2:	60 e0       	ldi	r22, 0x00	; 0
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <strftime+0x460>
 4b6:	d6 01       	movw	r26, r12
 4b8:	18 96       	adiw	r26, 0x08	; 8
 4ba:	6d 91       	ld	r22, X+
 4bc:	7c 91       	ld	r23, X
 4be:	19 97       	sbiw	r26, 0x09	; 9
 4c0:	16 96       	adiw	r26, 0x06	; 6
 4c2:	8d 91       	ld	r24, X+
 4c4:	9c 91       	ld	r25, X
 4c6:	17 97       	sbiw	r26, 0x07	; 7
 4c8:	ae 01       	movw	r20, r28
 4ca:	45 5e       	subi	r20, 0xE5	; 229
 4cc:	5f 4f       	sbci	r21, 0xFF	; 255
 4ce:	84 59       	subi	r24, 0x94	; 148
 4d0:	98 4f       	sbci	r25, 0xF8	; 248
 4d2:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 4d6:	8e 8d       	ldd	r24, Y+30	; 0x1e
 4d8:	8f 93       	push	r24
 4da:	8d 8d       	ldd	r24, Y+29	; 0x1d
 4dc:	00 c0       	rjmp	.+0      	; 0x4de <strftime+0x488>
 4de:	61 e0       	ldi	r22, 0x01	; 1
 4e0:	c6 01       	movw	r24, r12
 4e2:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 4e6:	1f 92       	push	r1
 4e8:	00 c0       	rjmp	.+0      	; 0x4ea <strftime+0x494>
 4ea:	d6 01       	movw	r26, r12
 4ec:	16 96       	adiw	r26, 0x06	; 6
 4ee:	8d 91       	ld	r24, X+
 4f0:	9c 91       	ld	r25, X
 4f2:	17 97       	sbiw	r26, 0x07	; 7
 4f4:	b1 01       	movw	r22, r2
 4f6:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 4fa:	9f 93       	push	r25
 4fc:	8f 93       	push	r24
 4fe:	f6 01       	movw	r30, r12
 500:	23 81       	ldd	r18, Z+3	; 0x03
 502:	82 2f       	mov	r24, r18
 504:	99 27       	eor	r25, r25
 506:	87 fd       	sbrc	r24, 7
 508:	90 95       	com	r25
 50a:	9f 93       	push	r25
 50c:	2f 93       	push	r18
 50e:	85 81       	ldd	r24, Z+5	; 0x05
 510:	99 27       	eor	r25, r25
 512:	87 fd       	sbrc	r24, 7
 514:	90 95       	com	r25
 516:	01 96       	adiw	r24, 0x01	; 1
 518:	9f 93       	push	r25
 51a:	8f 93       	push	r24
 51c:	80 e0       	ldi	r24, 0x00	; 0
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	9f 93       	push	r25
 522:	8f 93       	push	r24
 524:	ff 92       	push	r15
 526:	ef 92       	push	r14
 528:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 52c:	00 c0       	rjmp	.+0      	; 0x52e <strftime+0x4d8>
 52e:	d6 01       	movw	r26, r12
 530:	16 96       	adiw	r26, 0x06	; 6
 532:	8d 91       	ld	r24, X+
 534:	9c 91       	ld	r25, X
 536:	17 97       	sbiw	r26, 0x07	; 7
 538:	b1 01       	movw	r22, r2
 53a:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 53e:	9f 93       	push	r25
 540:	8f 93       	push	r24
 542:	bf 92       	push	r11
 544:	af 92       	push	r10
 546:	00 c0       	rjmp	.+0      	; 0x548 <strftime+0x4f2>
 548:	f6 01       	movw	r30, r12
 54a:	86 81       	ldd	r24, Z+6	; 0x06
 54c:	97 81       	ldd	r25, Z+7	; 0x07
 54e:	84 59       	subi	r24, 0x94	; 148
 550:	98 4f       	sbci	r25, 0xF8	; 248
 552:	9f 93       	push	r25
 554:	8f 93       	push	r24
 556:	a0 e0       	ldi	r26, 0x00	; 0
 558:	b0 e0       	ldi	r27, 0x00	; 0
 55a:	bf 93       	push	r27
 55c:	af 93       	push	r26
 55e:	ff 92       	push	r15
 560:	ef 92       	push	r14
 562:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 566:	0f 90       	pop	r0
 568:	0f 90       	pop	r0
 56a:	0f 90       	pop	r0
 56c:	0f 90       	pop	r0
 56e:	0f 90       	pop	r0
 570:	0f 90       	pop	r0
 572:	00 c0       	rjmp	.+0      	; 0x574 <strftime+0x51e>
 574:	60 91 00 00 	lds	r22, 0x0000
 578:	70 91 00 00 	lds	r23, 0x0000
 57c:	80 91 00 00 	lds	r24, 0x0000
 580:	90 91 00 00 	lds	r25, 0x0000
 584:	2c e3       	ldi	r18, 0x3C	; 60
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	40 e0       	ldi	r20, 0x00	; 0
 58a:	50 e0       	ldi	r21, 0x00	; 0
 58c:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 590:	89 01       	movw	r16, r18
 592:	9a 01       	movw	r18, r20
 594:	f8 01       	movw	r30, r16
 596:	d6 01       	movw	r26, r12
 598:	1a 96       	adiw	r26, 0x0a	; 10
 59a:	8d 91       	ld	r24, X+
 59c:	9c 91       	ld	r25, X
 59e:	1b 97       	sbiw	r26, 0x0b	; 11
 5a0:	6c e3       	ldi	r22, 0x3C	; 60
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	04 f4       	brge	.+0      	; 0x5ae <strftime+0x558>
 5ae:	fb 01       	movw	r30, r22
 5b0:	e0 0f       	add	r30, r16
 5b2:	f1 1f       	adc	r31, r17
 5b4:	cf 01       	movw	r24, r30
 5b6:	6c e3       	ldi	r22, 0x3C	; 60
 5b8:	70 e0       	ldi	r23, 0x00	; 0
 5ba:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 5be:	97 ff       	sbrs	r25, 7
 5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <strftime+0x56c>
 5c2:	91 95       	neg	r25
 5c4:	81 95       	neg	r24
 5c6:	91 09       	sbc	r25, r1
 5c8:	9f 93       	push	r25
 5ca:	8f 93       	push	r24
 5cc:	cf 01       	movw	r24, r30
 5ce:	6c e3       	ldi	r22, 0x3C	; 60
 5d0:	70 e0       	ldi	r23, 0x00	; 0
 5d2:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 5d6:	7f 93       	push	r23
 5d8:	6f 93       	push	r22
 5da:	80 e0       	ldi	r24, 0x00	; 0
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	9f 93       	push	r25
 5e0:	8f 93       	push	r24
 5e2:	ff 92       	push	r15
 5e4:	ef 92       	push	r14
 5e6:	0e 94 00 00 	call	0	; 0x0 <pgm_copystring>
 5ea:	0f b6       	in	r0, 0x3f	; 63
 5ec:	f8 94       	cli
 5ee:	de bf       	out	0x3e, r29	; 62
 5f0:	0f be       	out	0x3f, r0	; 63
 5f2:	cd bf       	out	0x3d, r28	; 61
 5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <strftime+0x5a0>
 5f6:	8f e3       	ldi	r24, 0x3F	; 63
 5f8:	89 83       	std	Y+1, r24	; 0x01
 5fa:	1a 82       	std	Y+2, r1	; 0x02
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	ac 01       	movw	r20, r24
 602:	46 0d       	add	r20, r6
 604:	57 1d       	adc	r21, r7
 606:	29 a1       	ldd	r18, Y+33	; 0x21
 608:	3a a1       	ldd	r19, Y+34	; 0x22
 60a:	42 17       	cp	r20, r18
 60c:	53 07       	cpc	r21, r19
 60e:	00 f4       	brcc	.+0      	; 0x610 <strftime+0x5ba>
 610:	20 e0       	ldi	r18, 0x00	; 0
 612:	30 e0       	ldi	r19, 0x00	; 0
 614:	28 17       	cp	r18, r24
 616:	39 07       	cpc	r19, r25
 618:	04 f4       	brge	.+0      	; 0x61a <strftime+0x5c4>
 61a:	f2 01       	movw	r30, r4
 61c:	e2 0f       	add	r30, r18
 61e:	f3 1f       	adc	r31, r19
 620:	d7 01       	movw	r26, r14
 622:	a2 0f       	add	r26, r18
 624:	b3 1f       	adc	r27, r19
 626:	6c 91       	ld	r22, X
 628:	60 83       	st	Z, r22
 62a:	2f 5f       	subi	r18, 0xFF	; 255
 62c:	3f 4f       	sbci	r19, 0xFF	; 255
 62e:	00 c0       	rjmp	.+0      	; 0x630 <strftime+0x5da>
 630:	97 ff       	sbrs	r25, 7
 632:	00 c0       	rjmp	.+0      	; 0x634 <strftime+0x5de>
 634:	80 e0       	ldi	r24, 0x00	; 0
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	48 0e       	add	r4, r24
 63a:	59 1e       	adc	r5, r25
 63c:	00 c0       	rjmp	.+0      	; 0x63e <strftime+0x5e8>
 63e:	f2 01       	movw	r30, r4
 640:	81 93       	st	Z+, r24
 642:	2f 01       	movw	r4, r30
 644:	ff ef       	ldi	r31, 0xFF	; 255
 646:	6f 1a       	sub	r6, r31
 648:	7f 0a       	sbc	r7, r31
 64a:	88 23       	and	r24, r24
 64c:	01 f0       	breq	.+0      	; 0x64e <strftime+0x5f8>
 64e:	2f ef       	ldi	r18, 0xFF	; 255
 650:	82 1a       	sub	r8, r18
 652:	92 0a       	sbc	r9, r18
 654:	a3 01       	movw	r20, r6
 656:	3a 01       	movw	r6, r20
 658:	00 c0       	rjmp	.+0      	; 0x65a <strftime+0x604>
 65a:	d2 01       	movw	r26, r4
 65c:	1c 92       	st	X, r1
 65e:	c3 01       	movw	r24, r6
 660:	a2 96       	adiw	r28, 0x22	; 34
 662:	0f b6       	in	r0, 0x3f	; 63
 664:	f8 94       	cli
 666:	de bf       	out	0x3e, r29	; 62
 668:	0f be       	out	0x3f, r0	; 63
 66a:	cd bf       	out	0x3d, r28	; 61
 66c:	df 91       	pop	r29
 66e:	cf 91       	pop	r28
 670:	1f 91       	pop	r17
 672:	0f 91       	pop	r16
 674:	ff 90       	pop	r15
 676:	ef 90       	pop	r14
 678:	df 90       	pop	r13
 67a:	cf 90       	pop	r12
 67c:	bf 90       	pop	r11
 67e:	af 90       	pop	r10
 680:	9f 90       	pop	r9
 682:	8f 90       	pop	r8
 684:	7f 90       	pop	r7
 686:	6f 90       	pop	r6
 688:	5f 90       	pop	r5
 68a:	4f 90       	pop	r4
 68c:	3f 90       	pop	r3
 68e:	2f 90       	pop	r2
 690:	08 95       	ret

Дизассемблирование раздела .rodata.str1.1:

00000000 <.rodata.str1.1>:
   0:	25 2e       	mov	r2, r21
   2:	32 64       	ori	r19, 0x42	; 66
   4:	00 25       	eor	r16, r0
   6:	2e 32       	cpi	r18, 0x2E	; 46
   8:	75 00       	.word	0x0075	; ????
   a:	25 2e       	mov	r2, r21
   c:	32 75       	andi	r19, 0x52	; 82
   e:	2f 25       	eor	r18, r15
  10:	2e 32       	cpi	r18, 0x2E	; 46
  12:	75 2f       	mov	r23, r21
  14:	25 2e       	mov	r2, r21
  16:	32 75       	andi	r19, 0x52	; 82
  18:	00 25       	eor	r16, r0
  1a:	32 64       	ori	r19, 0x42	; 66
  1c:	00 25       	eor	r16, r0
  1e:	64 2d       	mov	r22, r4
  20:	25 2e       	mov	r2, r21
  22:	32 64       	ori	r19, 0x42	; 66
  24:	2d 25       	eor	r18, r13
  26:	2e 32       	cpi	r18, 0x2E	; 46
  28:	64 00       	.word	0x0064	; ????
  2a:	25 2e       	mov	r2, r21
  2c:	34 64       	ori	r19, 0x44	; 68
  2e:	00 25       	eor	r16, r0
  30:	2e 33       	cpi	r18, 0x3E	; 62
  32:	75 00       	.word	0x0075	; ????
  34:	25 32       	cpi	r18, 0x25	; 37
  36:	64 3a       	cpi	r22, 0xA4	; 164
  38:	25 2e       	mov	r2, r21
  3a:	32 64       	ori	r19, 0x42	; 66
  3c:	3a 25       	eor	r19, r10
  3e:	2e 32       	cpi	r18, 0x2E	; 46
  40:	64 20       	and	r6, r4
  42:	41 4d       	sbci	r20, 0xD1	; 209
  44:	00 25       	eor	r16, r0
  46:	2e 32       	cpi	r18, 0x2E	; 46
  48:	64 3a       	cpi	r22, 0xA4	; 164
  4a:	25 2e       	mov	r2, r21
  4c:	32 64       	ori	r19, 0x42	; 66
  4e:	00 09       	sbc	r16, r0
  50:	00 25       	eor	r16, r0
  52:	2e 32       	cpi	r18, 0x2E	; 46
  54:	64 3a       	cpi	r22, 0xA4	; 164
  56:	25 2e       	mov	r2, r21
  58:	32 64       	ori	r19, 0x42	; 66
  5a:	3a 25       	eor	r19, r10
  5c:	2e 32       	cpi	r18, 0x2E	; 46
  5e:	64 00       	.word	0x0064	; ????
  60:	25 64       	ori	r18, 0x45	; 69
  62:	00 25       	eor	r16, r0
  64:	75 00       	.word	0x0075	; ????
  66:	25 2e       	mov	r2, r21
  68:	32 75       	andi	r19, 0x52	; 82
  6a:	3a 25       	eor	r19, r10
  6c:	2e 32       	cpi	r18, 0x2E	; 46
  6e:	75 3a       	cpi	r23, 0xA5	; 165
  70:	25 2e       	mov	r2, r21
  72:	32 75       	andi	r19, 0x52	; 82
  74:	00 25       	eor	r16, r0
  76:	2b 2e       	mov	r2, r27
  78:	32 64       	ori	r19, 0x42	; 66
  7a:	25 2e       	mov	r2, r21
  7c:	32 64       	ori	r19, 0x42	; 66
	...

Дизассемблирование раздела .progmemx.data:

00000000 <strfmonths>:
   0:	4a 61       	ori	r20, 0x1A	; 26
   2:	6e 75       	andi	r22, 0x5E	; 94
   4:	61 72       	andi	r22, 0x21	; 33
   6:	79 20       	and	r7, r9
   8:	46 65       	ori	r20, 0x56	; 86
   a:	62 72       	andi	r22, 0x22	; 34
   c:	75 61       	ori	r23, 0x15	; 21
   e:	72 79       	andi	r23, 0x92	; 146
  10:	20 4d       	sbci	r18, 0xD0	; 208
  12:	61 72       	andi	r22, 0x21	; 33
  14:	63 68       	ori	r22, 0x83	; 131
  16:	20 41       	sbci	r18, 0x10	; 16
  18:	70 72       	andi	r23, 0x20	; 32
  1a:	69 6c       	ori	r22, 0xC9	; 201
  1c:	20 4d       	sbci	r18, 0xD0	; 208
  1e:	61 79       	andi	r22, 0x91	; 145
  20:	20 4a       	sbci	r18, 0xA0	; 160
  22:	75 6e       	ori	r23, 0xE5	; 229
  24:	65 20       	and	r6, r5
  26:	4a 75       	andi	r20, 0x5A	; 90
  28:	6c 79       	andi	r22, 0x9C	; 156
  2a:	20 41       	sbci	r18, 0x10	; 16
  2c:	75 67       	ori	r23, 0x75	; 117
  2e:	75 73       	andi	r23, 0x35	; 53
  30:	74 20       	and	r7, r4
  32:	53 65       	ori	r21, 0x53	; 83
  34:	70 74       	andi	r23, 0x40	; 64
  36:	65 6d       	ori	r22, 0xD5	; 213
  38:	62 65       	ori	r22, 0x52	; 82
  3a:	72 20       	and	r7, r2
  3c:	4f 63       	ori	r20, 0x3F	; 63
  3e:	74 6f       	ori	r23, 0xF4	; 244
  40:	62 65       	ori	r22, 0x52	; 82
  42:	72 20       	and	r7, r2
  44:	4e 6f       	ori	r20, 0xFE	; 254
  46:	76 65       	ori	r23, 0x56	; 86
  48:	6d 62       	ori	r22, 0x2D	; 45
  4a:	65 72       	andi	r22, 0x25	; 37
  4c:	20 44       	sbci	r18, 0x40	; 64
  4e:	65 63       	ori	r22, 0x35	; 53
  50:	65 6d       	ori	r22, 0xD5	; 213
  52:	62 65       	ori	r22, 0x52	; 82
  54:	72 20       	and	r7, r2
	...

00000057 <strfwkdays>:
  57:	53 75       	andi	r21, 0x53	; 83
  59:	6e 64       	ori	r22, 0x4E	; 78
  5b:	61 79       	andi	r22, 0x91	; 145
  5d:	20 4d       	sbci	r18, 0xD0	; 208
  5f:	6f 6e       	ori	r22, 0xEF	; 239
  61:	64 61       	ori	r22, 0x14	; 20
  63:	79 20       	and	r7, r9
  65:	54 75       	andi	r21, 0x54	; 84
  67:	65 73       	andi	r22, 0x35	; 53
  69:	64 61       	ori	r22, 0x14	; 20
  6b:	79 20       	and	r7, r9
  6d:	57 65       	ori	r21, 0x57	; 87
  6f:	64 6e       	ori	r22, 0xE4	; 228
  71:	65 73       	andi	r22, 0x35	; 53
  73:	64 61       	ori	r22, 0x14	; 20
  75:	79 20       	and	r7, r9
  77:	54 68       	ori	r21, 0x84	; 132
  79:	75 72       	andi	r23, 0x25	; 37
  7b:	73 64       	ori	r23, 0x43	; 67
  7d:	61 79       	andi	r22, 0x91	; 145
  7f:	20 46       	sbci	r18, 0x60	; 96
  81:	72 69       	ori	r23, 0x92	; 146
  83:	64 61       	ori	r22, 0x14	; 20
  85:	79 20       	and	r7, r9
  87:	53 61       	ori	r21, 0x13	; 19
  89:	74 75       	andi	r23, 0x54	; 84
  8b:	72 64       	ori	r23, 0x42	; 66
  8d:	61 79       	andi	r22, 0x91	; 145
  8f:	20 00       	.word	0x0020	; ????

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

sun_rise.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <sun_rise>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	0e 94 00 00 	call	0	; 0x0 <sun_rise>
  12:	6b 01       	movw	r12, r22
  14:	7c 01       	movw	r14, r24
  16:	ce 01       	movw	r24, r28
  18:	0e 94 00 00 	call	0	; 0x0 <sun_rise>
  1c:	22 e0       	ldi	r18, 0x02	; 2
  1e:	30 e0       	ldi	r19, 0x00	; 0
  20:	40 e0       	ldi	r20, 0x00	; 0
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <sun_rise>
  28:	c7 01       	movw	r24, r14
  2a:	b6 01       	movw	r22, r12
  2c:	62 1b       	sub	r22, r18
  2e:	73 0b       	sbc	r23, r19
  30:	84 0b       	sbc	r24, r20
  32:	95 0b       	sbc	r25, r21
  34:	df 91       	pop	r29
  36:	cf 91       	pop	r28
  38:	ff 90       	pop	r15
  3a:	ef 90       	pop	r14
  3c:	df 90       	pop	r13
  3e:	cf 90       	pop	r12
  40:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

sun_set.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <sun_set>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	cf 93       	push	r28
   a:	df 93       	push	r29
   c:	ec 01       	movw	r28, r24
   e:	0e 94 00 00 	call	0	; 0x0 <sun_set>
  12:	6b 01       	movw	r12, r22
  14:	7c 01       	movw	r14, r24
  16:	ce 01       	movw	r24, r28
  18:	0e 94 00 00 	call	0	; 0x0 <sun_set>
  1c:	22 e0       	ldi	r18, 0x02	; 2
  1e:	30 e0       	ldi	r19, 0x00	; 0
  20:	40 e0       	ldi	r20, 0x00	; 0
  22:	50 e0       	ldi	r21, 0x00	; 0
  24:	0e 94 00 00 	call	0	; 0x0 <sun_set>
  28:	2c 0d       	add	r18, r12
  2a:	3d 1d       	adc	r19, r13
  2c:	4e 1d       	adc	r20, r14
  2e:	5f 1d       	adc	r21, r15
  30:	ca 01       	movw	r24, r20
  32:	b9 01       	movw	r22, r18
  34:	df 91       	pop	r29
  36:	cf 91       	pop	r28
  38:	ff 90       	pop	r15
  3a:	ef 90       	pop	r14
  3c:	df 90       	pop	r13
  3e:	cf 90       	pop	r12
  40:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

system_time.o:     формат файла elf32-avr


Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

time.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <time>:
   0:	fc 01       	movw	r30, r24
   2:	0f b6       	in	r0, 0x3f	; 63
   4:	f8 94       	cli
   6:	60 91 00 00 	lds	r22, 0x0000
   a:	70 91 00 00 	lds	r23, 0x0000
   e:	80 91 00 00 	lds	r24, 0x0000
  12:	90 91 00 00 	lds	r25, 0x0000
  16:	0f be       	out	0x3f, r0	; 63
  18:	30 97       	sbiw	r30, 0x00	; 0
  1a:	01 f0       	breq	.+0      	; 0x1c <time+0x1c>
  1c:	60 83       	st	Z, r22
  1e:	71 83       	std	Z+1, r23	; 0x01
  20:	82 83       	std	Z+2, r24	; 0x02
  22:	93 83       	std	Z+3, r25	; 0x03
  24:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

tm_store.o:     формат файла elf32-avr


Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

utc_offset.o:     формат файла elf32-avr


Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

week_of_month.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <week_of_month>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	dc 01       	movw	r26, r24
   6:	13 96       	adiw	r26, 0x03	; 3
   8:	2c 91       	ld	r18, X
   a:	13 97       	sbiw	r26, 0x03	; 3
   c:	33 27       	eor	r19, r19
   e:	27 fd       	sbrc	r18, 7
  10:	30 95       	com	r19
  12:	f9 01       	movw	r30, r18
  14:	31 97       	sbiw	r30, 0x01	; 1
  16:	2a 5f       	subi	r18, 0xFA	; 250
  18:	3f 4f       	sbci	r19, 0xFF	; 255
  1a:	14 96       	adiw	r26, 0x04	; 4
  1c:	8c 91       	ld	r24, X
  1e:	28 1b       	sub	r18, r24
  20:	31 09       	sbc	r19, r1
  22:	87 fd       	sbrc	r24, 7
  24:	33 95       	inc	r19
  26:	26 0f       	add	r18, r22
  28:	31 1d       	adc	r19, r1
  2a:	c7 e0       	ldi	r28, 0x07	; 7
  2c:	d0 e0       	ldi	r29, 0x00	; 0
  2e:	c9 01       	movw	r24, r18
  30:	be 01       	movw	r22, r28
  32:	0e 94 00 00 	call	0	; 0x0 <week_of_month>
  36:	e8 1b       	sub	r30, r24
  38:	f9 0b       	sbc	r31, r25
  3a:	f7 fd       	sbrc	r31, 7
  3c:	00 c0       	rjmp	.+0      	; 0x3e <week_of_month+0x3e>
  3e:	cf 01       	movw	r24, r30
  40:	be 01       	movw	r22, r28
  42:	0e 94 00 00 	call	0	; 0x0 <week_of_month>
  46:	81 e0       	ldi	r24, 0x01	; 1
  48:	86 0f       	add	r24, r22
  4a:	00 c0       	rjmp	.+0      	; 0x4c <week_of_month+0x4c>
  4c:	80 e0       	ldi	r24, 0x00	; 0
  4e:	df 91       	pop	r29
  50:	cf 91       	pop	r28
  52:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

week_of_year.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <week_of_year>:
   0:	cf 93       	push	r28
   2:	df 93       	push	r29
   4:	fc 01       	movw	r30, r24
   6:	c0 85       	ldd	r28, Z+8	; 0x08
   8:	d1 85       	ldd	r29, Z+9	; 0x09
   a:	9e 01       	movw	r18, r28
   c:	29 5f       	subi	r18, 0xF9	; 249
   e:	3f 4f       	sbci	r19, 0xFF	; 255
  10:	84 81       	ldd	r24, Z+4	; 0x04
  12:	28 1b       	sub	r18, r24
  14:	31 09       	sbc	r19, r1
  16:	87 fd       	sbrc	r24, 7
  18:	33 95       	inc	r19
  1a:	26 0f       	add	r18, r22
  1c:	31 1d       	adc	r19, r1
  1e:	e7 e0       	ldi	r30, 0x07	; 7
  20:	f0 e0       	ldi	r31, 0x00	; 0
  22:	c9 01       	movw	r24, r18
  24:	bf 01       	movw	r22, r30
  26:	0e 94 00 00 	call	0	; 0x0 <week_of_year>
  2a:	9e 01       	movw	r18, r28
  2c:	28 1b       	sub	r18, r24
  2e:	39 0b       	sbc	r19, r25
  30:	c9 01       	movw	r24, r18
  32:	37 fd       	sbrc	r19, 7
  34:	00 c0       	rjmp	.+0      	; 0x36 <week_of_year+0x36>
  36:	bf 01       	movw	r22, r30
  38:	0e 94 00 00 	call	0	; 0x0 <week_of_year>
  3c:	81 e0       	ldi	r24, 0x01	; 1
  3e:	86 0f       	add	r24, r22
  40:	00 c0       	rjmp	.+0      	; 0x42 <week_of_year+0x42>
  42:	80 e0       	ldi	r24, 0x00	; 0
  44:	df 91       	pop	r29
  46:	cf 91       	pop	r28
  48:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

system_tick.o:     формат файла elf32-avr


Дизассемблирование раздела .text:

00000000 <system_tick>:
   0:	8f 93       	push	r24
   2:	8f b7       	in	r24, 0x3f	; 63
   4:	8f 93       	push	r24
   6:	f8 94       	cli
   8:	80 91 00 00 	lds	r24, 0x0000
   c:	8f 5f       	subi	r24, 0xFF	; 255
   e:	80 93 00 00 	sts	0x0000, r24
  12:	80 91 00 00 	lds	r24, 0x0000
  16:	8f 4f       	sbci	r24, 0xFF	; 255
  18:	80 93 00 00 	sts	0x0000, r24
  1c:	80 91 00 00 	lds	r24, 0x0000
  20:	8f 4f       	sbci	r24, 0xFF	; 255
  22:	80 93 00 00 	sts	0x0000, r24
  26:	80 91 00 00 	lds	r24, 0x0000
  2a:	8f 4f       	sbci	r24, 0xFF	; 255
  2c:	80 93 00 00 	sts	0x0000, r24
  30:	8f 91       	pop	r24
  32:	8f bf       	out	0x3f, r24	; 63
  34:	8f 91       	pop	r24
  36:	08 95       	ret

vfprintf_std.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <vfprintf>:
   0:	2f 92       	push	r2
   2:	3f 92       	push	r3
   4:	4f 92       	push	r4
   6:	5f 92       	push	r5
   8:	6f 92       	push	r6
   a:	7f 92       	push	r7
   c:	8f 92       	push	r8
   e:	9f 92       	push	r9
  10:	af 92       	push	r10
  12:	bf 92       	push	r11
  14:	cf 92       	push	r12
  16:	df 92       	push	r13
  18:	ef 92       	push	r14
  1a:	ff 92       	push	r15
  1c:	0f 93       	push	r16
  1e:	1f 93       	push	r17
  20:	cf 93       	push	r28
  22:	df 93       	push	r29
  24:	cd b7       	in	r28, 0x3d	; 61
  26:	de b7       	in	r29, 0x3e	; 62
  28:	2c 97       	sbiw	r28, 0x0c	; 12
  2a:	0f b6       	in	r0, 0x3f	; 63
  2c:	f8 94       	cli
  2e:	de bf       	out	0x3e, r29	; 62
  30:	0f be       	out	0x3f, r0	; 63
  32:	cd bf       	out	0x3d, r28	; 61
  34:	7c 01       	movw	r14, r24
  36:	6b 01       	movw	r12, r22
  38:	8a 01       	movw	r16, r20
  3a:	fc 01       	movw	r30, r24
  3c:	17 82       	std	Z+7, r1	; 0x07
  3e:	16 82       	std	Z+6, r1	; 0x06
  40:	83 81       	ldd	r24, Z+3	; 0x03
  42:	81 ff       	sbrs	r24, 1
  44:	00 c0       	rjmp	.+0      	; 0x46 <vfprintf+0x46>
  46:	ce 01       	movw	r24, r28
  48:	01 96       	adiw	r24, 0x01	; 1
  4a:	4c 01       	movw	r8, r24
  4c:	f7 01       	movw	r30, r14
  4e:	93 81       	ldd	r25, Z+3	; 0x03
  50:	f6 01       	movw	r30, r12
  52:	93 fd       	sbrc	r25, 3
  54:	85 91       	lpm	r24, Z+
  56:	93 ff       	sbrs	r25, 3
  58:	81 91       	ld	r24, Z+
  5a:	6f 01       	movw	r12, r30
  5c:	88 23       	and	r24, r24
  5e:	01 f4       	brne	.+0      	; 0x60 <vfprintf+0x60>
  60:	00 c0       	rjmp	.+0      	; 0x62 <vfprintf+0x62>
  62:	85 32       	cpi	r24, 0x25	; 37
  64:	01 f4       	brne	.+0      	; 0x66 <vfprintf+0x66>
  66:	93 fd       	sbrc	r25, 3
  68:	85 91       	lpm	r24, Z+
  6a:	93 ff       	sbrs	r25, 3
  6c:	81 91       	ld	r24, Z+
  6e:	6f 01       	movw	r12, r30
  70:	85 32       	cpi	r24, 0x25	; 37
  72:	01 f4       	brne	.+0      	; 0x74 <vfprintf+0x74>
  74:	b7 01       	movw	r22, r14
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
  7c:	00 c0       	rjmp	.+0      	; 0x7e <vfprintf+0x7e>
  7e:	51 2c       	mov	r5, r1
  80:	31 2c       	mov	r3, r1
  82:	20 e0       	ldi	r18, 0x00	; 0
  84:	20 32       	cpi	r18, 0x20	; 32
  86:	00 f4       	brcc	.+0      	; 0x88 <vfprintf+0x88>
  88:	8b 32       	cpi	r24, 0x2B	; 43
  8a:	01 f0       	breq	.+0      	; 0x8c <vfprintf+0x8c>
  8c:	00 f4       	brcc	.+0      	; 0x8e <vfprintf+0x8e>
  8e:	80 32       	cpi	r24, 0x20	; 32
  90:	01 f0       	breq	.+0      	; 0x92 <vfprintf+0x92>
  92:	83 32       	cpi	r24, 0x23	; 35
  94:	01 f4       	brne	.+0      	; 0x96 <vfprintf+0x96>
  96:	20 61       	ori	r18, 0x10	; 16
  98:	00 c0       	rjmp	.+0      	; 0x9a <vfprintf+0x9a>
  9a:	8d 32       	cpi	r24, 0x2D	; 45
  9c:	01 f0       	breq	.+0      	; 0x9e <vfprintf+0x9e>
  9e:	80 33       	cpi	r24, 0x30	; 48
  a0:	01 f4       	brne	.+0      	; 0xa2 <vfprintf+0xa2>
  a2:	21 60       	ori	r18, 0x01	; 1
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <vfprintf+0xa6>
  a6:	22 60       	ori	r18, 0x02	; 2
  a8:	24 60       	ori	r18, 0x04	; 4
  aa:	00 c0       	rjmp	.+0      	; 0xac <vfprintf+0xac>
  ac:	28 60       	ori	r18, 0x08	; 8
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <vfprintf+0xb0>
  b0:	27 fd       	sbrc	r18, 7
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <vfprintf+0xb4>
  b4:	30 ed       	ldi	r19, 0xD0	; 208
  b6:	38 0f       	add	r19, r24
  b8:	3a 30       	cpi	r19, 0x0A	; 10
  ba:	00 f4       	brcc	.+0      	; 0xbc <vfprintf+0xbc>
  bc:	26 ff       	sbrs	r18, 6
  be:	00 c0       	rjmp	.+0      	; 0xc0 <vfprintf+0xc0>
  c0:	fa e0       	ldi	r31, 0x0A	; 10
  c2:	5f 9e       	mul	r5, r31
  c4:	30 0d       	add	r19, r0
  c6:	11 24       	eor	r1, r1
  c8:	53 2e       	mov	r5, r19
  ca:	00 c0       	rjmp	.+0      	; 0xcc <vfprintf+0xcc>
  cc:	8a e0       	ldi	r24, 0x0A	; 10
  ce:	38 9e       	mul	r3, r24
  d0:	30 0d       	add	r19, r0
  d2:	11 24       	eor	r1, r1
  d4:	33 2e       	mov	r3, r19
  d6:	20 62       	ori	r18, 0x20	; 32
  d8:	00 c0       	rjmp	.+0      	; 0xda <vfprintf+0xda>
  da:	8e 32       	cpi	r24, 0x2E	; 46
  dc:	01 f4       	brne	.+0      	; 0xde <vfprintf+0xde>
  de:	26 fd       	sbrc	r18, 6
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <vfprintf+0xe2>
  e2:	20 64       	ori	r18, 0x40	; 64
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <vfprintf+0xe6>
  e6:	8c 36       	cpi	r24, 0x6C	; 108
  e8:	01 f4       	brne	.+0      	; 0xea <vfprintf+0xea>
  ea:	20 68       	ori	r18, 0x80	; 128
  ec:	00 c0       	rjmp	.+0      	; 0xee <vfprintf+0xee>
  ee:	88 36       	cpi	r24, 0x68	; 104
  f0:	01 f4       	brne	.+0      	; 0xf2 <vfprintf+0xf2>
  f2:	f6 01       	movw	r30, r12
  f4:	93 fd       	sbrc	r25, 3
  f6:	85 91       	lpm	r24, Z+
  f8:	93 ff       	sbrs	r25, 3
  fa:	81 91       	ld	r24, Z+
  fc:	6f 01       	movw	r12, r30
  fe:	81 11       	cpse	r24, r1
 100:	00 c0       	rjmp	.+0      	; 0x102 <vfprintf+0x102>
 102:	98 2f       	mov	r25, r24
 104:	9f 7d       	andi	r25, 0xDF	; 223
 106:	95 54       	subi	r25, 0x45	; 69
 108:	93 30       	cpi	r25, 0x03	; 3
 10a:	00 f4       	brcc	.+0      	; 0x10c <vfprintf+0x10c>
 10c:	0c 5f       	subi	r16, 0xFC	; 252
 10e:	1f 4f       	sbci	r17, 0xFF	; 255
 110:	ff e3       	ldi	r31, 0x3F	; 63
 112:	f9 83       	std	Y+1, r31	; 0x01
 114:	00 c0       	rjmp	.+0      	; 0x116 <vfprintf+0x116>
 116:	83 36       	cpi	r24, 0x63	; 99
 118:	01 f0       	breq	.+0      	; 0x11a <vfprintf+0x11a>
 11a:	83 37       	cpi	r24, 0x73	; 115
 11c:	01 f0       	breq	.+0      	; 0x11e <vfprintf+0x11e>
 11e:	83 35       	cpi	r24, 0x53	; 83
 120:	01 f0       	breq	.+0      	; 0x122 <vfprintf+0x122>
 122:	00 c0       	rjmp	.+0      	; 0x124 <vfprintf+0x124>
 124:	00 c0       	rjmp	.+0      	; 0x126 <vfprintf+0x126>
 126:	f8 01       	movw	r30, r16
 128:	80 81       	ld	r24, Z
 12a:	89 83       	std	Y+1, r24	; 0x01
 12c:	0e 5f       	subi	r16, 0xFE	; 254
 12e:	1f 4f       	sbci	r17, 0xFF	; 255
 130:	44 24       	eor	r4, r4
 132:	43 94       	inc	r4
 134:	51 2c       	mov	r5, r1
 136:	54 01       	movw	r10, r8
 138:	00 c0       	rjmp	.+0      	; 0x13a <vfprintf+0x13a>
 13a:	38 01       	movw	r6, r16
 13c:	f2 e0       	ldi	r31, 0x02	; 2
 13e:	6f 0e       	add	r6, r31
 140:	71 1c       	adc	r7, r1
 142:	f8 01       	movw	r30, r16
 144:	a0 80       	ld	r10, Z
 146:	b1 80       	ldd	r11, Z+1	; 0x01
 148:	26 ff       	sbrs	r18, 6
 14a:	00 c0       	rjmp	.+0      	; 0x14c <vfprintf+0x14c>
 14c:	65 2d       	mov	r22, r5
 14e:	70 e0       	ldi	r23, 0x00	; 0
 150:	00 c0       	rjmp	.+0      	; 0x152 <vfprintf+0x152>
 152:	6f ef       	ldi	r22, 0xFF	; 255
 154:	7f ef       	ldi	r23, 0xFF	; 255
 156:	c5 01       	movw	r24, r10
 158:	2c 87       	std	Y+12, r18	; 0x0c
 15a:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 15e:	2c 01       	movw	r4, r24
 160:	83 01       	movw	r16, r6
 162:	2c 85       	ldd	r18, Y+12	; 0x0c
 164:	2f 77       	andi	r18, 0x7F	; 127
 166:	22 2e       	mov	r2, r18
 168:	00 c0       	rjmp	.+0      	; 0x16a <vfprintf+0x16a>
 16a:	38 01       	movw	r6, r16
 16c:	f2 e0       	ldi	r31, 0x02	; 2
 16e:	6f 0e       	add	r6, r31
 170:	71 1c       	adc	r7, r1
 172:	f8 01       	movw	r30, r16
 174:	a0 80       	ld	r10, Z
 176:	b1 80       	ldd	r11, Z+1	; 0x01
 178:	26 ff       	sbrs	r18, 6
 17a:	00 c0       	rjmp	.+0      	; 0x17c <vfprintf+0x17c>
 17c:	65 2d       	mov	r22, r5
 17e:	70 e0       	ldi	r23, 0x00	; 0
 180:	00 c0       	rjmp	.+0      	; 0x182 <vfprintf+0x182>
 182:	6f ef       	ldi	r22, 0xFF	; 255
 184:	7f ef       	ldi	r23, 0xFF	; 255
 186:	c5 01       	movw	r24, r10
 188:	2c 87       	std	Y+12, r18	; 0x0c
 18a:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 18e:	2c 01       	movw	r4, r24
 190:	2c 85       	ldd	r18, Y+12	; 0x0c
 192:	20 68       	ori	r18, 0x80	; 128
 194:	22 2e       	mov	r2, r18
 196:	83 01       	movw	r16, r6
 198:	23 fc       	sbrc	r2, 3
 19a:	00 c0       	rjmp	.+0      	; 0x19c <vfprintf+0x19c>
 19c:	83 2d       	mov	r24, r3
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	48 16       	cp	r4, r24
 1a2:	59 06       	cpc	r5, r25
 1a4:	00 f4       	brcc	.+0      	; 0x1a6 <vfprintf+0x1a6>
 1a6:	b7 01       	movw	r22, r14
 1a8:	80 e2       	ldi	r24, 0x20	; 32
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 1b0:	3a 94       	dec	r3
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <vfprintf+0x1b4>
 1b4:	f5 01       	movw	r30, r10
 1b6:	27 fc       	sbrc	r2, 7
 1b8:	85 91       	lpm	r24, Z+
 1ba:	27 fe       	sbrs	r2, 7
 1bc:	81 91       	ld	r24, Z+
 1be:	5f 01       	movw	r10, r30
 1c0:	b7 01       	movw	r22, r14
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 1c8:	31 10       	cpse	r3, r1
 1ca:	3a 94       	dec	r3
 1cc:	f1 e0       	ldi	r31, 0x01	; 1
 1ce:	4f 1a       	sub	r4, r31
 1d0:	51 08       	sbc	r5, r1
 1d2:	41 14       	cp	r4, r1
 1d4:	51 04       	cpc	r5, r1
 1d6:	01 f4       	brne	.+0      	; 0x1d8 <vfprintf+0x1d8>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <vfprintf+0x1da>
 1da:	84 36       	cpi	r24, 0x64	; 100
 1dc:	01 f0       	breq	.+0      	; 0x1de <vfprintf+0x1de>
 1de:	89 36       	cpi	r24, 0x69	; 105
 1e0:	01 f4       	brne	.+0      	; 0x1e2 <vfprintf+0x1e2>
 1e2:	f8 01       	movw	r30, r16
 1e4:	27 ff       	sbrs	r18, 7
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <vfprintf+0x1e8>
 1e8:	60 81       	ld	r22, Z
 1ea:	71 81       	ldd	r23, Z+1	; 0x01
 1ec:	82 81       	ldd	r24, Z+2	; 0x02
 1ee:	93 81       	ldd	r25, Z+3	; 0x03
 1f0:	0c 5f       	subi	r16, 0xFC	; 252
 1f2:	1f 4f       	sbci	r17, 0xFF	; 255
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <vfprintf+0x1f6>
 1f6:	60 81       	ld	r22, Z
 1f8:	71 81       	ldd	r23, Z+1	; 0x01
 1fa:	88 27       	eor	r24, r24
 1fc:	77 fd       	sbrc	r23, 7
 1fe:	80 95       	com	r24
 200:	98 2f       	mov	r25, r24
 202:	0e 5f       	subi	r16, 0xFE	; 254
 204:	1f 4f       	sbci	r17, 0xFF	; 255
 206:	2f 76       	andi	r18, 0x6F	; 111
 208:	b2 2e       	mov	r11, r18
 20a:	97 ff       	sbrs	r25, 7
 20c:	00 c0       	rjmp	.+0      	; 0x20e <vfprintf+0x20e>
 20e:	90 95       	com	r25
 210:	80 95       	com	r24
 212:	70 95       	com	r23
 214:	61 95       	neg	r22
 216:	7f 4f       	sbci	r23, 0xFF	; 255
 218:	8f 4f       	sbci	r24, 0xFF	; 255
 21a:	9f 4f       	sbci	r25, 0xFF	; 255
 21c:	20 68       	ori	r18, 0x80	; 128
 21e:	b2 2e       	mov	r11, r18
 220:	2a e0       	ldi	r18, 0x0A	; 10
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	a4 01       	movw	r20, r8
 226:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 22a:	a8 2e       	mov	r10, r24
 22c:	a8 18       	sub	r10, r8
 22e:	00 c0       	rjmp	.+0      	; 0x230 <vfprintf+0x230>
 230:	85 37       	cpi	r24, 0x75	; 117
 232:	01 f4       	brne	.+0      	; 0x234 <vfprintf+0x234>
 234:	2f 7e       	andi	r18, 0xEF	; 239
 236:	b2 2e       	mov	r11, r18
 238:	2a e0       	ldi	r18, 0x0A	; 10
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	00 c0       	rjmp	.+0      	; 0x23e <vfprintf+0x23e>
 23e:	f2 2f       	mov	r31, r18
 240:	f9 7f       	andi	r31, 0xF9	; 249
 242:	bf 2e       	mov	r11, r31
 244:	8f 36       	cpi	r24, 0x6F	; 111
 246:	01 f0       	breq	.+0      	; 0x248 <vfprintf+0x248>
 248:	00 f4       	brcc	.+0      	; 0x24a <vfprintf+0x24a>
 24a:	88 35       	cpi	r24, 0x58	; 88
 24c:	01 f0       	breq	.+0      	; 0x24e <vfprintf+0x24e>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <vfprintf+0x250>
 250:	80 37       	cpi	r24, 0x70	; 112
 252:	01 f0       	breq	.+0      	; 0x254 <vfprintf+0x254>
 254:	88 37       	cpi	r24, 0x78	; 120
 256:	01 f0       	breq	.+0      	; 0x258 <vfprintf+0x258>
 258:	00 c0       	rjmp	.+0      	; 0x25a <vfprintf+0x25a>
 25a:	2f 2f       	mov	r18, r31
 25c:	20 61       	ori	r18, 0x10	; 16
 25e:	b2 2e       	mov	r11, r18
 260:	b4 fe       	sbrs	r11, 4
 262:	00 c0       	rjmp	.+0      	; 0x264 <vfprintf+0x264>
 264:	8b 2d       	mov	r24, r11
 266:	84 60       	ori	r24, 0x04	; 4
 268:	b8 2e       	mov	r11, r24
 26a:	00 c0       	rjmp	.+0      	; 0x26c <vfprintf+0x26c>
 26c:	24 ff       	sbrs	r18, 4
 26e:	00 c0       	rjmp	.+0      	; 0x270 <vfprintf+0x270>
 270:	9f 2f       	mov	r25, r31
 272:	96 60       	ori	r25, 0x06	; 6
 274:	b9 2e       	mov	r11, r25
 276:	00 c0       	rjmp	.+0      	; 0x278 <vfprintf+0x278>
 278:	28 e0       	ldi	r18, 0x08	; 8
 27a:	30 e0       	ldi	r19, 0x00	; 0
 27c:	00 c0       	rjmp	.+0      	; 0x27e <vfprintf+0x27e>
 27e:	20 e1       	ldi	r18, 0x10	; 16
 280:	30 e0       	ldi	r19, 0x00	; 0
 282:	00 c0       	rjmp	.+0      	; 0x284 <vfprintf+0x284>
 284:	20 e1       	ldi	r18, 0x10	; 16
 286:	32 e0       	ldi	r19, 0x02	; 2
 288:	f8 01       	movw	r30, r16
 28a:	b7 fe       	sbrs	r11, 7
 28c:	00 c0       	rjmp	.+0      	; 0x28e <vfprintf+0x28e>
 28e:	60 81       	ld	r22, Z
 290:	71 81       	ldd	r23, Z+1	; 0x01
 292:	82 81       	ldd	r24, Z+2	; 0x02
 294:	93 81       	ldd	r25, Z+3	; 0x03
 296:	0c 5f       	subi	r16, 0xFC	; 252
 298:	1f 4f       	sbci	r17, 0xFF	; 255
 29a:	00 c0       	rjmp	.+0      	; 0x29c <vfprintf+0x29c>
 29c:	60 81       	ld	r22, Z
 29e:	71 81       	ldd	r23, Z+1	; 0x01
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	0e 5f       	subi	r16, 0xFE	; 254
 2a6:	1f 4f       	sbci	r17, 0xFF	; 255
 2a8:	a4 01       	movw	r20, r8
 2aa:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 2ae:	a8 2e       	mov	r10, r24
 2b0:	a8 18       	sub	r10, r8
 2b2:	fb 2d       	mov	r31, r11
 2b4:	ff 77       	andi	r31, 0x7F	; 127
 2b6:	bf 2e       	mov	r11, r31
 2b8:	b6 fe       	sbrs	r11, 6
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <vfprintf+0x2bc>
 2bc:	2b 2d       	mov	r18, r11
 2be:	2e 7f       	andi	r18, 0xFE	; 254
 2c0:	a5 14       	cp	r10, r5
 2c2:	00 f4       	brcc	.+0      	; 0x2c4 <vfprintf+0x2c4>
 2c4:	b4 fe       	sbrs	r11, 4
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <vfprintf+0x2c8>
 2c8:	b2 fc       	sbrc	r11, 2
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <vfprintf+0x2cc>
 2cc:	2b 2d       	mov	r18, r11
 2ce:	2e 7e       	andi	r18, 0xEE	; 238
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <vfprintf+0x2d2>
 2d2:	7a 2c       	mov	r7, r10
 2d4:	2b 2d       	mov	r18, r11
 2d6:	00 c0       	rjmp	.+0      	; 0x2d8 <vfprintf+0x2d8>
 2d8:	7a 2c       	mov	r7, r10
 2da:	00 c0       	rjmp	.+0      	; 0x2dc <vfprintf+0x2dc>
 2dc:	75 2c       	mov	r7, r5
 2de:	24 ff       	sbrs	r18, 4
 2e0:	00 c0       	rjmp	.+0      	; 0x2e2 <vfprintf+0x2e2>
 2e2:	fe 01       	movw	r30, r28
 2e4:	ea 0d       	add	r30, r10
 2e6:	f1 1d       	adc	r31, r1
 2e8:	80 81       	ld	r24, Z
 2ea:	80 33       	cpi	r24, 0x30	; 48
 2ec:	01 f4       	brne	.+0      	; 0x2ee <vfprintf+0x2ee>
 2ee:	29 7e       	andi	r18, 0xE9	; 233
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <vfprintf+0x2f2>
 2f2:	22 ff       	sbrs	r18, 2
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <vfprintf+0x2f6>
 2f6:	73 94       	inc	r7
 2f8:	73 94       	inc	r7
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <vfprintf+0x2fc>
 2fc:	82 2f       	mov	r24, r18
 2fe:	86 78       	andi	r24, 0x86	; 134
 300:	01 f0       	breq	.+0      	; 0x302 <vfprintf+0x302>
 302:	73 94       	inc	r7
 304:	23 fd       	sbrc	r18, 3
 306:	00 c0       	rjmp	.+0      	; 0x308 <vfprintf+0x308>
 308:	20 ff       	sbrs	r18, 0
 30a:	00 c0       	rjmp	.+0      	; 0x30c <vfprintf+0x30c>
 30c:	5a 2c       	mov	r5, r10
 30e:	73 14       	cp	r7, r3
 310:	00 f4       	brcc	.+0      	; 0x312 <vfprintf+0x312>
 312:	53 0c       	add	r5, r3
 314:	57 18       	sub	r5, r7
 316:	73 2c       	mov	r7, r3
 318:	73 14       	cp	r7, r3
 31a:	00 f4       	brcc	.+0      	; 0x31c <vfprintf+0x31c>
 31c:	b7 01       	movw	r22, r14
 31e:	80 e2       	ldi	r24, 0x20	; 32
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	2c 87       	std	Y+12, r18	; 0x0c
 324:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 328:	73 94       	inc	r7
 32a:	2c 85       	ldd	r18, Y+12	; 0x0c
 32c:	00 c0       	rjmp	.+0      	; 0x32e <vfprintf+0x32e>
 32e:	73 14       	cp	r7, r3
 330:	00 f4       	brcc	.+0      	; 0x332 <vfprintf+0x332>
 332:	37 18       	sub	r3, r7
 334:	00 c0       	rjmp	.+0      	; 0x336 <vfprintf+0x336>
 336:	31 2c       	mov	r3, r1
 338:	24 ff       	sbrs	r18, 4
 33a:	00 c0       	rjmp	.+0      	; 0x33c <vfprintf+0x33c>
 33c:	b7 01       	movw	r22, r14
 33e:	80 e3       	ldi	r24, 0x30	; 48
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	2c 87       	std	Y+12, r18	; 0x0c
 344:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 348:	2c 85       	ldd	r18, Y+12	; 0x0c
 34a:	22 ff       	sbrs	r18, 2
 34c:	00 c0       	rjmp	.+0      	; 0x34e <vfprintf+0x34e>
 34e:	21 ff       	sbrs	r18, 1
 350:	00 c0       	rjmp	.+0      	; 0x352 <vfprintf+0x352>
 352:	88 e5       	ldi	r24, 0x58	; 88
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	00 c0       	rjmp	.+0      	; 0x358 <vfprintf+0x358>
 358:	88 e7       	ldi	r24, 0x78	; 120
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	b7 01       	movw	r22, r14
 35e:	00 c0       	rjmp	.+0      	; 0x360 <vfprintf+0x360>
 360:	82 2f       	mov	r24, r18
 362:	86 78       	andi	r24, 0x86	; 134
 364:	01 f0       	breq	.+0      	; 0x366 <vfprintf+0x366>
 366:	21 fd       	sbrc	r18, 1
 368:	00 c0       	rjmp	.+0      	; 0x36a <vfprintf+0x36a>
 36a:	80 e2       	ldi	r24, 0x20	; 32
 36c:	00 c0       	rjmp	.+0      	; 0x36e <vfprintf+0x36e>
 36e:	8b e2       	ldi	r24, 0x2B	; 43
 370:	27 fd       	sbrc	r18, 7
 372:	8d e2       	ldi	r24, 0x2D	; 45
 374:	b7 01       	movw	r22, r14
 376:	90 e0       	ldi	r25, 0x00	; 0
 378:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 37c:	a5 14       	cp	r10, r5
 37e:	00 f4       	brcc	.+0      	; 0x380 <vfprintf+0x380>
 380:	b7 01       	movw	r22, r14
 382:	80 e3       	ldi	r24, 0x30	; 48
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 38a:	5a 94       	dec	r5
 38c:	00 c0       	rjmp	.+0      	; 0x38e <vfprintf+0x38e>
 38e:	aa 94       	dec	r10
 390:	f4 01       	movw	r30, r8
 392:	ea 0d       	add	r30, r10
 394:	f1 1d       	adc	r31, r1
 396:	80 81       	ld	r24, Z
 398:	b7 01       	movw	r22, r14
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 3a0:	a1 10       	cpse	r10, r1
 3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <vfprintf+0x3a4>
 3a4:	33 20       	and	r3, r3
 3a6:	01 f4       	brne	.+0      	; 0x3a8 <vfprintf+0x3a8>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <vfprintf+0x3aa>
 3aa:	b7 01       	movw	r22, r14
 3ac:	80 e2       	ldi	r24, 0x20	; 32
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 00 00 	call	0	; 0x0 <vfprintf>
 3b4:	3a 94       	dec	r3
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <vfprintf+0x3b8>
 3b8:	f7 01       	movw	r30, r14
 3ba:	86 81       	ldd	r24, Z+6	; 0x06
 3bc:	97 81       	ldd	r25, Z+7	; 0x07
 3be:	00 c0       	rjmp	.+0      	; 0x3c0 <vfprintf+0x3c0>
 3c0:	8f ef       	ldi	r24, 0xFF	; 255
 3c2:	9f ef       	ldi	r25, 0xFF	; 255
 3c4:	2c 96       	adiw	r28, 0x0c	; 12
 3c6:	0f b6       	in	r0, 0x3f	; 63
 3c8:	f8 94       	cli
 3ca:	de bf       	out	0x3e, r29	; 62
 3cc:	0f be       	out	0x3f, r0	; 63
 3ce:	cd bf       	out	0x3d, r28	; 61
 3d0:	df 91       	pop	r29
 3d2:	cf 91       	pop	r28
 3d4:	1f 91       	pop	r17
 3d6:	0f 91       	pop	r16
 3d8:	ff 90       	pop	r15
 3da:	ef 90       	pop	r14
 3dc:	df 90       	pop	r13
 3de:	cf 90       	pop	r12
 3e0:	bf 90       	pop	r11
 3e2:	af 90       	pop	r10
 3e4:	9f 90       	pop	r9
 3e6:	8f 90       	pop	r8
 3e8:	7f 90       	pop	r7
 3ea:	6f 90       	pop	r6
 3ec:	5f 90       	pop	r5
 3ee:	4f 90       	pop	r4
 3f0:	3f 90       	pop	r3
 3f2:	2f 90       	pop	r2
 3f4:	08 95       	ret

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

vfscanf_std.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <putval>:
   0:	20 fd       	sbrc	r18, 0
   2:	00 c0       	rjmp	.+0      	; 0x4 <putval+0x4>
   4:	fc 01       	movw	r30, r24
   6:	23 fd       	sbrc	r18, 3
   8:	00 c0       	rjmp	.+0      	; 0xa <putval+0xa>
   a:	22 ff       	sbrs	r18, 2
   c:	00 c0       	rjmp	.+0      	; 0xe <putval+0xe>
   e:	73 83       	std	Z+3, r23	; 0x03
  10:	62 83       	std	Z+2, r22	; 0x02
  12:	51 83       	std	Z+1, r21	; 0x01
  14:	40 83       	st	Z, r20
  16:	08 95       	ret

00000018 <mulacc>:
  18:	44 fd       	sbrc	r20, 4
  1a:	00 c0       	rjmp	.+0      	; 0x1c <mulacc+0x4>
  1c:	46 fd       	sbrc	r20, 6
  1e:	00 c0       	rjmp	.+0      	; 0x20 <mulacc+0x8>
  20:	db 01       	movw	r26, r22
  22:	fc 01       	movw	r30, r24
  24:	aa 0f       	add	r26, r26
  26:	bb 1f       	adc	r27, r27
  28:	ee 1f       	adc	r30, r30
  2a:	ff 1f       	adc	r31, r31
  2c:	10 94       	com	r1
  2e:	01 f4       	brne	.+0      	; 0x30 <mulacc+0x18>
  30:	6a 0f       	add	r22, r26
  32:	7b 1f       	adc	r23, r27
  34:	8e 1f       	adc	r24, r30
  36:	9f 1f       	adc	r25, r31
  38:	31 e0       	ldi	r19, 0x01	; 1
  3a:	00 c0       	rjmp	.+0      	; 0x3c <mulacc+0x24>
  3c:	33 e0       	ldi	r19, 0x03	; 3
  3e:	00 c0       	rjmp	.+0      	; 0x40 <mulacc+0x28>
  40:	34 e0       	ldi	r19, 0x04	; 4
  42:	66 0f       	add	r22, r22
  44:	77 1f       	adc	r23, r23
  46:	88 1f       	adc	r24, r24
  48:	99 1f       	adc	r25, r25
  4a:	31 50       	subi	r19, 0x01	; 1
  4c:	01 f4       	brne	.+0      	; 0x4e <mulacc+0x36>
  4e:	62 0f       	add	r22, r18
  50:	71 1d       	adc	r23, r1
  52:	81 1d       	adc	r24, r1
  54:	91 1d       	adc	r25, r1
  56:	08 95       	ret

00000058 <skip_spaces>:
  58:	0f 93       	push	r16
  5a:	1f 93       	push	r17
  5c:	cf 93       	push	r28
  5e:	df 93       	push	r29
  60:	8c 01       	movw	r16, r24
  62:	c8 01       	movw	r24, r16
  64:	0e 94 00 00 	call	0	; 0x0 <putval>
  68:	ec 01       	movw	r28, r24
  6a:	97 fd       	sbrc	r25, 7
  6c:	00 c0       	rjmp	.+0      	; 0x6e <skip_spaces+0x16>
  6e:	0e 94 00 00 	call	0	; 0x0 <putval>
  72:	89 2b       	or	r24, r25
  74:	01 f4       	brne	.+0      	; 0x76 <skip_spaces+0x1e>
  76:	b8 01       	movw	r22, r16
  78:	ce 01       	movw	r24, r28
  7a:	0e 94 00 00 	call	0	; 0x0 <putval>
  7e:	ce 01       	movw	r24, r28
  80:	df 91       	pop	r29
  82:	cf 91       	pop	r28
  84:	1f 91       	pop	r17
  86:	0f 91       	pop	r16
  88:	08 95       	ret

0000008a <conv_int>:
  8a:	8f 92       	push	r8
  8c:	9f 92       	push	r9
  8e:	af 92       	push	r10
  90:	cf 92       	push	r12
  92:	df 92       	push	r13
  94:	ef 92       	push	r14
  96:	ff 92       	push	r15
  98:	0f 93       	push	r16
  9a:	1f 93       	push	r17
  9c:	cf 93       	push	r28
  9e:	df 93       	push	r29
  a0:	ec 01       	movw	r28, r24
  a2:	a6 2e       	mov	r10, r22
  a4:	4a 01       	movw	r8, r20
  a6:	02 2f       	mov	r16, r18
  a8:	0e 94 00 00 	call	0	; 0x0 <putval>
  ac:	ac 01       	movw	r20, r24
  ae:	55 27       	eor	r21, r21
  b0:	4b 32       	cpi	r20, 0x2B	; 43
  b2:	51 05       	cpc	r21, r1
  b4:	01 f0       	breq	.+0      	; 0xb6 <conv_int+0x2c>
  b6:	4d 32       	cpi	r20, 0x2D	; 45
  b8:	51 05       	cpc	r21, r1
  ba:	01 f4       	brne	.+0      	; 0xbc <conv_int+0x32>
  bc:	00 68       	ori	r16, 0x80	; 128
  be:	aa 94       	dec	r10
  c0:	01 f4       	brne	.+0      	; 0xc2 <conv_int+0x38>
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <conv_int+0x3c>
  c6:	ce 01       	movw	r24, r28
  c8:	0e 94 00 00 	call	0	; 0x0 <putval>
  cc:	97 fd       	sbrc	r25, 7
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <conv_int+0x46>
  d0:	10 2f       	mov	r17, r16
  d2:	1d 7f       	andi	r17, 0xFD	; 253
  d4:	30 2f       	mov	r19, r16
  d6:	30 73       	andi	r19, 0x30	; 48
  d8:	01 f4       	brne	.+0      	; 0xda <conv_int+0x50>
  da:	80 33       	cpi	r24, 0x30	; 48
  dc:	01 f4       	brne	.+0      	; 0xde <conv_int+0x54>
  de:	ff 24       	eor	r15, r15
  e0:	fa 94       	dec	r15
  e2:	fa 0c       	add	r15, r10
  e4:	01 f4       	brne	.+0      	; 0xe6 <conv_int+0x5c>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <conv_int+0x5e>
  e8:	ce 01       	movw	r24, r28
  ea:	0e 94 00 00 	call	0	; 0x0 <putval>
  ee:	97 fd       	sbrc	r25, 7
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <conv_int+0x68>
  f2:	38 2f       	mov	r19, r24
  f4:	3f 7d       	andi	r19, 0xDF	; 223
  f6:	38 35       	cpi	r19, 0x58	; 88
  f8:	01 f4       	brne	.+0      	; 0xfa <conv_int+0x70>
  fa:	12 64       	ori	r17, 0x42	; 66
  fc:	aa 94       	dec	r10
  fe:	aa 94       	dec	r10
 100:	01 f0       	breq	.+0      	; 0x102 <conv_int+0x78>
 102:	ce 01       	movw	r24, r28
 104:	0e 94 00 00 	call	0	; 0x0 <putval>
 108:	97 ff       	sbrs	r25, 7
 10a:	00 c0       	rjmp	.+0      	; 0x10c <conv_int+0x82>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <conv_int+0x84>
 10e:	06 ff       	sbrs	r16, 6
 110:	00 c0       	rjmp	.+0      	; 0x112 <conv_int+0x88>
 112:	12 60       	ori	r17, 0x02	; 2
 114:	00 c0       	rjmp	.+0      	; 0x116 <conv_int+0x8c>
 116:	12 61       	ori	r17, 0x12	; 18
 118:	af 2c       	mov	r10, r15
 11a:	c1 2c       	mov	r12, r1
 11c:	d1 2c       	mov	r13, r1
 11e:	76 01       	movw	r14, r12
 120:	20 ed       	ldi	r18, 0xD0	; 208
 122:	28 0f       	add	r18, r24
 124:	28 30       	cpi	r18, 0x08	; 8
 126:	00 f0       	brcs	.+0      	; 0x128 <conv_int+0x9e>
 128:	14 ff       	sbrs	r17, 4
 12a:	00 c0       	rjmp	.+0      	; 0x12c <conv_int+0xa2>
 12c:	be 01       	movw	r22, r28
 12e:	0e 94 00 00 	call	0	; 0x0 <putval>
 132:	00 c0       	rjmp	.+0      	; 0x134 <conv_int+0xaa>
 134:	2a 30       	cpi	r18, 0x0A	; 10
 136:	00 f0       	brcs	.+0      	; 0x138 <conv_int+0xae>
 138:	16 ff       	sbrs	r17, 6
 13a:	00 c0       	rjmp	.+0      	; 0x13c <conv_int+0xb2>
 13c:	2f 7d       	andi	r18, 0xDF	; 223
 13e:	3f ee       	ldi	r19, 0xEF	; 239
 140:	32 0f       	add	r19, r18
 142:	36 30       	cpi	r19, 0x06	; 6
 144:	00 f4       	brcc	.+0      	; 0x146 <conv_int+0xbc>
 146:	27 50       	subi	r18, 0x07	; 7
 148:	41 2f       	mov	r20, r17
 14a:	c7 01       	movw	r24, r14
 14c:	b6 01       	movw	r22, r12
 14e:	0e 94 00 00 	call	0	; 0x0 <putval>
 152:	6b 01       	movw	r12, r22
 154:	7c 01       	movw	r14, r24
 156:	12 60       	ori	r17, 0x02	; 2
 158:	aa 94       	dec	r10
 15a:	01 f0       	breq	.+0      	; 0x15c <conv_int+0xd2>
 15c:	ce 01       	movw	r24, r28
 15e:	0e 94 00 00 	call	0	; 0x0 <putval>
 162:	97 ff       	sbrs	r25, 7
 164:	00 c0       	rjmp	.+0      	; 0x166 <conv_int+0xdc>
 166:	11 fd       	sbrc	r17, 1
 168:	00 c0       	rjmp	.+0      	; 0x16a <conv_int+0xe0>
 16a:	00 c0       	rjmp	.+0      	; 0x16c <conv_int+0xe2>
 16c:	c1 2c       	mov	r12, r1
 16e:	d1 2c       	mov	r13, r1
 170:	76 01       	movw	r14, r12
 172:	17 ff       	sbrs	r17, 7
 174:	00 c0       	rjmp	.+0      	; 0x176 <conv_int+0xec>
 176:	f0 94       	com	r15
 178:	e0 94       	com	r14
 17a:	d0 94       	com	r13
 17c:	c0 94       	com	r12
 17e:	c1 1c       	adc	r12, r1
 180:	d1 1c       	adc	r13, r1
 182:	e1 1c       	adc	r14, r1
 184:	f1 1c       	adc	r15, r1
 186:	21 2f       	mov	r18, r17
 188:	b7 01       	movw	r22, r14
 18a:	a6 01       	movw	r20, r12
 18c:	c4 01       	movw	r24, r8
 18e:	0e 94 00 00 	call	0	; 0x0 <putval>
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	df 91       	pop	r29
 196:	cf 91       	pop	r28
 198:	1f 91       	pop	r17
 19a:	0f 91       	pop	r16
 19c:	ff 90       	pop	r15
 19e:	ef 90       	pop	r14
 1a0:	df 90       	pop	r13
 1a2:	cf 90       	pop	r12
 1a4:	af 90       	pop	r10
 1a6:	9f 90       	pop	r9
 1a8:	8f 90       	pop	r8
 1aa:	08 95       	ret

000001ac <conv_brk>:
 1ac:	7f 92       	push	r7
 1ae:	8f 92       	push	r8
 1b0:	9f 92       	push	r9
 1b2:	af 92       	push	r10
 1b4:	bf 92       	push	r11
 1b6:	cf 92       	push	r12
 1b8:	df 92       	push	r13
 1ba:	ef 92       	push	r14
 1bc:	ff 92       	push	r15
 1be:	0f 93       	push	r16
 1c0:	1f 93       	push	r17
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	cd b7       	in	r28, 0x3d	; 61
 1c8:	de b7       	in	r29, 0x3e	; 62
 1ca:	a1 97       	sbiw	r28, 0x21	; 33
 1cc:	0f b6       	in	r0, 0x3f	; 63
 1ce:	f8 94       	cli
 1d0:	de bf       	out	0x3e, r29	; 62
 1d2:	0f be       	out	0x3f, r0	; 63
 1d4:	cd bf       	out	0x3d, r28	; 61
 1d6:	5c 01       	movw	r10, r24
 1d8:	7a 01       	movw	r14, r20
 1da:	8e 01       	movw	r16, r28
 1dc:	0f 5f       	subi	r16, 0xFF	; 255
 1de:	1f 4f       	sbci	r17, 0xFF	; 255
 1e0:	68 01       	movw	r12, r16
 1e2:	80 e2       	ldi	r24, 0x20	; 32
 1e4:	d8 01       	movw	r26, r16
 1e6:	1d 92       	st	X+, r1
 1e8:	8a 95       	dec	r24
 1ea:	01 f4       	brne	.+0      	; 0x1ec <conv_brk+0x40>
 1ec:	f5 01       	movw	r30, r10
 1ee:	73 80       	ldd	r7, Z+3	; 0x03
 1f0:	40 e0       	ldi	r20, 0x00	; 0
 1f2:	50 e0       	ldi	r21, 0x00	; 0
 1f4:	81 2c       	mov	r8, r1
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	91 2c       	mov	r9, r1
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	f9 01       	movw	r30, r18
 200:	73 fc       	sbrc	r7, 3
 202:	a5 91       	lpm	r26, Z+
 204:	73 fe       	sbrs	r7, 3
 206:	a1 91       	ld	r26, Z+
 208:	8f 01       	movw	r16, r30
 20a:	7a 2f       	mov	r23, r26
 20c:	9f 01       	movw	r18, r30
 20e:	a1 11       	cpse	r26, r1
 210:	00 c0       	rjmp	.+0      	; 0x212 <conv_brk+0x66>
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	00 c0       	rjmp	.+0      	; 0x218 <conv_brk+0x6c>
 218:	ae 35       	cpi	r26, 0x5E	; 94
 21a:	01 f4       	brne	.+0      	; 0x21c <conv_brk+0x70>
 21c:	41 15       	cp	r20, r1
 21e:	51 05       	cpc	r21, r1
 220:	01 f0       	breq	.+0      	; 0x222 <conv_brk+0x76>
 222:	e9 2d       	mov	r30, r9
 224:	f0 e0       	ldi	r31, 0x00	; 0
 226:	e4 17       	cp	r30, r20
 228:	f5 07       	cpc	r31, r21
 22a:	04 f4       	brge	.+0      	; 0x22c <conv_brk+0x80>
 22c:	ad 35       	cpi	r26, 0x5D	; 93
 22e:	01 f0       	breq	.+0      	; 0x230 <conv_brk+0x84>
 230:	ad 32       	cpi	r26, 0x2D	; 45
 232:	01 f4       	brne	.+0      	; 0x234 <conv_brk+0x88>
 234:	bb 23       	and	r27, r27
 236:	01 f0       	breq	.+0      	; 0x238 <conv_brk+0x8c>
 238:	00 c0       	rjmp	.+0      	; 0x23a <conv_brk+0x8e>
 23a:	b1 11       	cpse	r27, r1
 23c:	00 c0       	rjmp	.+0      	; 0x23e <conv_brk+0x92>
 23e:	8a 2e       	mov	r8, r26
 240:	e7 2f       	mov	r30, r23
 242:	e6 95       	lsr	r30
 244:	e6 95       	lsr	r30
 246:	e6 95       	lsr	r30
 248:	86 01       	movw	r16, r12
 24a:	0e 0f       	add	r16, r30
 24c:	11 1d       	adc	r17, r1
 24e:	f8 01       	movw	r30, r16
 250:	a7 2f       	mov	r26, r23
 252:	a7 70       	andi	r26, 0x07	; 7
 254:	8c 01       	movw	r16, r24
 256:	00 c0       	rjmp	.+0      	; 0x258 <conv_brk+0xac>
 258:	00 0f       	add	r16, r16
 25a:	11 1f       	adc	r17, r17
 25c:	aa 95       	dec	r26
 25e:	02 f4       	brpl	.+0      	; 0x260 <conv_brk+0xb4>
 260:	d8 01       	movw	r26, r16
 262:	b0 81       	ld	r27, Z
 264:	ba 2b       	or	r27, r26
 266:	b0 83       	st	Z, r27
 268:	78 15       	cp	r23, r8
 26a:	01 f0       	breq	.+0      	; 0x26c <conv_brk+0xc0>
 26c:	78 15       	cp	r23, r8
 26e:	00 f4       	brcc	.+0      	; 0x270 <conv_brk+0xc4>
 270:	7f 5f       	subi	r23, 0xFF	; 255
 272:	00 c0       	rjmp	.+0      	; 0x274 <conv_brk+0xc8>
 274:	71 50       	subi	r23, 0x01	; 1
 276:	00 c0       	rjmp	.+0      	; 0x278 <conv_brk+0xcc>
 278:	99 24       	eor	r9, r9
 27a:	93 94       	inc	r9
 27c:	00 c0       	rjmp	.+0      	; 0x27e <conv_brk+0xd2>
 27e:	b1 e0       	ldi	r27, 0x01	; 1
 280:	00 c0       	rjmp	.+0      	; 0x282 <conv_brk+0xd6>
 282:	b0 e0       	ldi	r27, 0x00	; 0
 284:	4f 5f       	subi	r20, 0xFF	; 255
 286:	5f 4f       	sbci	r21, 0xFF	; 255
 288:	00 c0       	rjmp	.+0      	; 0x28a <conv_brk+0xde>
 28a:	bb 23       	and	r27, r27
 28c:	01 f0       	breq	.+0      	; 0x28e <conv_brk+0xe2>
 28e:	8e 81       	ldd	r24, Y+6	; 0x06
 290:	80 62       	ori	r24, 0x20	; 32
 292:	8e 83       	std	Y+6, r24	; 0x06
 294:	91 10       	cpse	r9, r1
 296:	00 c0       	rjmp	.+0      	; 0x298 <conv_brk+0xec>
 298:	99 24       	eor	r9, r9
 29a:	93 94       	inc	r9
 29c:	00 c0       	rjmp	.+0      	; 0x29e <conv_brk+0xf2>
 29e:	f6 01       	movw	r30, r12
 2a0:	ce 01       	movw	r24, r28
 2a2:	81 96       	adiw	r24, 0x21	; 33
 2a4:	20 81       	ld	r18, Z
 2a6:	20 95       	com	r18
 2a8:	21 93       	st	Z+, r18
 2aa:	e8 17       	cp	r30, r24
 2ac:	f9 07       	cpc	r31, r25
 2ae:	01 f4       	brne	.+0      	; 0x2b0 <conv_brk+0x104>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <conv_brk+0x106>
 2b2:	e1 14       	cp	r14, r1
 2b4:	f1 04       	cpc	r15, r1
 2b6:	01 f0       	breq	.+0      	; 0x2b8 <conv_brk+0x10c>
 2b8:	d7 01       	movw	r26, r14
 2ba:	8c 93       	st	X, r24
 2bc:	f7 01       	movw	r30, r14
 2be:	31 96       	adiw	r30, 0x01	; 1
 2c0:	7f 01       	movw	r14, r30
 2c2:	61 50       	subi	r22, 0x01	; 1
 2c4:	01 f0       	breq	.+0      	; 0x2c6 <conv_brk+0x11a>
 2c6:	91 2c       	mov	r9, r1
 2c8:	c5 01       	movw	r24, r10
 2ca:	69 a3       	std	Y+33, r22	; 0x21
 2cc:	0e 94 00 00 	call	0	; 0x0 <putval>
 2d0:	69 a1       	ldd	r22, Y+33	; 0x21
 2d2:	97 fd       	sbrc	r25, 7
 2d4:	00 c0       	rjmp	.+0      	; 0x2d6 <conv_brk+0x12a>
 2d6:	28 2f       	mov	r18, r24
 2d8:	26 95       	lsr	r18
 2da:	26 95       	lsr	r18
 2dc:	26 95       	lsr	r18
 2de:	f6 01       	movw	r30, r12
 2e0:	e2 0f       	add	r30, r18
 2e2:	f1 1d       	adc	r31, r1
 2e4:	20 81       	ld	r18, Z
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	ac 01       	movw	r20, r24
 2ea:	47 70       	andi	r20, 0x07	; 7
 2ec:	55 27       	eor	r21, r21
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <conv_brk+0x144>
 2f0:	35 95       	asr	r19
 2f2:	27 95       	ror	r18
 2f4:	4a 95       	dec	r20
 2f6:	02 f4       	brpl	.+0      	; 0x2f8 <conv_brk+0x14c>
 2f8:	20 fd       	sbrc	r18, 0
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <conv_brk+0x150>
 2fc:	b5 01       	movw	r22, r10
 2fe:	0e 94 00 00 	call	0	; 0x0 <putval>
 302:	91 10       	cpse	r9, r1
 304:	00 c0       	rjmp	.+0      	; 0x306 <conv_brk+0x15a>
 306:	e1 14       	cp	r14, r1
 308:	f1 04       	cpc	r15, r1
 30a:	01 f0       	breq	.+0      	; 0x30c <conv_brk+0x160>
 30c:	d7 01       	movw	r26, r14
 30e:	1c 92       	st	X, r1
 310:	c8 01       	movw	r24, r16
 312:	a1 96       	adiw	r28, 0x21	; 33
 314:	0f b6       	in	r0, 0x3f	; 63
 316:	f8 94       	cli
 318:	de bf       	out	0x3e, r29	; 62
 31a:	0f be       	out	0x3f, r0	; 63
 31c:	cd bf       	out	0x3d, r28	; 61
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	1f 91       	pop	r17
 324:	0f 91       	pop	r16
 326:	ff 90       	pop	r15
 328:	ef 90       	pop	r14
 32a:	df 90       	pop	r13
 32c:	cf 90       	pop	r12
 32e:	bf 90       	pop	r11
 330:	af 90       	pop	r10
 332:	9f 90       	pop	r9
 334:	8f 90       	pop	r8
 336:	7f 90       	pop	r7
 338:	08 95       	ret

0000033a <vfscanf>:
 33a:	4f 92       	push	r4
 33c:	5f 92       	push	r5
 33e:	7f 92       	push	r7
 340:	8f 92       	push	r8
 342:	9f 92       	push	r9
 344:	af 92       	push	r10
 346:	bf 92       	push	r11
 348:	cf 92       	push	r12
 34a:	df 92       	push	r13
 34c:	ef 92       	push	r14
 34e:	ff 92       	push	r15
 350:	0f 93       	push	r16
 352:	1f 93       	push	r17
 354:	cf 93       	push	r28
 356:	df 93       	push	r29
 358:	1f 92       	push	r1
 35a:	cd b7       	in	r28, 0x3d	; 61
 35c:	de b7       	in	r29, 0x3e	; 62
 35e:	8c 01       	movw	r16, r24
 360:	2b 01       	movw	r4, r22
 362:	7a 01       	movw	r14, r20
 364:	fc 01       	movw	r30, r24
 366:	17 82       	std	Z+7, r1	; 0x07
 368:	16 82       	std	Z+6, r1	; 0x06
 36a:	a1 2c       	mov	r10, r1
 36c:	f8 01       	movw	r30, r16
 36e:	d3 80       	ldd	r13, Z+3	; 0x03
 370:	f2 01       	movw	r30, r4
 372:	d3 fc       	sbrc	r13, 3
 374:	85 91       	lpm	r24, Z+
 376:	d3 fe       	sbrs	r13, 3
 378:	81 91       	ld	r24, Z+
 37a:	38 2f       	mov	r19, r24
 37c:	2f 01       	movw	r4, r30
 37e:	88 23       	and	r24, r24
 380:	01 f4       	brne	.+0      	; 0x382 <vfscanf+0x48>
 382:	00 c0       	rjmp	.+0      	; 0x384 <vfscanf+0x4a>
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	39 83       	std	Y+1, r19	; 0x01
 388:	0e 94 00 00 	call	0	; 0x0 <putval>
 38c:	39 81       	ldd	r19, Y+1	; 0x01
 38e:	89 2b       	or	r24, r25
 390:	01 f0       	breq	.+0      	; 0x392 <vfscanf+0x58>
 392:	c8 01       	movw	r24, r16
 394:	0e 94 00 00 	call	0	; 0x0 <putval>
 398:	00 c0       	rjmp	.+0      	; 0x39a <vfscanf+0x60>
 39a:	35 32       	cpi	r19, 0x25	; 37
 39c:	01 f4       	brne	.+0      	; 0x39e <vfscanf+0x64>
 39e:	f2 01       	movw	r30, r4
 3a0:	d3 fc       	sbrc	r13, 3
 3a2:	35 91       	lpm	r19, Z+
 3a4:	d3 fe       	sbrs	r13, 3
 3a6:	31 91       	ld	r19, Z+
 3a8:	2f 01       	movw	r4, r30
 3aa:	35 32       	cpi	r19, 0x25	; 37
 3ac:	01 f4       	brne	.+0      	; 0x3ae <vfscanf+0x74>
 3ae:	c8 01       	movw	r24, r16
 3b0:	39 83       	std	Y+1, r19	; 0x01
 3b2:	0e 94 00 00 	call	0	; 0x0 <putval>
 3b6:	39 81       	ldd	r19, Y+1	; 0x01
 3b8:	97 fd       	sbrc	r25, 7
 3ba:	00 c0       	rjmp	.+0      	; 0x3bc <vfscanf+0x82>
 3bc:	38 17       	cp	r19, r24
 3be:	01 f0       	breq	.+0      	; 0x3c0 <vfscanf+0x86>
 3c0:	b8 01       	movw	r22, r16
 3c2:	0e 94 00 00 	call	0	; 0x0 <putval>
 3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <vfscanf+0x8e>
 3c8:	3a 32       	cpi	r19, 0x2A	; 42
 3ca:	01 f4       	brne	.+0      	; 0x3cc <vfscanf+0x92>
 3cc:	d3 fc       	sbrc	r13, 3
 3ce:	35 91       	lpm	r19, Z+
 3d0:	d3 fe       	sbrs	r13, 3
 3d2:	31 91       	ld	r19, Z+
 3d4:	2f 01       	movw	r4, r30
 3d6:	bb 24       	eor	r11, r11
 3d8:	b3 94       	inc	r11
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <vfscanf+0xa2>
 3dc:	b1 2c       	mov	r11, r1
 3de:	71 2c       	mov	r7, r1
 3e0:	20 ed       	ldi	r18, 0xD0	; 208
 3e2:	23 0f       	add	r18, r19
 3e4:	2a 30       	cpi	r18, 0x0A	; 10
 3e6:	00 f4       	brcc	.+0      	; 0x3e8 <vfscanf+0xae>
 3e8:	fb 2d       	mov	r31, r11
 3ea:	f2 60       	ori	r31, 0x02	; 2
 3ec:	bf 2e       	mov	r11, r31
 3ee:	67 2d       	mov	r22, r7
 3f0:	70 e0       	ldi	r23, 0x00	; 0
 3f2:	80 e0       	ldi	r24, 0x00	; 0
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	40 e2       	ldi	r20, 0x20	; 32
 3f8:	0e 94 00 00 	call	0	; 0x0 <putval>
 3fc:	76 2e       	mov	r7, r22
 3fe:	f2 01       	movw	r30, r4
 400:	d3 fc       	sbrc	r13, 3
 402:	35 91       	lpm	r19, Z+
 404:	d3 fe       	sbrs	r13, 3
 406:	31 91       	ld	r19, Z+
 408:	2f 01       	movw	r4, r30
 40a:	00 c0       	rjmp	.+0      	; 0x40c <vfscanf+0xd2>
 40c:	b1 fe       	sbrs	r11, 1
 40e:	00 c0       	rjmp	.+0      	; 0x410 <vfscanf+0xd6>
 410:	71 10       	cpse	r7, r1
 412:	00 c0       	rjmp	.+0      	; 0x414 <vfscanf+0xda>
 414:	00 c0       	rjmp	.+0      	; 0x416 <vfscanf+0xdc>
 416:	77 24       	eor	r7, r7
 418:	7a 94       	dec	r7
 41a:	38 36       	cpi	r19, 0x68	; 104
 41c:	01 f0       	breq	.+0      	; 0x41e <vfscanf+0xe4>
 41e:	3c 36       	cpi	r19, 0x6C	; 108
 420:	01 f0       	breq	.+0      	; 0x422 <vfscanf+0xe8>
 422:	00 c0       	rjmp	.+0      	; 0x424 <vfscanf+0xea>
 424:	f2 01       	movw	r30, r4
 426:	d3 fc       	sbrc	r13, 3
 428:	35 91       	lpm	r19, Z+
 42a:	d3 fe       	sbrs	r13, 3
 42c:	31 91       	ld	r19, Z+
 42e:	2f 01       	movw	r4, r30
 430:	38 36       	cpi	r19, 0x68	; 104
 432:	01 f4       	brne	.+0      	; 0x434 <vfscanf+0xfa>
 434:	fb 2d       	mov	r31, r11
 436:	f8 60       	ori	r31, 0x08	; 8
 438:	bf 2e       	mov	r11, r31
 43a:	8b 2d       	mov	r24, r11
 43c:	84 60       	ori	r24, 0x04	; 4
 43e:	b8 2e       	mov	r11, r24
 440:	f2 01       	movw	r30, r4
 442:	d3 fc       	sbrc	r13, 3
 444:	35 91       	lpm	r19, Z+
 446:	d3 fe       	sbrs	r13, 3
 448:	31 91       	ld	r19, Z+
 44a:	2f 01       	movw	r4, r30
 44c:	33 23       	and	r19, r19
 44e:	01 f4       	brne	.+0      	; 0x450 <vfscanf+0x116>
 450:	00 c0       	rjmp	.+0      	; 0x452 <vfscanf+0x118>
 452:	63 2f       	mov	r22, r19
 454:	70 e0       	ldi	r23, 0x00	; 0
 456:	80 e0       	ldi	r24, 0x00	; 0
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	39 83       	std	Y+1, r19	; 0x01
 45c:	0e 94 00 00 	call	0	; 0x0 <putval>
 460:	39 81       	ldd	r19, Y+1	; 0x01
 462:	89 2b       	or	r24, r25
 464:	01 f4       	brne	.+0      	; 0x466 <vfscanf+0x12c>
 466:	00 c0       	rjmp	.+0      	; 0x468 <vfscanf+0x12e>
 468:	b0 fc       	sbrc	r11, 0
 46a:	00 c0       	rjmp	.+0      	; 0x46c <vfscanf+0x132>
 46c:	f7 01       	movw	r30, r14
 46e:	c0 80       	ld	r12, Z
 470:	d1 80       	ldd	r13, Z+1	; 0x01
 472:	c7 01       	movw	r24, r14
 474:	02 96       	adiw	r24, 0x02	; 2
 476:	7c 01       	movw	r14, r24
 478:	00 c0       	rjmp	.+0      	; 0x47a <vfscanf+0x140>
 47a:	c1 2c       	mov	r12, r1
 47c:	d1 2c       	mov	r13, r1
 47e:	3e 36       	cpi	r19, 0x6E	; 110
 480:	01 f4       	brne	.+0      	; 0x482 <vfscanf+0x148>
 482:	f8 01       	movw	r30, r16
 484:	46 81       	ldd	r20, Z+6	; 0x06
 486:	57 81       	ldd	r21, Z+7	; 0x07
 488:	60 e0       	ldi	r22, 0x00	; 0
 48a:	70 e0       	ldi	r23, 0x00	; 0
 48c:	2b 2d       	mov	r18, r11
 48e:	c6 01       	movw	r24, r12
 490:	0e 94 00 00 	call	0	; 0x0 <putval>
 494:	00 c0       	rjmp	.+0      	; 0x496 <vfscanf+0x15c>
 496:	33 36       	cpi	r19, 0x63	; 99
 498:	01 f4       	brne	.+0      	; 0x49a <vfscanf+0x160>
 49a:	b1 fc       	sbrc	r11, 1
 49c:	00 c0       	rjmp	.+0      	; 0x49e <vfscanf+0x164>
 49e:	77 24       	eor	r7, r7
 4a0:	73 94       	inc	r7
 4a2:	c8 01       	movw	r24, r16
 4a4:	0e 94 00 00 	call	0	; 0x0 <putval>
 4a8:	97 fd       	sbrc	r25, 7
 4aa:	00 c0       	rjmp	.+0      	; 0x4ac <vfscanf+0x172>
 4ac:	c1 14       	cp	r12, r1
 4ae:	d1 04       	cpc	r13, r1
 4b0:	01 f0       	breq	.+0      	; 0x4b2 <vfscanf+0x178>
 4b2:	f6 01       	movw	r30, r12
 4b4:	80 83       	st	Z, r24
 4b6:	c6 01       	movw	r24, r12
 4b8:	01 96       	adiw	r24, 0x01	; 1
 4ba:	6c 01       	movw	r12, r24
 4bc:	7a 94       	dec	r7
 4be:	01 f4       	brne	.+0      	; 0x4c0 <vfscanf+0x186>
 4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <vfscanf+0x188>
 4c2:	3b 35       	cpi	r19, 0x5B	; 91
 4c4:	01 f4       	brne	.+0      	; 0x4c6 <vfscanf+0x18c>
 4c6:	92 01       	movw	r18, r4
 4c8:	a6 01       	movw	r20, r12
 4ca:	67 2d       	mov	r22, r7
 4cc:	c8 01       	movw	r24, r16
 4ce:	0e 94 00 00 	call	0	; 0x0 <putval>
 4d2:	2c 01       	movw	r4, r24
 4d4:	00 97       	sbiw	r24, 0x00	; 0
 4d6:	01 f0       	breq	.+0      	; 0x4d8 <vfscanf+0x19e>
 4d8:	00 c0       	rjmp	.+0      	; 0x4da <vfscanf+0x1a0>
 4da:	00 c0       	rjmp	.+0      	; 0x4dc <vfscanf+0x1a2>
 4dc:	c8 01       	movw	r24, r16
 4de:	39 83       	std	Y+1, r19	; 0x01
 4e0:	0e 94 00 00 	call	0	; 0x0 <putval>
 4e4:	39 81       	ldd	r19, Y+1	; 0x01
 4e6:	97 fd       	sbrc	r25, 7
 4e8:	00 c0       	rjmp	.+0      	; 0x4ea <vfscanf+0x1b0>
 4ea:	3f 36       	cpi	r19, 0x6F	; 111
 4ec:	01 f0       	breq	.+0      	; 0x4ee <vfscanf+0x1b4>
 4ee:	00 f4       	brcc	.+0      	; 0x4f0 <vfscanf+0x1b6>
 4f0:	34 36       	cpi	r19, 0x64	; 100
 4f2:	01 f0       	breq	.+0      	; 0x4f4 <vfscanf+0x1ba>
 4f4:	39 36       	cpi	r19, 0x69	; 105
 4f6:	01 f0       	breq	.+0      	; 0x4f8 <vfscanf+0x1be>
 4f8:	00 c0       	rjmp	.+0      	; 0x4fa <vfscanf+0x1c0>
 4fa:	33 37       	cpi	r19, 0x73	; 115
 4fc:	01 f0       	breq	.+0      	; 0x4fe <vfscanf+0x1c4>
 4fe:	35 37       	cpi	r19, 0x75	; 117
 500:	01 f0       	breq	.+0      	; 0x502 <vfscanf+0x1c8>
 502:	00 c0       	rjmp	.+0      	; 0x504 <vfscanf+0x1ca>
 504:	c1 14       	cp	r12, r1
 506:	d1 04       	cpc	r13, r1
 508:	01 f0       	breq	.+0      	; 0x50a <vfscanf+0x1d0>
 50a:	f6 01       	movw	r30, r12
 50c:	80 82       	st	Z, r8
 50e:	c6 01       	movw	r24, r12
 510:	01 96       	adiw	r24, 0x01	; 1
 512:	6c 01       	movw	r12, r24
 514:	7a 94       	dec	r7
 516:	01 f0       	breq	.+0      	; 0x518 <vfscanf+0x1de>
 518:	c8 01       	movw	r24, r16
 51a:	0e 94 00 00 	call	0	; 0x0 <putval>
 51e:	4c 01       	movw	r8, r24
 520:	97 fd       	sbrc	r25, 7
 522:	00 c0       	rjmp	.+0      	; 0x524 <vfscanf+0x1ea>
 524:	0e 94 00 00 	call	0	; 0x0 <putval>
 528:	89 2b       	or	r24, r25
 52a:	01 f0       	breq	.+0      	; 0x52c <vfscanf+0x1f2>
 52c:	b8 01       	movw	r22, r16
 52e:	c4 01       	movw	r24, r8
 530:	0e 94 00 00 	call	0	; 0x0 <putval>
 534:	c1 14       	cp	r12, r1
 536:	d1 04       	cpc	r13, r1
 538:	01 f0       	breq	.+0      	; 0x53a <vfscanf+0x200>
 53a:	f6 01       	movw	r30, r12
 53c:	10 82       	st	Z, r1
 53e:	00 c0       	rjmp	.+0      	; 0x540 <vfscanf+0x206>
 540:	fb 2d       	mov	r31, r11
 542:	f0 62       	ori	r31, 0x20	; 32
 544:	bf 2e       	mov	r11, r31
 546:	00 c0       	rjmp	.+0      	; 0x548 <vfscanf+0x20e>
 548:	8b 2d       	mov	r24, r11
 54a:	80 61       	ori	r24, 0x10	; 16
 54c:	b8 2e       	mov	r11, r24
 54e:	00 c0       	rjmp	.+0      	; 0x550 <vfscanf+0x216>
 550:	9b 2d       	mov	r25, r11
 552:	90 64       	ori	r25, 0x40	; 64
 554:	b9 2e       	mov	r11, r25
 556:	2b 2d       	mov	r18, r11
 558:	a6 01       	movw	r20, r12
 55a:	67 2d       	mov	r22, r7
 55c:	c8 01       	movw	r24, r16
 55e:	0e 94 00 00 	call	0	; 0x0 <putval>
 562:	81 11       	cpse	r24, r1
 564:	00 c0       	rjmp	.+0      	; 0x566 <vfscanf+0x22c>
 566:	f8 01       	movw	r30, r16
 568:	83 81       	ldd	r24, Z+3	; 0x03
 56a:	80 73       	andi	r24, 0x30	; 48
 56c:	01 f4       	brne	.+0      	; 0x56e <vfscanf+0x234>
 56e:	00 c0       	rjmp	.+0      	; 0x570 <vfscanf+0x236>
 570:	b0 fc       	sbrc	r11, 0
 572:	00 c0       	rjmp	.+0      	; 0x574 <vfscanf+0x23a>
 574:	a3 94       	inc	r10
 576:	00 c0       	rjmp	.+0      	; 0x578 <vfscanf+0x23e>
 578:	aa 20       	and	r10, r10
 57a:	01 f0       	breq	.+0      	; 0x57c <vfscanf+0x242>
 57c:	8a 2d       	mov	r24, r10
 57e:	90 e0       	ldi	r25, 0x00	; 0
 580:	00 c0       	rjmp	.+0      	; 0x582 <vfscanf+0x248>
 582:	8f ef       	ldi	r24, 0xFF	; 255
 584:	9f ef       	ldi	r25, 0xFF	; 255
 586:	0f 90       	pop	r0
 588:	df 91       	pop	r29
 58a:	cf 91       	pop	r28
 58c:	1f 91       	pop	r17
 58e:	0f 91       	pop	r16
 590:	ff 90       	pop	r15
 592:	ef 90       	pop	r14
 594:	df 90       	pop	r13
 596:	cf 90       	pop	r12
 598:	bf 90       	pop	r11
 59a:	af 90       	pop	r10
 59c:	9f 90       	pop	r9
 59e:	8f 90       	pop	r8
 5a0:	7f 90       	pop	r7
 5a2:	5f 90       	pop	r5
 5a4:	4f 90       	pop	r4
 5a6:	08 95       	ret

Дизассемблирование раздела .progmem.data:

00000000 <__c.2364>:
   0:	63 64       	ori	r22, 0x43	; 67
   2:	69 6e       	ori	r22, 0xE9	; 233
   4:	6f 70       	andi	r22, 0x0F	; 15
   6:	73 75       	andi	r23, 0x53	; 83
   8:	78 58       	subi	r23, 0x88	; 136
   a:	5b 00       	.word	0x005b	; ????

Дизассемблирование раздела .comment:

00000000 <.comment>:
   0:	00 47       	sbci	r16, 0x70	; 112
   2:	43 43       	sbci	r20, 0x33	; 51
   4:	3a 20       	and	r3, r10
   6:	28 47       	sbci	r18, 0x78	; 120
   8:	4e 55       	subi	r20, 0x5E	; 94
   a:	29 20       	and	r2, r9
   c:	34 2e       	mov	r3, r20
   e:	38 2e       	mov	r3, r24
  10:	32 00       	.word	0x0032	; ????

eerd_block_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	e1 99       	sbic	0x1c, 1	; 28
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	ff bb       	out	0x1f, r31	; 31
   e:	ee bb       	out	0x1e, r30	; 30
  10:	e0 9a       	sbi	0x1c, 0	; 28
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	0d b2       	in	r0, 0x1d	; 29
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	e1 99       	sbic	0x1c, 1	; 28
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	9f bb       	out	0x1f, r25	; 31
   6:	8e bb       	out	0x1e, r24	; 30
   8:	e0 9a       	sbi	0x1c, 0	; 28
   a:	99 27       	eor	r25, r25
   c:	8d b3       	in	r24, 0x1d	; 29
   e:	08 95       	ret

eerd_dword_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	e1 99       	sbic	0x1c, 1	; 28
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	9f bb       	out	0x1f, r25	; 31
   8:	8e bb       	out	0x1e, r24	; 30
   a:	e0 9a       	sbi	0x1c, 0	; 28
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	0d b2       	in	r0, 0x1d	; 29
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	2d bb       	out	0x1d, r18	; 29
  16:	0f b6       	in	r0, 0x3f	; 63
  18:	f8 94       	cli
  1a:	e2 9a       	sbi	0x1c, 2	; 28
  1c:	e1 9a       	sbi	0x1c, 1	; 28
  1e:	0f be       	out	0x3f, r0	; 63
  20:	08 95       	ret

eeupd_dword_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	e1 99       	sbic	0x1c, 1	; 28
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	9f bb       	out	0x1f, r25	; 31
   8:	8e bb       	out	0x1e, r24	; 30
   a:	2d bb       	out	0x1d, r18	; 29
   c:	0f b6       	in	r0, 0x3f	; 63
   e:	f8 94       	cli
  10:	e2 9a       	sbi	0x1c, 2	; 28
  12:	e1 9a       	sbi	0x1c, 1	; 28
  14:	0f be       	out	0x3f, r0	; 63
  16:	01 96       	adiw	r24, 0x01	; 1
  18:	08 95       	ret

eewr_dword_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_atmega128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	e1 99       	sbic	0x1c, 1	; 28
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	ff bb       	out	0x1f, r31	; 31
   e:	ee bb       	out	0x1e, r30	; 30
  10:	e0 9a       	sbi	0x1c, 0	; 28
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	0d b2       	in	r0, 0x1d	; 29
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	e1 99       	sbic	0x1c, 1	; 28
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	9f bb       	out	0x1f, r25	; 31
   6:	8e bb       	out	0x1e, r24	; 30
   8:	e0 9a       	sbi	0x1c, 0	; 28
   a:	99 27       	eor	r25, r25
   c:	8d b3       	in	r24, 0x1d	; 29
   e:	08 95       	ret

eerd_dword_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	e1 99       	sbic	0x1c, 1	; 28
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	9f bb       	out	0x1f, r25	; 31
   8:	8e bb       	out	0x1e, r24	; 30
   a:	e0 9a       	sbi	0x1c, 0	; 28
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	0d b2       	in	r0, 0x1d	; 29
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	2d bb       	out	0x1d, r18	; 29
  16:	0f b6       	in	r0, 0x3f	; 63
  18:	f8 94       	cli
  1a:	e2 9a       	sbi	0x1c, 2	; 28
  1c:	e1 9a       	sbi	0x1c, 1	; 28
  1e:	0f be       	out	0x3f, r0	; 63
  20:	08 95       	ret

eeupd_dword_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	e1 99       	sbic	0x1c, 1	; 28
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	9f bb       	out	0x1f, r25	; 31
   8:	8e bb       	out	0x1e, r24	; 30
   a:	2d bb       	out	0x1d, r18	; 29
   c:	0f b6       	in	r0, 0x3f	; 63
   e:	f8 94       	cli
  10:	e2 9a       	sbi	0x1c, 2	; 28
  12:	e1 9a       	sbi	0x1c, 1	; 28
  14:	0f be       	out	0x3f, r0	; 63
  16:	01 96       	adiw	r24, 0x01	; 1
  18:	08 95       	ret

eewr_dword_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_atmega128a.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	1f ba       	out	0x1f, r1	; 31
  16:	20 bd       	out	0x20, r18	; 32
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	fa 9a       	sbi	0x1f, 2	; 31
  1e:	f9 9a       	sbi	0x1f, 1	; 31
  20:	0f be       	out	0x3f, r0	; 63
  22:	08 95       	ret

eeupd_dword_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	1f ba       	out	0x1f, r1	; 31
   8:	92 bd       	out	0x22, r25	; 34
   a:	81 bd       	out	0x21, r24	; 33
   c:	20 bd       	out	0x20, r18	; 32
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	fa 9a       	sbi	0x1f, 2	; 31
  14:	f9 9a       	sbi	0x1f, 1	; 31
  16:	0f be       	out	0x3f, r0	; 63
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	08 95       	ret

eewr_dword_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_atmega1280.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	1f ba       	out	0x1f, r1	; 31
  16:	20 bd       	out	0x20, r18	; 32
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	fa 9a       	sbi	0x1f, 2	; 31
  1e:	f9 9a       	sbi	0x1f, 1	; 31
  20:	0f be       	out	0x3f, r0	; 63
  22:	08 95       	ret

eeupd_dword_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	1f ba       	out	0x1f, r1	; 31
   8:	92 bd       	out	0x22, r25	; 34
   a:	81 bd       	out	0x21, r24	; 33
   c:	20 bd       	out	0x20, r18	; 32
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	fa 9a       	sbi	0x1f, 2	; 31
  14:	f9 9a       	sbi	0x1f, 1	; 31
  16:	0f be       	out	0x3f, r0	; 63
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	08 95       	ret

eewr_dword_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_atmega1281.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	1f ba       	out	0x1f, r1	; 31
  16:	20 bd       	out	0x20, r18	; 32
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	fa 9a       	sbi	0x1f, 2	; 31
  1e:	f9 9a       	sbi	0x1f, 1	; 31
  20:	0f be       	out	0x3f, r0	; 63
  22:	08 95       	ret

eeupd_dword_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	1f ba       	out	0x1f, r1	; 31
   8:	92 bd       	out	0x22, r25	; 34
   a:	81 bd       	out	0x21, r24	; 33
   c:	20 bd       	out	0x20, r18	; 32
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	fa 9a       	sbi	0x1f, 2	; 31
  14:	f9 9a       	sbi	0x1f, 1	; 31
  16:	0f be       	out	0x3f, r0	; 63
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	08 95       	ret

eewr_dword_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_atmega1284.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	1f ba       	out	0x1f, r1	; 31
  16:	20 bd       	out	0x20, r18	; 32
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	fa 9a       	sbi	0x1f, 2	; 31
  1e:	f9 9a       	sbi	0x1f, 1	; 31
  20:	0f be       	out	0x3f, r0	; 63
  22:	08 95       	ret

eeupd_dword_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	1f ba       	out	0x1f, r1	; 31
   8:	92 bd       	out	0x22, r25	; 34
   a:	81 bd       	out	0x21, r24	; 33
   c:	20 bd       	out	0x20, r18	; 32
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	fa 9a       	sbi	0x1f, 2	; 31
  14:	f9 9a       	sbi	0x1f, 1	; 31
  16:	0f be       	out	0x3f, r0	; 63
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	08 95       	ret

eewr_dword_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_atmega1284p.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	1f ba       	out	0x1f, r1	; 31
  16:	20 bd       	out	0x20, r18	; 32
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	fa 9a       	sbi	0x1f, 2	; 31
  1e:	f9 9a       	sbi	0x1f, 1	; 31
  20:	0f be       	out	0x3f, r0	; 63
  22:	08 95       	ret

eeupd_dword_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	1f ba       	out	0x1f, r1	; 31
   8:	92 bd       	out	0x22, r25	; 34
   a:	81 bd       	out	0x21, r24	; 33
   c:	20 bd       	out	0x20, r18	; 32
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	fa 9a       	sbi	0x1f, 2	; 31
  14:	f9 9a       	sbi	0x1f, 1	; 31
  16:	0f be       	out	0x3f, r0	; 63
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	08 95       	ret

eewr_dword_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_atmega128rfa1.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	20 bd       	out	0x20, r18	; 32
  16:	0f b6       	in	r0, 0x3f	; 63
  18:	f8 94       	cli
  1a:	fa 9a       	sbi	0x1f, 2	; 31
  1c:	f9 9a       	sbi	0x1f, 1	; 31
  1e:	0f be       	out	0x3f, r0	; 63
  20:	08 95       	ret

eeupd_dword_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	20 bd       	out	0x20, r18	; 32
   c:	0f b6       	in	r0, 0x3f	; 63
   e:	f8 94       	cli
  10:	fa 9a       	sbi	0x1f, 2	; 31
  12:	f9 9a       	sbi	0x1f, 1	; 31
  14:	0f be       	out	0x3f, r0	; 63
  16:	01 96       	adiw	r24, 0x01	; 1
  18:	08 95       	ret

eewr_dword_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_at90can128.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	1f ba       	out	0x1f, r1	; 31
  16:	20 bd       	out	0x20, r18	; 32
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	fa 9a       	sbi	0x1f, 2	; 31
  1e:	f9 9a       	sbi	0x1f, 1	; 31
  20:	0f be       	out	0x3f, r0	; 63
  22:	08 95       	ret

eeupd_dword_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	1f ba       	out	0x1f, r1	; 31
   8:	92 bd       	out	0x22, r25	; 34
   a:	81 bd       	out	0x21, r24	; 33
   c:	20 bd       	out	0x20, r18	; 32
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	fa 9a       	sbi	0x1f, 2	; 31
  14:	f9 9a       	sbi	0x1f, 1	; 31
  16:	0f be       	out	0x3f, r0	; 63
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	08 95       	ret

eewr_dword_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_at90usb1286.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>

eerd_block_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22

00000004 <eeprom_read_blraw>:
   4:	fc 01       	movw	r30, r24
   6:	f9 99       	sbic	0x1f, 1	; 31
   8:	00 c0       	rjmp	.+0      	; 0xa <eeprom_read_blraw+0x6>
   a:	00 c0       	rjmp	.+0      	; 0xc <eeprom_read_blraw+0x8>
   c:	f2 bd       	out	0x22, r31	; 34
   e:	e1 bd       	out	0x21, r30	; 33
  10:	f8 9a       	sbi	0x1f, 0	; 31
  12:	31 96       	adiw	r30, 0x01	; 1
  14:	00 b4       	in	r0, 0x20	; 32
  16:	0d 92       	st	X+, r0
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_read_blraw+0x1a>
  1e:	08 95       	ret

eerd_byte_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_byte>:
   0:	f9 99       	sbic	0x1f, 1	; 31
   2:	00 c0       	rjmp	.+0      	; 0x4 <eeprom_read_byte+0x4>
   4:	92 bd       	out	0x22, r25	; 34
   6:	81 bd       	out	0x21, r24	; 33
   8:	f8 9a       	sbi	0x1f, 0	; 31
   a:	99 27       	eor	r25, r25
   c:	80 b5       	in	r24, 0x20	; 32
   e:	08 95       	ret

eerd_dword_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_dword>:
   0:	a6 e1       	ldi	r26, 0x16	; 22
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	44 e0       	ldi	r20, 0x04	; 4
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_dword>

eerd_word_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_read_word>:
   0:	a8 e1       	ldi	r26, 0x18	; 24
   2:	b0 e0       	ldi	r27, 0x00	; 0
   4:	42 e0       	ldi	r20, 0x02	; 2
   6:	50 e0       	ldi	r21, 0x00	; 0
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_read_word>

eeupd_block_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_block>:
   0:	dc 01       	movw	r26, r24
   2:	a4 0f       	add	r26, r20
   4:	b5 1f       	adc	r27, r21
   6:	41 50       	subi	r20, 0x01	; 1
   8:	50 40       	sbci	r21, 0x00	; 0
   a:	00 f0       	brcs	.+0      	; 0xc <eeprom_update_block+0xc>
   c:	cb 01       	movw	r24, r22
   e:	84 0f       	add	r24, r20
  10:	95 1f       	adc	r25, r21
  12:	2e 91       	ld	r18, -X
  14:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_block>
  18:	41 50       	subi	r20, 0x01	; 1
  1a:	50 40       	sbci	r21, 0x00	; 0
  1c:	00 f4       	brcc	.+0      	; 0x1e <eeprom_update_block+0x1e>
  1e:	08 95       	ret

eeupd_byte_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_update_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_update_r18+0x4>
   6:	92 bd       	out	0x22, r25	; 34
   8:	81 bd       	out	0x21, r24	; 33
   a:	f8 9a       	sbi	0x1f, 0	; 31
   c:	01 97       	sbiw	r24, 0x01	; 1
   e:	00 b4       	in	r0, 0x20	; 32
  10:	02 16       	cp	r0, r18
  12:	01 f0       	breq	.+0      	; 0x14 <eeprom_update_r18+0x12>
  14:	1f ba       	out	0x1f, r1	; 31
  16:	20 bd       	out	0x20, r18	; 32
  18:	0f b6       	in	r0, 0x3f	; 63
  1a:	f8 94       	cli
  1c:	fa 9a       	sbi	0x1f, 2	; 31
  1e:	f9 9a       	sbi	0x1f, 1	; 31
  20:	0f be       	out	0x3f, r0	; 63
  22:	08 95       	ret

eeupd_dword_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_dword>:
   0:	03 96       	adiw	r24, 0x03	; 3
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
   c:	25 2f       	mov	r18, r21
   e:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_dword>
  12:	24 2f       	mov	r18, r20
  14:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_dword>

eeupd_word_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_update_word>:
   0:	01 96       	adiw	r24, 0x01	; 1
   2:	27 2f       	mov	r18, r23
   4:	0e 94 00 00 	call	0	; 0x0 <eeprom_update_word>
   8:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_update_word>

eewr_block_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_block>:
   0:	dc 01       	movw	r26, r24
   2:	cb 01       	movw	r24, r22
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_block+0x6>
   6:	2d 91       	ld	r18, X+
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_block>
   c:	41 50       	subi	r20, 0x01	; 1
   e:	50 40       	sbci	r21, 0x00	; 0
  10:	00 f4       	brcc	.+0      	; 0x12 <eeprom_write_block+0x12>
  12:	08 95       	ret

eewr_byte_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_byte>:
   0:	26 2f       	mov	r18, r22

00000002 <eeprom_write_r18>:
   2:	f9 99       	sbic	0x1f, 1	; 31
   4:	00 c0       	rjmp	.+0      	; 0x6 <eeprom_write_r18+0x4>
   6:	1f ba       	out	0x1f, r1	; 31
   8:	92 bd       	out	0x22, r25	; 34
   a:	81 bd       	out	0x21, r24	; 33
   c:	20 bd       	out	0x20, r18	; 32
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	fa 9a       	sbi	0x1f, 2	; 31
  14:	f9 9a       	sbi	0x1f, 1	; 31
  16:	0f be       	out	0x3f, r0	; 63
  18:	01 96       	adiw	r24, 0x01	; 1
  1a:	08 95       	ret

eewr_dword_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_dword>:
   0:	24 2f       	mov	r18, r20
   2:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   6:	25 2f       	mov	r18, r21
   8:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_dword>
   c:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_dword>

eewr_word_at90usb1287.o:     формат файла elf32-avr


Дизассемблирование раздела .text.avr-libc:

00000000 <eeprom_write_word>:
   0:	0e 94 00 00 	call	0	; 0x0 <eeprom_write_word>
   4:	27 2f       	mov	r18, r23
   6:	0c 94 00 00 	jmp	0	; 0x0 <eeprom_write_word>
